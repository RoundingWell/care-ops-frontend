{"version":3,"file":"20230623-formapp-185bd5fc1a6f98727dd8.js","mappings":"2RAMA,MAAMA,EAAcC,OAAOC,SAASC,SAASC,QAAQC,UAAUC,KAE/DL,OAAOC,SAASC,SAASC,QAAQC,UAAUC,KAAO,WAChD,GAAIC,KAAKC,QAAQC,KAAM,CACrB,MAAMA,GAAOC,EAAAA,EAAAA,QAAO,CAAC,EAAGH,KAAKC,QAAQC,MACrCF,KAAKI,YAAc,CAAEF,QACrBF,KAAKK,MAAQH,CACf,CACAT,EAAYa,KAAKN,KACnB,EAIA,MAAMO,EAAYb,OAAOc,UAAUD,UACnCb,OAAOc,UAAUD,UAAY,SAASE,GACpC,IAAI,QAAAC,EAAAC,UAAAC,OADyCC,EAAM,IAAAC,MAAAJ,EAAA,EAAAA,EAAA,KAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAANF,EAAME,EAAA,GAAAJ,UAAAI,GAEjD,OAAOR,EAAUE,KAASI,EAC5B,CAAE,MAAOG,IACPC,EAAAA,EAAAA,IAASD,EACX,CACF,EAGA,MAAME,EAAWxB,OAAOc,UAAUU,SAqBlC,SAASC,EAAcC,EAAUC,EAAgBC,EAAUC,GACzD,OAAO7B,OAAO8B,WAAWC,SAASC,cAAc,OAAQ,CAAC,EAAG,CAAEH,gBAAeI,MAAKC,IAChF,MAAMC,GAAaC,EAAAA,EAAAA,QAAOR,GAAU,CAACS,EAAMC,IAClCC,YAAYf,SAASc,EAASJ,EAAKL,YAAY,CAAEF,eAAgBU,EAAMX,eAAgBW,GAC7FV,GAIH,OAFAO,EAAKM,UAEEL,CAAU,GAErB,CA9BAnC,OAAOc,UAAUU,SAAW,SAAST,GACnC,IAAI,QAAA0B,EAAAxB,UAAAC,OADwCC,EAAM,IAAAC,MAAAqB,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANvB,EAAMuB,EAAA,GAAAzB,UAAAyB,GAEhD,OAAOlB,EAAST,KAASI,EAC3B,CAAE,MAAOG,IACPC,EAAAA,EAAAA,IAASD,EACX,CACF,EClCA,MAAMqB,EAAkB3C,OAAO4C,WAAWC,WAAWC,OAC/CC,EAAkB/C,OAAO4C,WAAWC,WAAWG,OAGrD,MAAMC,UAAwBjD,OAAO4C,WAAWC,WAAWK,OACrDC,iBACF,MAAO,EACT,EAGFnD,OAAO4C,WAAWC,WAAWK,OAASD,EAqBtC,MAAMG,UAA2BL,EAC/BM,gBAAyB,QAAAZ,EAAAxB,UAAAC,OAART,EAAM,IAAAW,MAAAqB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANjC,EAAMiC,GAAAzB,UAAAyB,GACrB,OAAOK,EAAgBO,OAAO,CAC5BC,MAAO,YACPC,IAAK,YACLC,KAAM,YACNC,QAAS,SACTC,aAAa,EACbC,cAAe,CACbC,cAAe,kDAEbpD,EACR,CAEIqD,oBACF,OAAOV,EAAmBE,QAC5B,CAEAS,cACEC,SAAM/C,WACNX,KAAK2D,mBAAoBC,EAAAA,EAAAA,UAAS5D,KAAK2D,kBAAmB,IAC5D,CAEAE,YAAYC,EAAaC,GAClB/D,KAAKgE,QAKVhE,KAAK2D,kBAAkBI,EAAaD,GAJlC9D,KAAKiE,oBAKT,CAGAC,eAAeJ,GACb,OAAKA,GAAeA,EAAYlD,OAAS,EAAUuD,QAAQC,QAAQ,IAE5DpE,KAAKkB,SAASlB,KAAKqE,UAAUnE,KAAKoE,OAAQ,CAC/CC,OAAQ,GACRT,eACC,SACL,CAEAH,kBAAkBI,EAAaD,GACxBC,GAAgB/D,KAAKwE,QAK1BxE,KAAKyE,SAAU,EACfzE,KAAKkE,eAAeJ,GACjBnC,MAAK+C,IACJ1E,KAAKyE,SAAU,EACfzE,KAAK2E,SAASD,GAAS,GAAG,IAE3BE,OAAMC,IACL7E,KAAK8E,mBAAmBD,EAAI,KAX9B7E,KAAKiE,oBAaT,EAGF,MAAMc,UAA8BrF,OAAO4C,WAAWC,WAAWyC,OAC3DC,qBACF,OAAIjF,KAAKqE,UAAUa,cAEZxB,MAAMuB,cACf,CAEIE,aAASA,GACXnF,KAAKoF,UAAYD,CACnB,CAEIA,eACF,OAAQnF,KAAKqE,UAAUa,eAAiBlF,KAAKoF,WAAapF,KAAKqF,eACjE,ECtEF,IAAIC,EAsBAC,EApBJ,SAASC,IACPC,OAAOC,SAAS,CAAEC,IAAK,GACzB,CAEA,SAASC,EAAYC,EAAWC,GAC9B,OAAOR,EAAOM,YAAY,CAAEC,YAAWC,SACzC,CAEA,SAASC,EAASF,GAChB,OAAOP,EAAOS,SAAS,CAAEF,aAC3B,CAEA,SAASG,EAAaC,EAAeC,GACnC,OAAOZ,EAAOU,aAAa,CAAEC,gBAAeC,SAC9C,CAEA,SAASC,EAAWC,GAClB,OFjBF,SAA0BA,EAAgBC,GACxC,OAAO3G,OAAO8B,WAAWC,SAASC,cAAc,OAAQ,CAAC,GAAGC,MAAKC,IAC/D,MAAM0E,GAAUxE,EAAAA,EAAAA,QAAOsE,GAAgB,CAACrE,EAAMwE,KACrCpG,EAAAA,EAAAA,QAAO,CAAC,EAAG4B,EAAME,YAAYf,SAASqF,EAAQ3E,EAAKL,YAAYQ,MACrEsE,GAIH,OAFAzE,EAAKM,UAEEoE,CAAO,GAElB,CEOSE,CAAiBJ,EAAgB,CAAEJ,eAAcD,WAAUH,cAAaa,WAAU,IAAEC,UAAW,CAAC,EAAGC,iBAAgBA,EAAAA,GAC5H,CDqDAjH,OAAOkH,IAAI,CACTrE,WAAY,CACVsE,QAjGJ,cAA+BxE,EAC7BoB,cACEC,SAAM/C,WACNX,KAAK8G,SAAU,CACjB,CACA/D,gBAA6B,QAAArC,EAAAC,UAAAC,OAAZmG,EAAU,IAAAjG,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAVgG,EAAUhG,GAAAJ,UAAAI,GACzB,OAAOsB,EAAgBW,OAAO,CAC5BC,MAAO,UACPC,IAAK,UACLC,KAAM,UACNZ,WAAY,GACZyE,OAAO,EACPC,YAAY,EACZJ,QAAS,SACLE,EACR,GAmFEG,UAAWpE,EACXkC,OAAQD,KCjDZ,MAAMoC,GAA2BvD,EAAAA,EAAAA,WAJjC,WACE0B,EAAO8B,QAAQ,0BAA2B7B,EAC5C,GAEsG,KAEhG8B,EAAW,SAASzF,EAAM0F,GAC9B,MAAMpH,EFHR,SAA2B0B,EAAM0F,EAAgBC,EAAehC,GAC9D,OAAOzD,EAAAA,EAAAA,QAAOwF,GAAgB,CAACvF,EAAMC,KACnC,MAAMsE,EAAU1E,EAAKL,YAAY,CAAEF,eAAgBU,EAAMwD,mBAEzD,OADAe,EAAQkB,WAAavF,YAAYf,SALV,iHAKuCoF,GACvDrE,YAAYf,SAASc,EAASsE,IAAYvE,CAAI,GACpDwF,EACL,CEHeE,CAAkB7F,EAAM0F,EAAgBI,gBAAgB9F,EAAKC,WAAW3B,MAAOqF,GAE5F3D,EAAK1B,KAAOA,EACZ0B,EAAK+F,cAAc,CAAEzH,QAAQ,CAAE0H,oBAAoB,EAAMC,gBAAgB,IAEzEtC,EAAiBmC,gBAAgB9F,EAAKC,WAAW3B,MACjDiH,GACF,EAEMW,GAAmBlE,EAAAA,EAAAA,UAASyD,EAAU,KAE5CU,eAAeC,EAAUC,GAAiI,IAAhI,WAAEC,EAAU,WAAEC,EAAU,iBAAEC,EAAgB,SAAEhH,EAAQ,eAAEC,EAAc,SAAEC,EAAQ,eAAEgG,EAAc,eAAElB,EAAc,aAAEiC,GAAcJ,EACtJ,MAAM1G,QAAoB4E,EAAWC,GAE/BvE,EAAauG,SAA0BjH,EAAcC,EAAUC,EAAgBC,EAAUC,GAC/FgE,EAAiBmC,gBAAgB7F,GAEjC,MAAMD,QAAalC,OAAO8B,WAAWC,SAAS6G,eAAe,QAASJ,EAAY,CAChFK,SAAUJ,EACV5G,cACArB,KAAM2B,EACNwF,SAAQmB,EAAAC,GAAuC,IAAtC,mBAAEb,GAAoBY,GAAE,SAAEE,GAAUD,EACvCb,GAAsBhG,EAAK+G,aAG3BD,GAAYA,EAASE,YAEzBd,EAAiBlG,EAAM0F,EACzB,IAGF1F,EAAKiH,UAAW,EAEhBvD,EAAOwD,IAAI,eACXxD,EAAOwD,IAAI,eAEXxD,EAAOyD,GAAG,CACR,cAAcC,GAEZpH,EAAKqH,YAAWC,EAAAA,EAAAA,KAAIF,GAAQG,IACnB,CAAEC,QAASD,OAChB,EACN,EACA,gBACEvH,EAAKyH,QACP,IAGFzH,EAAKmH,GAAG,WAAYvD,GACpB5D,EAAKmH,GAAG,WAAYvD,GAEpB5D,EAAKmH,GAAG,SAAS,KACfzD,EAAO8B,QAAQ,cACfxF,EAAK0H,UAAW,CAAI,IAGtB1H,EAAKmH,GAAG,UAAUQ,IAEhB,IAAK3H,EAAK0H,SAAU,OAQpB,GAPA1H,EAAK0H,UAAW,EAEhBxB,EAAiB0B,SACjBnC,EAASzF,EAAM0F,GACfH,EAAyBqC,SAEzB5H,EAAK6H,aAAY,IACZ7H,EAAK8H,cAAcH,EAASrJ,MAAM,EAAMqJ,EAASrJ,MAEpD,YADA0B,EAAK+H,KAAK,SAIZ,MAAMzJ,EAAO+B,YAAYf,SAASmH,EAAczG,EAAKL,YAAY,CAAEF,eAAgBkI,EAASrJ,SAAY,CAAC,EAEzGoF,EAAO8B,QAAQ,cAAe,CAAEmC,UAAUpJ,EAAAA,EAAAA,QAAO,CAAC,EAAGoJ,EAAU,CAAErJ,UAAU,IAG7EoF,EAAO8B,QAAQ,cACfxF,EAAK0H,UAAW,CAClB,CAEAvB,eAAe6B,EAAaC,GAAiC,IAAhC,WAAE3B,EAAU,eAAE9B,GAAgByD,EACzD,MAAMtI,QAAoB4E,EAAWC,IAErCjG,EAAAA,EAAAA,QAAOoB,EAAa,CAAEuI,WAAW,IAEjCpK,OAAO8B,WAAWC,SAAS6G,eAAe,QAASJ,EAAY,CAAE3G,eACnE,CAEAwG,eAAegC,EAAcC,GAAiD,IAAhD,WAAE9B,EAAU,eAAE7G,EAAc,eAAE+E,GAAgB4D,EAC1E,MAAMzI,QAAoB4E,EAAWC,IAErCjG,EAAAA,EAAAA,QAAOoB,EAAa,CAAE0I,YAAY,IAElCvK,OAAO8B,WAAWC,SAAS6G,eAAe,QAASJ,EAAY,CAC7DK,UAAU,EACV2B,WAAY,OACZ3I,cACArB,KAAMmB,IACLM,MAAKC,IACNA,EAAKmH,GAAG,WAAYvD,GACpB5D,EAAKmH,GAAG,WAAYvD,EAAU,GAElC,CAEAuC,eAAeoC,EAASC,GAAqE,IAApE,WAAElC,EAAU,SAAE9G,EAAQ,eAAEC,EAAc,SAAEC,EAAQ,eAAE8E,GAAgBgE,EACzF,MAAM7I,QAAoB4E,EAAWC,GAE/BvE,QAAmBV,EAAcC,EAAUC,EAAgBC,EAAUC,UAExD7B,OAAO8B,WAAWC,SAAS6G,eAAe,QAASJ,EAAY,CAChF3G,cACArB,KAAM2B,KAGHgH,UAAW,CAClB,CAEA,MAAMwB,EAASC,IAAAA,OAAAA,OAAuB,CACpCC,aACE9E,OAAO+E,iBAAiB,WAAWC,IAAsB,IAArB,KAAEvK,EAAI,OAAEwK,GAAQD,EAE9CC,IAAWjF,OAAOiF,QAAWxK,GAASA,EAAKkJ,SAE/CpJ,KAAK2K,QAAQzK,EAAKkJ,QAASlJ,EAAK0K,KAAK,IACpC,GAEHC,IAAEpF,QAAQsD,GAAG,SAAS,KACpB/I,KAAKoH,QAAQ,QAAQ,IAGvBpH,KAAKoH,QAAQ,UAAW0D,EAAAA,GAAAA,UACxB9K,KAAK+K,gBAAkB,CAAC,EACxB/K,KAAK+I,GAAG,CACN,kBAAmB/I,KAAKgL,iBACxB,cAAehL,KAAKiL,aACpB,eAAgBjL,KAAKkL,eAEzB,EACA9D,QAAQgC,GAAoB,IAAXwB,EAAIjK,UAAAC,OAAA,QAAAuK,IAAAxK,UAAA,GAAAA,UAAA,GAAG,CAAC,EAMvB,OALgB,IAAIwD,SAAQC,IAC1BpE,KAAKoL,KAAKhC,EAAShF,GACnBiH,OAAOC,YAAY,CAAElC,UAASwB,QAAQnF,OAAOiF,OAAO,GAIxD,EACAa,aAAYC,GAA+B,IAA9B,KAAEZ,EAAI,QAAExB,EAAO,UAAEqC,GAAWD,EASvC,OARgB,IAAIrH,SAAQ,CAACC,EAASsH,KACpC1L,KAAK+K,gBAAgBU,GAAa,CAAErH,UAASsH,UAC7CL,OAAOC,YAAY,CACjBlC,UACAwB,MAAMzK,EAAAA,EAAAA,QAAO,CAAEsL,aAAab,IAC3BnF,OAAOiF,OAAO,GAIrB,EACAiB,aAAYC,GAA8B,IAA7B,MAAE9F,EAAK,MAAEqD,EAAK,UAAEsC,GAAWG,EAGtC,IAAK5L,KAAK+K,gBAAgBU,GAAY,OACtC,MAAM,QAAErH,EAAO,OAAEsH,GAAW1L,KAAK+K,gBAAgBU,UAC1CzL,KAAK+K,gBAAgBU,GAC5BtC,EAAQuC,EAAOvC,GAAS/E,EAAQ0B,EAClC,EACAE,aAAa4E,GACX,MACMa,GAAYI,EAAAA,EAAAA,UAAS,aAE3B,OAAO7L,KAAKuL,aAAa,CAAEX,OAAMxB,QAHjB,kBAG0BqC,aAC5C,EACAT,iBAAiBJ,GACf5K,KAAK2L,aAAaf,EACpB,EACA7E,SAAS6E,GACP,MACMa,GAAYI,EAAAA,EAAAA,UAAS,SAE3B,OAAO7L,KAAKuL,aAAa,CAAEX,OAAMxB,QAHjB,cAG0BqC,aAC5C,EACAR,aAAaL,GACX5K,KAAK2L,aAAaf,EACpB,EACAhF,YAAYgF,GACV,MACMa,GAAYI,EAAAA,EAAAA,UAAS,SAE3B,OAAO7L,KAAKuL,aAAa,CAAEX,OAAMxB,QAHjB,eAG0BqC,aAC5C,EACAP,cAAcN,GACZ5K,KAAK2L,aAAaf,EACpB,EACAkB,OAAQ,CACN,WAAY,aACZ,kBAAmB,gBACnB,cAAe,iBACf,+CAAgD,aAElD9D,aACEhI,KAAKoH,QAAQ,mBAAmBzF,KAAKqG,EACvC,EACA4B,gBACE5J,KAAKoH,QAAQ,cAAczF,KAAKiI,EAClC,EACAG,eAAegC,GACb/L,KAAKoH,QAAQ,sBAAuB,CAAE2E,eAAcpK,KAAKoI,EAC3D,EACAI,UAAU6B,EAAQC,EAAWF,GAC3B/L,KAAKoL,KAAK,WAAYjB,GACtBU,IAAE,QAAQqB,OAAQ,mDAAmDF,KAAYC,IAAcF,EAAc,IAAIA,IAAgB,gBACnI,IAGF,SAASI,IACPtB,IAAE,SAASqB,OAAQ,+JAIuBE,EAAAA,GAAAA,QAAAA,QAAAA,qBAE1C9G,EAAS,IAAI+E,EACbC,IAAAA,QAAAA,MAAuB,CAAE+B,WAAW,GACtC,C","sources":["webpack://care-ops-frontend/./src/js/formapp/utils.js","webpack://care-ops-frontend/./src/js/formapp/components.js","webpack://care-ops-frontend/./src/js/formapp.js"],"sourcesContent":["/* global Formio, FormioUtils */\nimport { extend, reduce } from 'underscore';\nimport { addError } from 'js/datadog';\n\n// Note: Allows for setting the submission at form instantiation\n// https://github.com/formio/formio.js/pull/4580\nconst webformInit = Formio.Displays.displays.webform.prototype.init;\n\nFormio.Displays.displays.webform.prototype.init = function() {\n  if (this.options.data) {\n    const data = extend({}, this.options.data);\n    this._submission = { data };\n    this._data = data;\n  }\n  webformInit.call(this);\n};\n\n// NOTE: Evaluator should throw errors\n// https://github.com/formio/formio.js/issues/4613\nconst evaluator = Formio.Evaluator.evaluator;\nFormio.Evaluator.evaluator = function(func, ...params) {\n  try {\n    return evaluator(func, ...params);\n  } catch (e) {\n    addError(e);\n  }\n};\n\n// NOTE: Evaluate should also throw errors\nconst evaluate = Formio.Evaluator.evaluate;\nFormio.Evaluator.evaluate = function(func, ...params) {\n  try {\n    return evaluate(func, ...params);\n  } catch (e) {\n    addError(e);\n  }\n};\n\nfunction getScriptContext(contextScripts, baseContext) {\n  return Formio.createForm(document.createElement('div'), {}).then(form => {\n    const context = reduce(contextScripts, (memo, script) => {\n      return extend({}, memo, FormioUtils.evaluate(script, form.evalContext(memo)));\n    }, baseContext);\n\n    form.destroy();\n\n    return context;\n  });\n}\n\nfunction getSubmission(formData, formSubmission, reducers, evalContext) {\n  return Formio.createForm(document.createElement('div'), {}, { evalContext }).then(form => {\n    const submission = reduce(reducers, (memo, reducer) => {\n      return FormioUtils.evaluate(reducer, form.evalContext({ formSubmission: memo, formData })) || memo;\n    }, formSubmission);\n\n    form.destroy();\n\n    return submission;\n  });\n}\n\nconst hasChangedFunction = 'return function hasChanged(key) { return !_.isEqual(_.get(formSubmission, key), _.get(prevSubmission, key)); }';\n\nfunction getChangeReducers(form, changeReducers, curSubmission, prevSubmission) {\n  return reduce(changeReducers, (memo, reducer) => {\n    const context = form.evalContext({ formSubmission: memo, prevSubmission });\n    context.hasChanged = FormioUtils.evaluate(hasChangedFunction, context);\n    return FormioUtils.evaluate(reducer, context) || memo;\n  }, curSubmission);\n}\n\nexport {\n  getScriptContext,\n  getSubmission,\n  getChangeReducers,\n};\n","/* global Formio */\nimport { debounce } from 'underscore';\nconst NestedComponent = Formio.Components.components.nested;\nconst SelectComponent = Formio.Components.components.select;\n\n// Modifies the emptyValue to avoid error on php mutating {} to []\nclass SurveyComponent extends Formio.Components.components.survey {\n  get emptyValue() {\n    return [];\n  }\n}\n\nFormio.Components.components.survey = SurveyComponent;\n\nclass SnippetComponent extends NestedComponent {\n  constructor(...args) {\n    super(...args);\n    this.noField = true;\n  }\n  static schema(...extendArgs) {\n    return NestedComponent.schema({\n      label: 'Snippet',\n      key: 'snippet',\n      type: 'snippet',\n      components: [],\n      input: false,\n      persistent: false,\n      snippet: null,\n    }, ...extendArgs);\n  }\n}\n\n// NOTE: Outside of the schema much of the logic is slightly modified from SelectComponent\nclass DirectoryComponent extends SelectComponent {\n  static schema(...extend) {\n    return SelectComponent.schema({\n      label: 'Directory',\n      key: 'directory',\n      type: 'directory',\n      dataSrc: 'custom',\n      searchField: true,\n      customOptions: {\n        noChoicesText: 'Type a minimum of 3 characters for results',\n      },\n    }, ...extend);\n  }\n\n  get defaultSchema() {\n    return DirectoryComponent.schema();\n  }\n\n  constructor(...args) {\n    super(...args);\n    this.updateCustomItems = debounce(this.updateCustomItems, 300);\n  }\n\n  updateItems(searchInput, forceUpdate) {\n    if (!this.visible) {\n      this.itemsLoadedResolve();\n      return;\n    }\n\n    this.updateCustomItems(forceUpdate, searchInput);\n  }\n\n  // NOTE: Biggest modification is exposing the searchInput to the custom code\n  getCustomItems(searchInput) {\n    if (!searchInput || searchInput.length < 3) return Promise.resolve([]);\n\n    return this.evaluate(this.component.data.custom, {\n      values: [],\n      searchInput,\n    }, 'values');\n  }\n\n  updateCustomItems(forceUpdate, searchInput) {\n    if (!forceUpdate && !this.active) {\n      this.itemsLoadedResolve();\n      return;\n    }\n\n    this.loading = true;\n    this.getCustomItems(searchInput)\n      .then(items => {\n        this.loading = false;\n        this.setItems(items || []);\n      })\n      .catch(err => {\n        this.handleLoadingError(err);\n      });\n  }\n}\n\nclass CustomButtonComponent extends Formio.Components.components.button {\n  get shouldDisabled() {\n    if (this.component.alwaysEnable) return false;\n\n    return super.shouldDisabled;\n  }\n\n  set disabled(disabled) {\n    this._disabled = disabled;\n  }\n\n  get disabled() {\n    return !this.component.alwaysEnable && (this._disabled || this.parentDisabled);\n  }\n}\n\nFormio.use({\n  components: {\n    snippet: SnippetComponent,\n    directory: DirectoryComponent,\n    button: CustomButtonComponent,\n  },\n});\n","/* global Formio, FormioUtils */\nimport 'formiojs/dist/formio.form.min';\nimport 'formiojs/dist/formio.form.css';\nimport '@fortawesome/fontawesome-pro/scss/fontawesome.scss';\nimport '@fortawesome/fontawesome-pro/scss/v4-shims.scss';\nimport '@fortawesome/fontawesome-pro/scss/solid.scss';\nimport 'scss/formapp/bootstrap.min.css';\n\nimport 'scss/formapp-core.scss';\n\nimport { extend, map, debounce, uniqueId } from 'underscore';\nimport $ from 'jquery';\nimport Backbone from 'backbone';\nimport Handlebars from 'handlebars/runtime';\nimport parsePhoneNumber from 'libphonenumber-js/min';\n\nimport intl from 'js/i18n';\n\nimport { versions } from './config';\n\nimport {\n  getScriptContext,\n  getSubmission,\n  getChangeReducers,\n} from 'js/formapp/utils';\n\nimport 'js/formapp/components';\n\nimport 'scss/formapp/comment.scss';\nimport 'scss/formapp/form.scss';\nimport 'scss/formapp/formio-overrides.scss';\nimport 'scss/formapp/print.scss';\nimport 'scss/formapp/pdf.scss';\n\nimport 'scss/modules/loader.scss';\n\nlet router;\n\nfunction scrollTop() {\n  window.scrollTo({ top: 0 });\n}\n\nfunction updateField(fieldName, value) {\n  return router.updateField({ fieldName, value });\n}\n\nfunction getField(fieldName) {\n  return router.getField({ fieldName });\n}\n\nfunction getDirectory(directoryName, query) {\n  return router.getDirectory({ directoryName, query });\n}\n\nfunction getContext(contextScripts) {\n  return getScriptContext(contextScripts, { getDirectory, getField, updateField, Handlebars, TEMPLATES: {}, parsePhoneNumber });\n}\n\nlet prevSubmission;\n\nfunction updateSubmission() {\n  router.request('update:storedSubmission', prevSubmission);\n}\n\nconst updateSubmissionDebounce = debounce(updateSubmission, /* istanbul ignore next */ _TEST_ ? 100 : 2000);\n\nconst onChange = function(form, changeReducers) {\n  const data = getChangeReducers(form, changeReducers, structuredClone(form.submission.data), prevSubmission);\n\n  form.data = data;\n  form.setSubmission({ data }, { fromChangeReducers: true, fromSubmission: false });\n\n  prevSubmission = structuredClone(form.submission.data);\n  updateSubmissionDebounce();\n};\n\nconst onChangeDebounce = debounce(onChange, 100);\n\nasync function renderForm({ definition, isReadOnly, storedSubmission, formData, formSubmission, reducers, changeReducers, contextScripts, beforeSubmit }) {\n  const evalContext = await getContext(contextScripts);\n\n  const submission = storedSubmission || await getSubmission(formData, formSubmission, reducers, evalContext);\n  prevSubmission = structuredClone(submission);\n\n  const form = await Formio.createForm(document.getElementById('root'), definition, {\n    readOnly: isReadOnly,\n    evalContext,\n    data: submission,\n    onChange({ fromChangeReducers }, { instance }) {\n      if (fromChangeReducers && form.initialized) return;\n\n      // Prevents clearing submission on add/edit of editgrid\n      if (instance && instance.inEditGrid) return;\n\n      onChangeDebounce(form, changeReducers);\n    },\n  });\n\n  form.nosubmit = true;\n\n  router.off('form:submit');\n  router.off('form:errors');\n\n  router.on({\n    'form:errors'(errors) {\n      // NOTE: maps errors due to https://github.com/formio/formio.js/issues/3970\n      form.showErrors(map(errors, error => {\n        return { message: error };\n      }), true);\n    },\n    'form:submit'() {\n      form.submit();\n    },\n  });\n\n  form.on('prevPage', scrollTop);\n  form.on('nextPage', scrollTop);\n\n  form.on('error', () => {\n    router.request('ready:form');\n    form._isReady = true;\n  });\n\n  form.on('submit', response => {\n    // Prevents submission after a success\n    if (!form._isReady) return;\n    form._isReady = false;\n    // Always run one last change event on submit\n    onChangeDebounce.cancel();\n    onChange(form, changeReducers);\n    updateSubmissionDebounce.cancel();\n\n    form.setPristine(false);\n    if (!form.checkValidity(response.data, true, response.data)) {\n      form.emit('error');\n      return;\n    }\n\n    const data = FormioUtils.evaluate(beforeSubmit, form.evalContext({ formSubmission: response.data })) || {};\n\n    router.request('submit:form', { response: extend({}, response, { data }) });\n  });\n\n  router.request('ready:form');\n  form._isReady = true;\n}\n\nasync function renderPreview({ definition, contextScripts }) {\n  const evalContext = await getContext(contextScripts);\n\n  extend(evalContext, { isPreview: true });\n\n  Formio.createForm(document.getElementById('root'), definition, { evalContext });\n}\n\nasync function renderResponse({ definition, formSubmission, contextScripts }) {\n  const evalContext = await getContext(contextScripts);\n\n  extend(evalContext, { isResponse: true });\n\n  Formio.createForm(document.getElementById('root'), definition, {\n    readOnly: true,\n    renderMode: 'form',\n    evalContext,\n    data: formSubmission,\n  }).then(form => {\n    form.on('prevPage', scrollTop);\n    form.on('nextPage', scrollTop);\n  });\n}\n\nasync function renderPdf({ definition, formData, formSubmission, reducers, contextScripts }) {\n  const evalContext = await getContext(contextScripts);\n\n  const submission = await getSubmission(formData, formSubmission, reducers, evalContext);\n\n  const form = await Formio.createForm(document.getElementById('root'), definition, {\n    evalContext,\n    data: submission,\n  });\n\n  form.nosubmit = true;\n}\n\nconst Router = Backbone.Router.extend({\n  initialize() {\n    window.addEventListener('message', ({ data, origin }) => {\n      /* istanbul ignore next: security check */\n      if (origin !== window.origin || !data || !data.message) return;\n\n      this.trigger(data.message, data.args);\n    }, false);\n\n    $(window).on('focus', () => {\n      this.request('focus');\n    });\n\n    this.request('version', versions.frontend);\n    this.requestResolves = {};\n    this.on({\n      'fetch:directory': this.onFetchDirectory,\n      'fetch:field': this.onFetchField,\n      'update:field': this.onUpdateField,\n    });\n  },\n  request(message, args = {}) {\n    const request = new Promise(resolve => {\n      this.once(message, resolve);\n      parent.postMessage({ message, args }, window.origin);\n    });\n\n    return request;\n  },\n  requestValue({ args, message, requestId }) {\n    const request = new Promise((resolve, reject) => {\n      this.requestResolves[requestId] = { resolve, reject };\n      parent.postMessage({\n        message,\n        args: extend({ requestId }, args),\n      }, window.origin);\n    });\n\n    return request;\n  },\n  resolveValue({ value, error, requestId }) {\n    // Prevents an edge case where a request is resolved\n    // after the form is submitted and reloaded\n    if (!this.requestResolves[requestId]) return;\n    const { resolve, reject } = this.requestResolves[requestId];\n    delete this.requestResolves[requestId];\n    error ? reject(error) : resolve(value);\n  },\n  getDirectory(args) {\n    const message = 'fetch:directory';\n    const requestId = uniqueId('directory');\n\n    return this.requestValue({ args, message, requestId });\n  },\n  onFetchDirectory(args) {\n    this.resolveValue(args);\n  },\n  getField(args) {\n    const message = 'fetch:field';\n    const requestId = uniqueId('field');\n\n    return this.requestValue({ args, message, requestId });\n  },\n  onFetchField(args) {\n    this.resolveValue(args);\n  },\n  updateField(args) {\n    const message = 'update:field';\n    const requestId = uniqueId('field');\n\n    return this.requestValue({ args, message, requestId });\n  },\n  onUpdateField(args) {\n    this.resolveValue(args);\n  },\n  routes: {\n    'formapp/': 'renderForm',\n    'formapp/preview': 'renderPreview',\n    'formapp/:id': 'renderResponse',\n    'formapp/pdf/:formId/:patientId(/:responseId)': 'renderPdf',\n  },\n  renderForm() {\n    this.request('fetch:form:data').then(renderForm);\n  },\n  renderPreview() {\n    this.request('fetch:form').then(renderPreview);\n  },\n  renderResponse(responseId) {\n    this.request('fetch:form:response', { responseId }).then(renderResponse);\n  },\n  renderPdf(formId, patientId, responseId) {\n    this.once('form:pdf', renderPdf);\n    $('body').append(`<iframe class=\"iframe-hidden\" src=\"/formservice/${ formId }/${ patientId }${ responseId ? `/${ responseId }` : '' }\"></iframe>`);\n  },\n});\n\nfunction startFormApp() {\n  $('#root').append(`\n    <div class=\"loader__bar js-progress-bar\">\n      <div class=\"loader__bar-progress--loop\"></div>\n    </div>\n    <div class=\"loader__text js-loading\">${ intl.regions.preload.loading }</div>\n  `);\n  router = new Router();\n  Backbone.history.start({ pushState: true });\n}\n\nexport {\n  startFormApp,\n};\n"],"names":["webformInit","Formio","Displays","displays","webform","prototype","init","this","options","data","extend","_submission","_data","call","evaluator","Evaluator","func","_len","arguments","length","params","Array","_key","e","addError","evaluate","getSubmission","formData","formSubmission","reducers","evalContext","createForm","document","createElement","then","form","submission","reduce","memo","reducer","FormioUtils","destroy","_len2","_key2","NestedComponent","Components","components","nested","SelectComponent","select","SurveyComponent","survey","emptyValue","DirectoryComponent","static","schema","label","key","type","dataSrc","searchField","customOptions","noChoicesText","defaultSchema","constructor","super","updateCustomItems","debounce","updateItems","searchInput","forceUpdate","visible","itemsLoadedResolve","getCustomItems","Promise","resolve","component","custom","values","active","loading","items","setItems","catch","err","handleLoadingError","CustomButtonComponent","button","shouldDisabled","alwaysEnable","disabled","_disabled","parentDisabled","router","prevSubmission","scrollTop","window","scrollTo","top","updateField","fieldName","value","getField","getDirectory","directoryName","query","getContext","contextScripts","baseContext","context","script","getScriptContext","Handlebars","TEMPLATES","parsePhoneNumber","use","snippet","noField","extendArgs","input","persistent","directory","updateSubmissionDebounce","request","onChange","changeReducers","curSubmission","hasChanged","getChangeReducers","structuredClone","setSubmission","fromChangeReducers","fromSubmission","onChangeDebounce","async","renderForm","_ref","definition","isReadOnly","storedSubmission","beforeSubmit","getElementById","readOnly","_ref2","_ref3","instance","initialized","inEditGrid","nosubmit","off","on","errors","showErrors","map","error","message","submit","_isReady","response","cancel","setPristine","checkValidity","emit","renderPreview","_ref4","isPreview","renderResponse","_ref5","isResponse","renderMode","renderPdf","_ref6","Router","Backbone","initialize","addEventListener","_ref7","origin","trigger","args","$","versions","requestResolves","onFetchDirectory","onFetchField","onUpdateField","undefined","once","parent","postMessage","requestValue","_ref8","requestId","reject","resolveValue","_ref9","uniqueId","routes","responseId","formId","patientId","append","startFormApp","intl","pushState"],"sourceRoot":""}