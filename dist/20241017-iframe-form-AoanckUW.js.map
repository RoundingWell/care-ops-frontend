{"version":3,"file":"20241017-iframe-form-AoanckUW.js","sources":["../node_modules/backbone.eventrouter/dist/backbone.eventrouter.js","../src/js/base/routerapp.js","../src/js/utils/formatting/key-codes.js","../src/js/behaviors/iframe-form.js"],"sourcesContent":["/**\n * backbone.eventrouter - A highly opinionated, simplistic Backbone.Router coupled with a Backbone.Radio.Channel\n * @version v1.1.0\n * @link https://github.com/RoundingWellOS/backbone.eventrouter\n * @license MIT\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('underscore'), require('backbone'), require('backbone.radio')) :\n  typeof define === 'function' && define.amd ? define(['underscore', 'backbone', 'backbone.radio'], factory) :\n  (global.Backbone = global.Backbone || {}, global.Backbone.EventRouter = factory(global._,global.Backbone,global.Radio));\n}(this, function (_,Backbone,backbone_radio) { 'use strict';\n\n  _ = 'default' in _ ? _['default'] : _;\n  Backbone = 'default' in Backbone ? Backbone['default'] : Backbone;\n\n  // eslint-disable-line\n\n  // https://github.com/jashkenas/backbone/blob/1.2.1/backbone.js#L1425\n  var namedParamRegex = /(\\(\\?)?:\\w+/;\n\n  /**\n   * Backbone.Router coupled with a Backbone.Radio Channel.\n   *\n   * @public\n   * @class EventRouter\n   * @memberOf Backbone\n   */\n  var EventRouter = Backbone.EventRouter = Backbone.Router.extend({\n\n    /**\n     * @public\n     * @constructs EventRouter\n     * @param {Object} [options] - Settings for the EventRouter\n     * @param {Boolean} [options.channelName]\n     * @param {Boolean} [options.routeTriggers]\n     */\n    constructor: function constructor(options) {\n      _.extend(this, _.pick(options, ['channelName', 'routeTriggers']));\n\n      this.cid = _.uniqueId('bber');\n\n      this._ch = Backbone.Radio.channel(_.result(this, 'channelName'));\n\n      this.listenTo(this._ch, 'all', this.navigateFromEvent);\n\n      // Backbone.Router routes are added first\n      // Routes can be added after the triggerRoutes with the Backbone.Router API\n      Backbone.Router.apply(this, arguments);\n\n      this._initRoutes();\n    },\n\n\n    /**\n     * The Radio Channel name.\n     *\n     * @type {String}\n     * @default 'event-router'\n     */\n    channelName: 'event-router',\n\n    /**\n     * Get the router's Radio channel instance\n     *\n     * @public\n     * @method getChannel\n     * @memberOf EventRouter\n     * @returns {Backbone.Radio.Channel}\n     */\n    getChannel: function getChannel() {\n      return this._ch;\n    },\n\n\n    /**\n     * For each routeTrigger it adds a route to Backbone.Router\n     *\n     * @private\n     * @method _initRoutes\n     * @memberOf EventRouter\n     */\n    _initRoutes: function _initRoutes() {\n      this._routeTriggers = _.result(this, 'routeTriggers', {});\n\n      _.each(this._routeTriggers, this._addRouteTrigger, this);\n    },\n\n\n    /**\n     * Adds a route(s) to Backbone.Router which on route triggers\n     * the appropriate event\n     *\n     * @private\n     * @method _addRouteTrigger\n     * @param {Array|String} routes - Route string or array of route strings\n     * @param {String} event - Event string to trigger on route\n     * @memberOf EventRouter\n     */\n    _addRouteTrigger: function _addRouteTrigger(routes, event) {\n      // handle any route as an array by default for the _.each\n      routes = _.isArray(routes) ? routes : [routes];\n\n      _.each(routes, function (route) {\n        this.route(route, event, _.bind(this._ch.trigger, this._ch, event));\n      }, this);\n    },\n\n\n    /**\n     * Adds a routeTrigger, and route(s) to Backbone.Router\n     * which on route triggers the appropriate event.\n     *\n     * @public\n     * @method addRouteTrigger\n     * @param {Array|String} routes - Route string or array of route strings\n     * @param {String} event - Event string to trigger on route\n     * @memberOf EventRouter\n     * @returns {EventRouter}\n     */\n    addRouteTrigger: function addRouteTrigger(routes, event) {\n      this._routeTriggers[event] = routes;\n      this._addRouteTrigger(routes, event);\n\n      return this;\n    },\n\n\n    /**\n     * Overrides `Backbone.Router.route()\n     * Like Backbone.Router.Route but with before events\n     * It also temporarily stores the event for understanding\n     * what route is currently being handled.\n     *\n     * @public\n     * @method route\n     * @param {String} route - Route string\n     * @param {String} [name] - Name of route\n     * @param {String} callback - Function called on route\n     * @event EventRouter#before:route - passes route name and route arguments\n     * @event EventRouter#before:route:{event_name} - passes route arguments\n     * @memberOf EventRouter\n     * @returns {EventRouter}\n     */\n    route: function route(_route, name, callback) {\n      var bbRoute = Backbone.Router.prototype.route;\n\n      if (_.isFunction(name) || !callback) {\n        _route = bbRoute.call(this, _route, name, callback);\n        Backbone.history.handlers[0].cid = this.cid;\n        return _route;\n      }\n\n      var wrappedCallback = _.bind(function () {\n        var args = _.drop(arguments, 0);\n\n        // Trigger before: events that match currently triggered events\n        this.trigger('before:route', name, args);\n        this.trigger.apply(this, ['before:route:' + name].concat(args));\n\n        this._storeRouteTrigger([name].concat(args));\n        callback.apply(this, args);\n        this._clearRouteTrigger();\n      }, this);\n\n      _route = bbRoute.call(this, _route, name, wrappedCallback);\n      Backbone.history.handlers[0].cid = this.cid;\n      return _route;\n    },\n\n\n    /**\n     * Stores the route name and route arguments on a stack\n     *\n     * @private\n     * @method _storeRouteTrigger\n     * @param {Array} args - Array of route name and route arguments\n     * @memberOf EventRouter\n     */\n    _storeRouteTrigger: function _storeRouteTrigger(args) {\n      this._routeArgs = this._routeArgs || [];\n      this._routeArgs.push(args);\n    },\n\n\n    /**\n     * Gets the top of the triggered route store stack\n     *\n     * @private\n     * @method _getCurrentRouteTrigger\n     * @memberOf EventRouter\n     * @returns {Array}\n     */\n    _getCurrentRouteTrigger: function _getCurrentRouteTrigger() {\n      return _.last(this._routeArgs) || [];\n    },\n\n\n    /**\n     * Pops the latests route triggered off of the store stack\n     *\n     * @private\n     * @method _clearRouteTrigger\n     * @memberOf EventRouter\n     */\n    _clearRouteTrigger: function _clearRouteTrigger() {\n      this._routeArgs.pop();\n    },\n\n\n    /**\n     * Checks to see if the current event being tests is the latest\n     * route being handled by comparing the route name and arguments\n     *\n     * @private\n     * @method _isTriggeredFromRoute\n     * @memberOf EventRouter\n     * @returns {Boolean}\n     */\n    _isTriggeredFromRoute: function _isTriggeredFromRoute() {\n      var currentRoute = this._getCurrentRouteTrigger();\n\n      if (arguments.length !== currentRoute.length) {\n        return false;\n      }\n\n      return arguments.length === _.union(arguments, currentRoute).length;\n    },\n\n\n    /**\n     * Takes a event string and any arguments passed to that event\n     * And if not initiated by a route, translates the event into a\n     * URL and navigates to it without re-triggering the route\n     *\n     * @public\n     * @method navigateFromEvent\n     * @param {String} event - Event string\n     * @event EventRouter#noMatch - passes route arguments\n     * @memberOf EventRouter\n     * @returns {EventRouter}\n     */\n    navigateFromEvent: function navigateFromEvent(event) {\n      var route = this.getDefaultRoute(event);\n\n      // if no matching route exists do nothing\n      if (!route) {\n        var args = _.drop(arguments, 0);\n        this.trigger.apply(this, ['noMatch'].concat(args));\n        return this;\n      }\n\n      if (this._isTriggeredFromRoute.apply(this, arguments)) {\n        return this;\n      }\n\n      var eventArgs = _.drop(arguments, 1);\n\n      var translatedRoute = this.translateRoute(route, eventArgs);\n\n      // update URL without triggering the route\n      return this.navigate(translatedRoute, { trigger: false });\n    },\n\n\n    /**\n     * Get the default route string\n     * Either the first of the array or the passed in event if singular\n     *\n     * @public\n     * @method getDefaultRoute\n     * @memberOf EventRouter\n     * @returns {String}\n     */\n    getDefaultRoute: function getDefaultRoute(event) {\n      var routes = this._routeTriggers[event];\n\n      return _.isArray(routes) ? routes[0] : routes;\n    },\n\n\n    /**\n     * Finds the next name params (ie: :param) and replaces it with the arg\n     *\n     * @private\n     * @method _replaceParam\n     * @param {String} route - Route string\n     * @param {String|Number} arg - value to replace named param\n     * @memberOf EventRouter\n     * @returns {String}\n     */\n    _replaceParam: function _replaceParam(route, arg) {\n      return route.replace(namedParamRegex, arg);\n    },\n\n\n    /**\n     * Takes a route string and an array or arguments\n     * and returns a url with the named params replaced with the argument values\n     *\n     * @public\n     * @method translateRoute\n     * @param {String} route - Route string\n     * @param {Array} eventArgs - Passed event arguments\n     * @memberOf EventRouter\n     * @returns {String}\n     */\n    translateRoute: function translateRoute(route, eventArgs) {\n      return _.reduce(eventArgs, this._replaceParam, route);\n    },\n\n\n    /**\n     * Destroys the eventrouter and removes any registered route handlers.\n     *\n     * @public\n     * @method destroy\n     * @memberOf EventRouter\n     * @returns {EventRouter}\n     */\n    destroy: function destroy() {\n      Backbone.history.handlers = _.reject(Backbone.history.handlers, { cid: this.cid });\n      this.stopListening();\n      this.trigger('destroy', this);\n      return this;\n    }\n  });\n\n  return EventRouter;\n\n}));\n\n//# sourceMappingURL=backbone.eventrouter.js.map\n","import { extend, isEqual, isFunction, partial, reduce, rest, result } from 'underscore';\nimport Backbone from 'backbone';\nimport Radio from 'backbone.radio';\nimport EventRouter from 'backbone.eventrouter';\nimport App from './app';\n\nexport default App.extend({\n  // Set in router apps for nav selection\n  routerAppName: '',\n\n  constructor: function() {\n    this.initRouter();\n\n    // if the app does not handle a given route, stop\n    this.listenTo(this.router, 'noMatch', this.onNoMatch);\n\n    this.on('before:stop', this.stopCurrent);\n\n    App.apply(this, arguments);\n  },\n\n  initRouter() {\n    this._routes = result(this, 'eventRoutes');\n\n    const routeTriggers = this.getRouteTriggers();\n\n    this.router = new EventRouter({ routeTriggers });\n\n    this.on('before:destroy', () => this.router.destroy());\n\n    this.bindRouteEvents();\n  },\n\n  onNoMatch() {\n    this.stop();\n    this._currentRoute = null;\n  },\n\n  // For each route in the hash creates a routeTriggers hash\n  getRouteTriggers() {\n    return reduce(this._routes, function(routeTriggers, { route, root }, eventName) {\n      if (root) {\n        routeTriggers[eventName] = route;\n        return routeTriggers;\n      }\n\n      const currentWorkspace = Radio.request('workspace', 'current');\n      const workspace = currentWorkspace.get('slug');\n      routeTriggers[eventName] = route ? `${ workspace }/${ route }` : workspace;\n\n      return routeTriggers;\n    }, {});\n  },\n\n  getEventActions(eventRoutes, routeAction) {\n    return reduce(eventRoutes, function(eventActions, { action }, eventName) {\n      eventActions[eventName] = partial(routeAction, eventName, action);\n\n      return eventActions;\n    }, {});\n  },\n\n  // handle route events\n  // accepts a hash of 'some:event' : 'actionFunction'\n  // listens to the router channel and calls the appropriate\n  // action via the routeAction handler\n  bindRouteEvents() {\n    const eventActions = this.getEventActions(this._routes, this.routeAction);\n\n    this.listenTo(this.router.getChannel(), eventActions);\n  },\n\n  // applies the route's action\n  // starts this routerapp if necessary\n  // triggers before and after events\n  routeAction(event, action, ...args) {\n    if (!this.isRunning()) {\n      this.start();\n    }\n\n    this.triggerMethod('before:appRoute', event, ...args);\n\n    Radio.request('nav', 'select', this.routerAppName, event, args);\n    Radio.request('sidebar', 'close');\n\n    this.setLatestList(event, args);\n\n    this._currentRoute = {\n      event,\n      eventArgs: args,\n    };\n\n    if (!isFunction(action)) {\n      action = this[action];\n    }\n\n    action.apply(this, args);\n\n    this.triggerMethod('appRoute', event, ...args);\n  },\n\n  setLatestList(event, eventArgs) {\n    if (this._routes[event].isList) {\n      Radio.request('history', 'set:latestList', event, eventArgs);\n      return;\n    }\n\n    if (!this._routes[event].clearLatestList) return;\n\n    Radio.request('history', 'set:latestList', false);\n  },\n\n  // handler that ensures one running app\n  startCurrent(appName, options) {\n    this.stopCurrent();\n\n    this._currentAppName = appName;\n    this._currentAppOptions = options;\n\n    options = extend({\n      currentRoute: this._currentRoute,\n    }, options);\n\n    const app = this.startChildApp(appName, options);\n\n    this._current = app;\n\n    return app;\n  },\n\n  startRoute(appName, options) {\n    if (this.isCurrent(appName, options)) {\n      return this.getCurrent().startRoute(this.getCurrentRoute());\n    }\n    return this.startCurrent(appName, options);\n  },\n\n  getCurrent() {\n    return this._current;\n  },\n\n  isCurrent(appName, options) {\n    return (appName === this._currentAppName)\n      && (isEqual(options, this._currentAppOptions));\n  },\n\n  getCurrentRoute() {\n    return this._currentRoute;\n  },\n\n  stopCurrent() {\n    if (!this._current) return;\n\n    this._current.stop();\n    this._current = null;\n    this._currentAppName = null;\n    this._currentAppOptions = null;\n  },\n\n  // takes an event and translates data into the applicable url fragment\n  translateEvent(event) {\n    const route = this.router.getDefaultRoute(event);\n\n    return this.router.translateRoute(route, rest(arguments));\n  },\n\n  // takes an event and changes the URL without triggering or adding to the history\n  replaceRoute() {\n    const url = this.translateEvent.apply(this, arguments);\n\n    this.replaceUrl(url);\n  },\n\n  navigateRoute() {\n    const url = this.translateEvent.apply(this, arguments);\n\n    Backbone.history.navigate(url, { trigger: false });\n  },\n\n  replaceUrl(url) {\n    Backbone.history.navigate(url, { trigger: false, replace: true });\n  },\n});\n","export default {\n  BACKSPACE_KEY: 8,\n  TAB_KEY: 9,\n  ENTER_KEY: 13,\n  SHIFT_KEY: 16,\n  ESCAPE_KEY: 27,\n  LEFT_KEY: 37,\n  UP_KEY: 38,\n  RIGHT_KEY: 39,\n  DOWN_KEY: 40,\n  AT_KEY_SHIFT: 50,\n};\n","import $ from 'jquery';\nimport { keys } from 'underscore';\nimport Radio from 'backbone.radio';\nimport { Behavior } from 'marionette';\n\nexport default Behavior.extend({\n  ui: {\n    iframe: 'iframe',\n  },\n  onInitialize() {\n    this.channel = Radio.channel(`form${ this.view.model.id }`);\n  },\n  replies: {\n    send(message, args = {}) {\n      const iframeWindow = this.ui.iframe[0].contentWindow;\n      iframeWindow.postMessage({ message, args }, window.origin);\n    },\n    focus() {\n      Radio.trigger('user-activity', 'iframe:focus', this.ui.iframe[0]);\n    },\n  },\n  onAttach() {\n    this.channel.reply(this.replies, this);\n\n    $(window).on('message', ({ originalEvent }) => {\n      const { data, origin } = originalEvent;\n      /* istanbul ignore next: security check */\n      if (origin !== window.origin || !data || !data.message) return;\n\n      this.channel.request(data.message, data.args);\n    });\n  },\n  onBeforeDetach() {\n    $(window).off('message');\n    this.channel.stopReplying(keys(this.replies).join(' '));\n  },\n});\n"],"names":["global","factory","module","require$$0","require$$1","require$$2","this","_","Backbone","backbone_radio","namedParamRegex","EventRouter","options","routes","event","route","_route","name","callback","bbRoute","wrappedCallback","args","currentRoute","eventArgs","translatedRoute","arg","RouterApp","App","result","routeTriggers","reduce","root","eventName","workspace","Radio","eventRoutes","routeAction","eventActions","action","partial","isFunction","appName","extend","app","isEqual","rest","url","keyCodes","IframeFormBehavior","Behavior","message","$","originalEvent","data","origin","keys"],"mappings":"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","x_google_ignoreList":[0]}