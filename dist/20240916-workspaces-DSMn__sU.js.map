{"version":3,"file":"20240916-workspaces-DSMn__sU.js","sources":["../node_modules/uuid/dist/esm-browser/nil.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/parse.js","../node_modules/uuid/dist/esm-browser/v35.js","../node_modules/uuid/dist/esm-browser/sha1.js","../node_modules/uuid/dist/esm-browser/v5.js","../src/js/static.js","../src/js/entities-service/entities/actions.js","../src/js/entities-service/actions.js","../src/js/entities-service/entities/clinicians.js","../src/js/entities-service/clinicians.js","../src/js/entities-service/entities/comments.js","../src/js/entities-service/comments.js","../src/js/entities-service/entities/dashboards.js","../src/js/entities-service/dashboards.js","../src/js/entities-service/entities/directories.js","../src/js/entities-service/directories.js","../src/js/entities-service/entities/events.js","../src/js/entities-service/events.js","../src/js/entities-service/entities/files.js","../src/js/entities-service/files.js","../src/js/entities-service/entities/flows.js","../src/js/entities-service/flows.js","../src/js/utils/sorting.js","../src/js/entities-service/entities/form-responses.js","../src/js/entities-service/form-responses.js","../src/js/entities-service/graphql.js","../src/js/entities-service/entities/patient-fields.js","../src/js/entities-service/patient-fields.js","../src/js/entities-service/entities/patients.js","../src/js/entities-service/patients.js","../src/js/entities-service/entities/patient-search-results.js","../src/js/entities-service/patient-search-results.js","../src/js/utils/formatting/collection-of.js","../src/js/entities-service/entities/program-actions.js","../src/js/entities-service/program-actions.js","../src/js/entities-service/entities/program-flows.js","../src/js/entities-service/program-flows.js","../src/js/entities-service/entities/programs.js","../src/js/entities-service/programs.js","../src/js/entities-service/entities/roles.js","../src/js/entities-service/roles.js","../src/js/entities-service/entities/settings.js","../src/js/entities-service/settings.js","../src/js/entities-service/entities/states.js","../src/js/entities-service/states.js","../src/js/entities-service/entities/tags.js","../src/js/entities-service/tags.js","../src/js/entities-service/entities/teams.js","../src/js/entities-service/teams.js","../src/js/entities-service/entities/widget-values.js","../src/js/entities-service/widget-values.js","../src/js/entities-service/entities/widgets.js","../src/js/entities-service/widgets.js","../src/js/entities-service/entities/workspace-patients.js","../src/js/entities-service/workspace-patients.js","../src/js/entities-service/entities/workspaces.js","../src/js/entities-service/workspaces.js"],"sourcesContent":["export default '00000000-0000-0000-0000-000000000000';","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;","import REGEX from './regex.js';\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;","import validate from './validate.js';\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n  var v;\n  var arr = new Uint8Array(16);\n\n  // Parse ########-....-....-....-............\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff;\n\n  // Parse ........-####-....-....-............\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff;\n\n  // Parse ........-....-####-....-............\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff;\n\n  // Parse ........-....-....-####-............\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff;\n\n  // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\nexport default parse;","import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n  return bytes;\n}\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    }\n\n    // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n    if (buf) {\n      offset = offset || 0;\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n      return buf;\n    }\n    return unsafeStringify(bytes);\n  }\n\n  // Function#name is not settable on some platforms (#270)\n  try {\n    generateUUID.name = name;\n  } catch (err) {}\n\n  // For CommonJS default export support\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n    case 1:\n      return x ^ y ^ z;\n    case 2:\n      return x & y ^ x & z ^ y & z;\n    case 3:\n      return x ^ y ^ z;\n  }\n}\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n    M[_i] = arr;\n  }\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","const ACTION_OUTREACH = {\n  DISABLED: 'disabled',\n  PATIENT: 'patient',\n};\n\nconst FORM_RESPONSE_STATUS = {\n  DRAFT: 'draft',\n  SUBMITTED: 'submitted',\n  ANY: 'draft,submitted',\n};\n\nconst ACTION_SHARING = {\n  DISABLED: 'disabled',\n  PENDING: 'pending',\n  SENT: 'sent',\n  RESPONDED: 'responded',\n  CANCELED: 'canceled',\n  ERROR_NO_PHONE: 'error_no_phone',\n  ERROR_OPT_OUT: 'error_opt_out',\n  ERROR_SMS_FAILED: 'error_sms_failed',\n};\n\nconst PROGRAM_BEHAVIORS = {\n  STANDARD: 'standard',\n  CONDITIONAL: 'conditional',\n  AUTOMATED: 'automated',\n};\n\nconst RELATIVE_DATE_RANGES = [\n  {\n    id: 'today',\n    unit: 'day',\n    prev: 0,\n  },\n  {\n    id: 'yesterday',\n    unit: 'day',\n    prev: 1,\n  },\n  {\n    id: 'thisweek',\n    unit: 'week',\n    prev: 0,\n  },\n  {\n    id: 'lastweek',\n    unit: 'week',\n    prev: 1,\n  },\n  {\n    id: 'thismonth',\n    unit: 'month',\n    prev: 0,\n  },\n  {\n    id: 'lastmonth',\n    unit: 'month',\n    prev: 1,\n  },\n];\n\nconst STATE_STATUS = {\n  STARTED: 'started',\n  QUEUED: 'queued',\n  DONE: 'done',\n};\n\nconst PATIENT_STATUS = {\n  ACTIVE: 'active',\n  INACTIVE: 'inactive',\n  ARCHIVED: 'archived',\n};\n\nexport {\n  ACTION_OUTREACH,\n  ACTION_SHARING,\n  FORM_RESPONSE_STATUS,\n  PROGRAM_BEHAVIORS,\n  RELATIVE_DATE_RANGES,\n  STATE_STATUS,\n  PATIENT_STATUS,\n};\n","import Backbone from 'backbone';\nimport { contains, extend, keys, reduce, size } from 'underscore';\nimport Radio from 'backbone.radio';\nimport Store from 'backbone.store';\nimport dayjs from 'dayjs';\n\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\nimport JsonApiMixin from 'js/base/jsonapi-mixin';\n\nimport { ACTION_OUTREACH, ACTION_SHARING } from 'js/static';\n\nconst TYPE = 'patient-actions';\nconst { parseRelationship } = JsonApiMixin;\n\nconst _parseRelationship = function(relationship, key) {\n  if (!relationship || key === 'owner') return relationship;\n\n  return parseRelationship(relationship, key);\n};\n\nconst _Model = BaseModel.extend({\n  urlRoot() {\n    if (this.isNew()) {\n      const flow = this.get('_flow');\n      return flow ?\n        `/api/flows/${ flow }/relationships/actions` :\n        `/api/patients/${ this.get('_patient') }/relationships/actions`;\n    }\n\n    return '/api/actions';\n  },\n  type: TYPE,\n  hasTag(tagName) {\n    return contains(this.get('tags'), tagName);\n  },\n  getForm() {\n    const formId = this.get('_form');\n    if (!formId) return;\n    return Radio.request('entities', 'forms:model', formId);\n  },\n  getFormResponses() {\n    return Radio.request('entities', 'formResponses:collection', this.get('_form_responses'));\n  },\n  getPatient() {\n    return Radio.request('entities', 'patients:model', this.get('_patient'));\n  },\n  getOwner() {\n    const owner = this.get('_owner');\n    return Radio.request('entities', `${ owner.type }:model`, owner.id);\n  },\n  isSameTeamAsUser() {\n    const currentUser = Radio.request('bootstrap', 'currentUser');\n    const currentUsersTeam = currentUser.getTeam();\n\n    const owner = this.getOwner();\n    const ownersTeam = owner.type === 'teams' ? owner : owner.getTeam();\n\n    return currentUsersTeam === ownersTeam;\n  },\n  getAuthor() {\n    return Radio.request('entities', 'clinicians:model', this.get('_author'));\n  },\n  getFlow() {\n    if (!this.get('_flow')) return;\n\n    return Radio.request('entities', 'flows:model', this.get('_flow'));\n  },\n  getState() {\n    return Radio.request('entities', 'states:model', this.get('_state'));\n  },\n  getProgram() {\n    return Radio.request('entities', 'programs:model', this.get('_program'));\n  },\n  getPreviousState() {\n    return Radio.request('entities', 'states:model', this.previous('_state'));\n  },\n  isLocked() {\n    return !!this.get('locked_at');\n  },\n  isDone() {\n    const state = this.getState();\n    return state.isDone();\n  },\n  isFlowDone() {\n    const flow = this.getFlow();\n    return flow && flow.isDone();\n  },\n  isOverdue() {\n    if (this.isDone()) return false;\n\n    const date = this.get('due_date');\n    const time = this.get('due_time');\n\n    if (!time) return dayjs(date).isBefore(dayjs(), 'day');\n\n    const dueDateTime = dayjs(`${ date } ${ time }`);\n\n    return dueDateTime.isBefore(dayjs(), 'day') || dueDateTime.isBefore(dayjs(), 'minute');\n  },\n  hasOutreach() {\n    return this.get('outreach') !== ACTION_OUTREACH.DISABLED;\n  },\n  hasSharing() {\n    return this.get('sharing') !== ACTION_SHARING.DISABLED;\n  },\n  canEdit() {\n    const currentUser = Radio.request('bootstrap', 'currentUser');\n\n    if (currentUser.can('work:manage')) return true;\n\n    if (currentUser.can('work:owned:manage') && this.getOwner() === currentUser) return true;\n\n    if (currentUser.can('work:team:manage') && this.isSameTeamAsUser()) return true;\n\n    return false;\n  },\n  canSubmit() {\n    const currentUser = Radio.request('bootstrap', 'currentUser');\n\n    if (currentUser.can('work:submit')) return true;\n\n    if (currentUser.can('work:owned:submit') && this.getOwner() === currentUser) return true;\n\n    if (currentUser.can('work:team:submit') && this.isSameTeamAsUser()) return true;\n\n    return false;\n  },\n  canDelete() {\n    // Delete UI unavailable if action is not editable\n    if (!this.canEdit()) return false;\n\n    const currentUser = Radio.request('bootstrap', 'currentUser');\n\n    if (currentUser.can('work:delete')) return true;\n\n    if (currentUser.can('work:owned:delete') && this.getOwner() === currentUser) return true;\n\n    if (currentUser.can('work:authored:delete') && this.getAuthor() === currentUser) return true;\n\n    return false;\n  },\n  saveDueDate(date) {\n    if (!date) {\n      return this.save({ due_date: null, due_time: null });\n    }\n    return this.save({ due_date: date.format('YYYY-MM-DD') });\n  },\n  saveDueTime(time) {\n    if (!time) {\n      return this.save({ due_time: null });\n    }\n    return this.save({ due_time: time });\n  },\n  saveState(state) {\n    const saveOpts = { _state: state.id };\n    const sharing = this.get('sharing');\n\n    if (state.isDone() && ![ACTION_SHARING.DISABLED, ACTION_SHARING.RESPONDED].includes(sharing)) {\n      saveOpts.sharing = ACTION_SHARING.CANCELED;\n    }\n\n    return this.save(saveOpts, {\n      relationships: {\n        state: this.toRelation(state),\n      },\n    });\n  },\n  saveOwner(owner) {\n    return this.save({ _owner: owner }, {\n      relationships: {\n        owner: this.toRelation(owner),\n      },\n    });\n  },\n  saveAll(attrs) {\n    if (this.isNew()) attrs = extend({}, this.attributes, attrs);\n\n    const relationships = {\n      'flow': this.toRelation(attrs._flow, 'flows'),\n      'form': this.toRelation(attrs._form, 'forms'),\n      'owner': this.toRelation(attrs._owner),\n      'state': this.toRelation(attrs._state, 'states'),\n      'program-action': this.toRelation(attrs._program_action, 'program-actions'),\n    };\n\n    return this.save(attrs, { relationships }, { wait: true });\n  },\n  hasAttachments() {\n    return !!size(this.get('_files'));\n  },\n  hasAllowedUploads() {\n    if (!this.canEdit()) return false;\n\n    const programAction = Radio.request('entities', 'programActions:model', this.get('_program_action'));\n\n    return !!size(programAction.get('allowed_uploads'));\n  },\n  parseRelationship: _parseRelationship,\n});\n\nconst Model = Store(_Model, TYPE);\nconst Collection = BaseCollection.extend({\n  url: '/api/actions',\n  model: Model,\n  parseRelationship: _parseRelationship,\n  save(attrs) {\n    const saves = this.invoke('saveAll', attrs);\n\n    return Promise.all(saves);\n  },\n  groupByDate() {\n    const groupedCollection = this.groupBy('due_date');\n\n    return reduce(keys(groupedCollection), (collection, key) => {\n      collection.add({\n        date: key,\n        actions: new Collection(groupedCollection[key]),\n      });\n\n      return collection;\n    }, new Backbone.Collection([]));\n  },\n});\n\nexport {\n  _Model,\n  Model,\n  Collection,\n};\n","import BaseEntity from 'js/base/entity-service';\nimport { _Model, Model, Collection } from './entities/actions';\n\nconst Entity = BaseEntity.extend({\n  Entity: { _Model, Model, Collection },\n  radioRequests: {\n    'actions:model': 'getModel',\n    'actions:collection': 'getCollection',\n    'fetch:actions:model': 'fetchAction',\n    'fetch:actions:collection': 'fetchCollection',\n    'fetch:actions:withResponses': 'fetchActionWithResponses',\n    'fetch:actions:collection:byPatient': 'fetchActionsByPatient',\n    'fetch:actions:collection:byFlow': 'fetchActionsByFlow',\n  },\n  fetchAction(id) {\n    const include = [\n      'program-action.program',\n      'flow.program-flow.program',\n    ].join();\n    return this.fetchModel(id, { data: { include } });\n  },\n  fetchActionWithResponses(id) {\n    const data = {\n      include: ['form-responses'],\n      fields: {\n        'form-responses': ['status', 'updated_at', 'editor'],\n      },\n    };\n\n    return this.fetchModel(id, { data });\n  },\n  fetchActionsByPatient({ patientId, filter }) {\n    const data = { filter };\n    const url = `/api/patients/${ patientId }/relationships/actions`;\n\n    return this.fetchCollection({ url, data });\n  },\n  fetchActionsByFlow(flowId) {\n    const url = `/api/flows/${ flowId }/relationships/actions`;\n\n    return this.fetchCollection({ url });\n  },\n});\n\nexport default new Entity();\n","import { first, last, reject, size, union, extend, includes } from 'underscore';\nimport Radio from 'backbone.radio';\nimport Store from 'backbone.store';\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\nimport { NIL as NIL_UUID } from 'uuid';\n\nimport trim from 'js/utils/formatting/trim';\n\nconst TYPE = 'clinicians';\n\nconst _Model = BaseModel.extend({\n  type: TYPE,\n  urlRoot: '/api/clinicians',\n  preinitialize() {\n    this.on('change:_team', this.onChangeTeam);\n  },\n  validate(attrs) {\n    if (!trim(attrs.name)) {\n      return 'A clinician name is required';\n    }\n\n    if (!trim(attrs.email)) {\n      return 'A clinician email address is required';\n    }\n\n    if (!attrs._role) {\n      return 'A clinician role is required';\n    }\n  },\n  onChangeTeam() {\n    const previousTeam = Radio.request('entities', 'teams:model', this.previous('_team'));\n    previousTeam.set('_clinicians', reject(previousTeam.get('_clinicians'), { id: this.id }));\n\n    const team = Radio.request('entities', 'teams:model', this.get('_team'));\n    team.set('_clinicians', union(team.get('_clinicians'), [{ id: this.id }]));\n  },\n  getWorkspaces() {\n    return Radio.request('entities', 'workspaces:collection', this.get('_workspaces'));\n  },\n  addWorkspace(workspace) {\n    const workspaces = this.getWorkspaces();\n    workspaces.add(workspace);\n    this.set('_workspaces', this.toRelation(workspaces, 'workspaces').data);\n  },\n  removeWorkspace(workspace) {\n    const workspaces = this.getWorkspaces();\n    workspaces.remove(workspace);\n    this.set('_workspaces', this.toRelation(workspaces, 'workspaces').data);\n  },\n  getTeam() {\n    return Radio.request('entities', 'teams:model', this.get('_team'));\n  },\n  hasTeam() {\n    const team = this.get('_team');\n\n    return team && team !== NIL_UUID;\n  },\n  getRole() {\n    return Radio.request('entities', 'roles:model', this.get('_role'));\n  },\n  can(prop) {\n    const role = this.getRole();\n    const permissions = role.get('permissions');\n    return includes(permissions, prop);\n  },\n  saveRole(role) {\n    return this.save({ _role: role.id }, {\n      relationships: {\n        role: this.toRelation(role),\n      },\n    });\n  },\n  saveTeam(team) {\n    return this.save({ _team: team.id }, {\n      relationships: {\n        team: this.toRelation(team),\n      },\n    });\n  },\n  saveAll(attrs) {\n    attrs = extend({}, this.attributes, attrs);\n\n    const relationships = {\n      'workspaces': this.toRelation(attrs._workspaces, 'workspaces'),\n      'team': this.toRelation(attrs._team, 'teams'),\n      'role': this.toRelation(attrs._role, 'roles'),\n    };\n\n    return this.save(attrs, { relationships }, { wait: true });\n  },\n  getInitials() {\n    const names = String(this.get('name')).split(' ');\n\n    if (names.length === 1) return first(names).charAt(0);\n\n    return `${ first(names).charAt(0) }${ last(names).charAt(0) }`;\n  },\n  isEditable() {\n    return !this.get('last_active_at');\n  },\n  isActive() {\n    const hasTeam = this.hasTeam();\n    const hasWorkspaces = !!size(this.get('_workspaces'));\n    const lastActive = this.get('last_active_at');\n\n    return hasTeam && hasWorkspaces && lastActive;\n  },\n});\n\nconst Model = Store(_Model, TYPE);\nconst Collection = BaseCollection.extend({\n  url: '/api/clinicians',\n  model: Model,\n  comparator: 'name',\n  filterAssignable() {\n    const clone = this.clone();\n\n    const assignable = this.filter(clinician => {\n      return clinician.isActive() && clinician.get('enabled') && clinician.can('work:own');\n    });\n\n    clone.reset(assignable);\n\n    return clone;\n  },\n});\n\nexport {\n  _Model,\n  Model,\n  Collection,\n};\n","import { setUser } from 'js/datadog';\nimport Radio from 'backbone.radio';\nimport BaseEntity from 'js/base/entity-service';\nimport { _Model, Model, Collection } from './entities/clinicians';\n\nconst Entity = BaseEntity.extend({\n  Entity: { _Model, Model, Collection },\n  radioRequests: {\n    'clinicians:model': 'getModel',\n    'clinicians:collection': 'getCollection',\n    'fetch:clinicians:collection': 'fetchCollection',\n    'fetch:clinicians:current': 'fetchCurrentClinician',\n    'fetch:clinicians:model': 'fetchModel',\n    'fetch:clinicians:byWorkspace': 'fetchByWorkspace',\n  },\n  fetchCurrentClinician() {\n    return this.fetchBy('/api/clinicians/me')\n      .then(currentUser => {\n        setUser(currentUser.pick('id', 'name', 'email'));\n        return currentUser;\n      });\n  },\n  fetchByWorkspace(workspaceId) {\n    const url = `/api/workspaces/${ workspaceId }/relationships/clinicians`;\n    const workspace = Radio.request('entities', 'workspaces:model', workspaceId);\n\n    return this.fetchCollection({ url })\n      .then(clinicians => {\n        workspace.updateClinicians(clinicians);\n      });\n  },\n});\n\nexport default new Entity();\n","import Radio from 'backbone.radio';\nimport Store from 'backbone.store';\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\n\nimport trim from 'js/utils/formatting/trim';\n\nconst TYPE = 'comments';\n\nconst _Model = BaseModel.extend({\n  type: TYPE,\n  urlRoot() {\n    if (this.isNew()) return `/api/actions/${ this.get('_action') }/relationships/comments`;\n\n    return '/api/comments';\n  },\n  validate({ message }) {\n    if (!trim(message)) return 'Comment message required.';\n  },\n  getClinician() {\n    return Radio.request('entities', 'clinicians:model', this.get('_clinician'));\n  },\n});\n\nconst Model = Store(_Model, TYPE);\nconst Collection = BaseCollection.extend({\n  model: Model,\n});\n\nexport {\n  _Model,\n  Model,\n  Collection,\n};\n","import BaseEntity from 'js/base/entity-service';\nimport { _Model, Model, Collection } from './entities/comments';\n\nconst Entity = BaseEntity.extend({\n  Entity: { _Model, Model, Collection },\n  radioRequests: {\n    'comments:model': 'getModel',\n    'fetch:comments:collection:byAction': 'fetchCommentsByAction',\n  },\n  fetchCommentsByAction(actionId) {\n    const url = `/api/actions/${ actionId }/relationships/comments`;\n\n    return this.fetchCollection({ url });\n  },\n});\n\nexport default new Entity();\n","import Store from 'backbone.store';\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\n\nconst TYPE = 'dashboards';\n\nconst _Model = BaseModel.extend({\n  type: TYPE,\n  urlRoot: '/api/dashboards',\n});\n\nconst Model = Store(_Model, TYPE);\nconst Collection = BaseCollection.extend({\n  url: '/api/dashboards',\n  model: Model,\n});\n\nexport {\n  _Model,\n  Model,\n  Collection,\n};\n","import BaseEntity from 'js/base/entity-service';\nimport { _Model, Model, Collection } from './entities/dashboards';\n\nconst Entity = BaseEntity.extend({\n  Entity: { _Model, Model, Collection },\n  radioRequests: {\n    'dashboards:model': 'getModel',\n    'dashboards:collection': 'getCollection',\n    'fetch:dashboards:model': 'fetchModel',\n    'fetch:dashboards:collection': 'fetchCollection',\n  },\n});\n\nexport default new Entity();\n","import { map } from 'underscore';\n\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\n\nconst TYPE = 'directories';\n\nconst Model = BaseModel.extend({\n  type: TYPE,\n  url() {\n    return `/api/directory/${ this.get('slug') }`;\n  },\n  getOptions() {\n    if (this.options) return this.options;\n\n    const options = map(this.get('value'), value => {\n      return {\n        name: value,\n        id: value,\n      };\n    });\n\n    this.options = new BaseCollection(options);\n\n    return this.options;\n  },\n});\n\nconst Collection = BaseCollection.extend({\n  url: '/api/directories',\n  model: Model,\n});\n\nexport {\n  Model,\n  Collection,\n};\n","import BaseEntity from 'js/base/entity-service';\nimport { Model, Collection } from './entities/directories';\n\nconst Entity = BaseEntity.extend({\n  Entity: { Model, Collection },\n  radioRequests: {\n    'directories:collection': 'getCollection',\n    'fetch:directories:model': 'fetchDirectory',\n    'fetch:directories:filterable': 'fetchFilterable',\n  },\n  fetchDirectory(slug, query) {\n    const model = new Model({ slug });\n\n    return model.fetch({ data: query });\n  },\n  fetchFilterable() {\n    const data = { filter: { filterable: true } };\n\n    return this.fetchCollection({ data });\n  },\n});\n\nexport default new Entity();\n","import Radio from 'backbone.radio';\nimport Store from 'backbone.store';\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\n\nconst TYPE = 'events';\n\nconst _Model = BaseModel.extend({\n  type: TYPE,\n\n  getClinician() {\n    return Radio.request('entities', 'clinicians:model', this.get('_clinician'));\n  },\n  getRecipient() {\n    if (!this.get('_recipient')) return;\n    return Radio.request('entities', 'patients:model', this.get('_recipient'));\n  },\n  getEditor() {\n    if (!this.get('_editor')) {\n      return Radio.request('entities', 'clinicians:model', { name: 'RoundingWell' });\n    }\n\n    return Radio.request('entities', 'clinicians:model', this.get('_editor'));\n  },\n  getTeam() {\n    return Radio.request('entities', 'teams:model', this.get('_team'));\n  },\n  getState() {\n    return Radio.request('entities', 'states:model', this.get('_state'));\n  },\n  getProgram() {\n    if (!this.get('_program')) return;\n    return Radio.request('entities', 'programs:model', this.get('_program'));\n  },\n  getForm() {\n    if (!this.get('_form')) return;\n    return Radio.request('entities', 'forms:model', this.get('_form'));\n  },\n});\n\nconst Model = Store(_Model, TYPE);\nconst Collection = BaseCollection.extend({\n  model: Model,\n});\n\nexport {\n  _Model,\n  Model,\n  Collection,\n};\n","import BaseEntity from 'js/base/entity-service';\nimport { _Model, Model, Collection } from './entities/events';\n\nconst Entity = BaseEntity.extend({\n  Entity: { _Model, Model, Collection },\n  radioRequests: {\n    'events:model': 'getModel',\n    'events:collection': 'getCollection',\n    'fetch:actionEvents:collection': 'fetchActionEvents',\n    'fetch:flowEvents:collection': 'fetchFlowEvents',\n  },\n  fetchActionEvents(actionId) {\n    return this.fetchCollection({ url: `/api/actions/${ actionId }/activity` });\n  },\n  fetchFlowEvents(flowId) {\n    return this.fetchCollection({ url: `/api/flows/${ flowId }/activity` });\n  },\n});\n\nexport default new Entity();\n","import { get, first } from 'underscore';\nimport Store from 'backbone.store';\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\n\nconst TYPE = 'files';\n\n// Adds `-copy` to the filename before the extension\nfunction dedupeFile(fileName) {\n  const extIndex = fileName.lastIndexOf('.');\n  return `${ fileName.slice(0, extIndex) }-copy${ fileName.slice(extIndex) }`;\n}\n\nconst _Model = BaseModel.extend({\n  defaults: {\n    path: '',\n    _progress: 0,\n  },\n  type: TYPE,\n  urlRoot() {\n    if (this.isNew()) {\n      const actionId = this.get('_action');\n\n      return `/api/actions/${ actionId }/relationships/files?urls=upload`;\n    }\n    return '/api/files';\n  },\n  fetchFile() {\n    return this.fetch({\n      url: `${ this.url() }?urls=download,view`,\n    });\n  },\n  createUpload(fileName) {\n    const path = `patient/${ this.get('_patient') }/${ fileName }`;\n    const promise = this.save({ path, _progress: 0 }, {}, { type: 'PUT' });\n\n    return promise.catch((/* istanbul ignore next */{ responseData } = {}) => {\n      const error = get(first(responseData.errors), 'detail', '');\n\n      /* istanbul ignore else */\n      if (error.includes('Another file exists')) {\n        return this.createUpload(dedupeFile(fileName));\n      }\n\n      /* istanbul ignore next */\n      throw responseData;\n    });\n  },\n  upload(file) {\n    this.createUpload(file.name)\n      .then(() => this.putFile(file))\n      .then(() => this.fetchFile())\n      .catch(() => {\n        this.trigger('upload:failed');\n        this.destroy();\n      });\n  },\n  putFile(file) {\n    const fileSize = file.size;\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState !== 4) return;\n        if (xhr.status !== 200) {\n          reject();\n\n          return;\n        }\n        this.set({ _progress: 100 });\n        resolve();\n      };\n\n      xhr.upload.onprogress = e => {\n        /* istanbul ignore if */\n        if (!e.lengthComputable) return;\n        this.set({ _progress: Math.round((e.loaded / fileSize) * 100) });\n      };\n\n      xhr.open('PUT', this.get('_upload'));\n      xhr.send(file);\n    });\n  },\n  getFilename() {\n    return this.get('path').split('/').pop();\n  },\n});\n\nconst Model = Store(_Model, TYPE);\nconst Collection = BaseCollection.extend({\n  model: Model,\n});\n\nexport {\n  _Model,\n  Model,\n  Collection,\n};\n","import BaseEntity from 'js/base/entity-service';\nimport { _Model, Model, Collection } from './entities/files';\n\nconst Entity = BaseEntity.extend({\n  Entity: { _Model, Model, Collection },\n  radioRequests: {\n    'files:model': 'getModel',\n    'fetch:files:collection:byAction': 'fetchFilesByAction',\n  },\n  fetchFilesByAction(actionId) {\n    const url = `/api/actions/${ actionId }/relationships/files`;\n    const data = { urls: ['download', 'view'] };\n\n    return this.fetchCollection({ url, data });\n  },\n});\n\nexport default new Entity();\n","import { extend } from 'underscore';\nimport Radio from 'backbone.radio';\nimport Store from 'backbone.store';\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\nimport JsonApiMixin from 'js/base/jsonapi-mixin';\n\nconst TYPE = 'flows';\nconst { parseRelationship } = JsonApiMixin;\n\nconst _parseRelationship = function(relationship, key) {\n  if (!relationship || key === 'owner') return relationship;\n\n  return parseRelationship(relationship, key);\n};\n\nconst _Model = BaseModel.extend({\n  urlRoot() {\n    if (this.isNew()) return `/api/patients/${ this.get('_patient') }/relationships/flows`;\n\n    return '/api/flows';\n  },\n  type: TYPE,\n  getPatient() {\n    return Radio.request('entities', 'patients:model', this.get('_patient'));\n  },\n  getOwner() {\n    const owner = this.get('_owner');\n    return Radio.request('entities', `${ owner.type }:model`, owner.id);\n  },\n  getAuthor() {\n    return Radio.request('entities', 'clinicians:model', this.get('_author'));\n  },\n  getState() {\n    return Radio.request('entities', 'states:model', this.get('_state'));\n  },\n  getProgramFlow() {\n    return Radio.request('entities', 'programFlows:model', this.get('_program_flow'));\n  },\n  getProgram() {\n    return Radio.request('entities', 'programs:model', this.get('_program'));\n  },\n  isDone() {\n    const state = this.getState();\n    return state.isDone();\n  },\n  isAllDone() {\n    const { complete, total } = this.get('_progress');\n    return complete === total;\n  },\n  canEdit() {\n    const currentUser = Radio.request('bootstrap', 'currentUser');\n\n    if (currentUser.can('work:manage')) return true;\n\n    if (currentUser.can('work:owned:manage') && this.getOwner() === currentUser) return true;\n\n    if (currentUser.can('work:team:manage')) {\n      const owner = this.getOwner();\n      const currentUsersTeam = currentUser.getTeam();\n      const ownersTeam = owner.type === 'teams' ? owner : owner.getTeam();\n\n      if (currentUsersTeam === ownersTeam) return true;\n    }\n\n    return false;\n  },\n  canDelete() {\n    // Delete UI unavailable if action is not editable\n    if (!this.canEdit()) return false;\n\n    const currentUser = Radio.request('bootstrap', 'currentUser');\n\n    if (currentUser.can('work:delete')) return true;\n\n    if (currentUser.can('work:owned:delete') && this.getOwner() === currentUser) return true;\n\n    if (currentUser.can('work:authored:delete') && this.getAuthor() === currentUser) return true;\n\n    return false;\n  },\n  saveState(state) {\n    return this.save({ _state: state.id }, {\n      relationships: {\n        state: this.toRelation(state),\n      },\n    });\n  },\n  saveOwner(owner) {\n    return this.save({ _owner: owner }, {\n      relationships: {\n        owner: this.toRelation(owner),\n      },\n    });\n  },\n  applyOwner(owner) {\n    const url = `${ this.url() }/relationships/actions`;\n    const relationships = { 'owner': this.toRelation(owner) };\n\n    return this.save({}, { relationships }, { url });\n  },\n  saveAll(attrs) {\n    if (this.isNew()) attrs = extend({}, this.attributes, attrs);\n\n    const relationships = {\n      'state': this.toRelation(attrs._state, 'states'),\n      'owner': this.toRelation(attrs._owner),\n      'program-flow': this.toRelation(attrs._program_flow, 'program-flows'),\n    };\n\n    return this.save(attrs, { relationships }, { wait: true });\n  },\n  parseRelationship: _parseRelationship,\n});\n\nconst Model = Store(_Model, TYPE);\nconst Collection = BaseCollection.extend({\n  url: '/api/flows',\n  model: Model,\n  parseRelationship: _parseRelationship,\n  save(attrs) {\n    const saves = this.invoke('saveAll', attrs);\n\n    return Promise.all(saves);\n  },\n  applyOwner(owner) {\n    const saves = this.invoke('applyOwner', owner);\n\n    return Promise.all(saves);\n  },\n});\n\nexport {\n  _Model,\n  Model,\n  Collection,\n};\n","import BaseEntity from 'js/base/entity-service';\nimport { _Model, Model, Collection } from './entities/flows';\n\nconst Entity = BaseEntity.extend({\n  Entity: { _Model, Model, Collection },\n  radioRequests: {\n    'flows:model': 'getModel',\n    'flows:collection': 'getCollection',\n    'fetch:flows:model': 'fetchFlow',\n    'fetch:flows:collection': 'fetchCollection',\n    'fetch:flows:collection:byPatient': 'fetchFlowsByPatient',\n  },\n  fetchFlow(id) {\n    const include = [\n      'program-flow',\n      'program-flow.program',\n      'program-flow.program-actions',\n    ].join();\n    return this.fetchModel(id, { data: { include } });\n  },\n  fetchFlowsByPatient({ patientId, filter }) {\n    const data = { filter };\n    const url = `/api/patients/${ patientId }/relationships/flows`;\n\n    return this.fetchCollection({ url, data });\n  },\n});\n\nexport default new Entity();\n","import { isNumber } from 'underscore';\n\n// negates based on sort direction a sortable value\nfunction sortByDir(sortDirection, sortableVal) {\n  return (sortDirection === 'desc') ? (sortableVal * -1) : sortableVal;\n}\n\nfunction alphaSort(sortDir, a, b, nullVal = '') {\n  if (!a) a = nullVal;\n  if (!b) b = nullVal;\n  return sortByDir(sortDir, a.localeCompare(b));\n}\n\nfunction getSortNum(val, defaultVal = -1) {\n  return isNumber(val) ? val : defaultVal;\n}\n\nfunction numSortBy(sortDir, val, nullVal) {\n  const num = getSortNum(val, nullVal);\n  return sortByDir(sortDir, num);\n}\n\nfunction numSort(sortDir, a, b, nullVal = Number.NEGATIVE_INFINITY) {\n  if (!a) a = nullVal;\n  if (!b) b = nullVal;\n  const sortVal = getSortNum(a, nullVal) > getSortNum(b, nullVal) ? 1 : -1;\n  return sortByDir(sortDir, sortVal);\n}\n\nfunction intSortBy(sortDir, val, nullVal) {\n  const int = getSortNum(val, nullVal);\n  return sortByDir(sortDir, parseInt(int, 10));\n}\n\nexport {\n  alphaSort,\n  intSortBy,\n  numSortBy,\n  numSort,\n};\n","import { get, omit } from 'underscore';\nimport Store from 'backbone.store';\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\n\nimport { alphaSort } from 'js/utils/sorting';\nimport JsonApiMixin from 'js/base/jsonapi-mixin';\n\nimport { FORM_RESPONSE_STATUS } from 'js/static';\n\nconst TYPE = 'form-responses';\nconst { parseRelationship } = JsonApiMixin;\n\nconst _parseRelationship = function(relationship, key) {\n  if (key === 'editor') return relationship;\n\n  return parseRelationship(relationship, key);\n};\n\nconst _Model = BaseModel.extend({\n  type: TYPE,\n  urlRoot: '/api/form-responses',\n  saveAll() {\n    const attrs = this.attributes;\n\n    const relationships = {\n      'form': this.toRelation(attrs._form, 'forms'),\n      'patient': this.toRelation(attrs._patient, 'patients'),\n      'action': this.toRelation(attrs._action, 'patient-actions'),\n    };\n\n    return this.save(attrs, { relationships }, { wait: true });\n  },\n  getDraft() {\n    if (this.get('status') !== FORM_RESPONSE_STATUS.DRAFT) return;\n\n    return {\n      updated: this.get('updated_at'),\n      submission: this.getResponse(),\n    };\n  },\n  getResponse() {\n    return get(this.get('response'), 'data', {});\n  },\n  getFormData() {\n    return omit(this.get('response'), 'data');\n  },\n  parseRelationship: _parseRelationship,\n});\n\nconst Model = Store(_Model, TYPE);\nconst Collection = BaseCollection.extend({\n  url: '/api/form-responses',\n  model: Model,\n  parseRelationship: _parseRelationship,\n  comparator(responseA, responseB) {\n    return alphaSort('desc', responseA.get('updated_at'), responseB.get('updated_at'));\n  },\n  getFirstSubmission() {\n    return this.find({ status: FORM_RESPONSE_STATUS.SUBMITTED });\n  },\n  filterSubmissions() {\n    const clone = this.clone();\n    const submissions = this.filter({ status: FORM_RESPONSE_STATUS.SUBMITTED });\n\n    clone.reset(submissions);\n\n    return clone;\n  },\n});\n\nexport {\n  _Model,\n  Model,\n  Collection,\n};\n","import { reduce } from 'underscore';\nimport BaseEntity from 'js/base/entity-service';\nimport { _Model, Model, Collection } from './entities/form-responses';\n\nconst Entity = BaseEntity.extend({\n  Entity: { _Model, Model, Collection },\n  radioRequests: {\n    'formResponses:model': 'getModel',\n    'formResponses:collection': 'getCollection',\n    'fetch:formResponses:model': 'fetchFormResponse',\n    'fetch:formResponses:latest': 'fetchLatestResponse',\n  },\n  fetchFormResponse(id, options) {\n    if (!id) return new Model();\n\n    return this.fetchModel(id, options);\n  },\n  fetchLatestResponse(filter) {\n    const data = reduce(filter, (filters, value, key) => {\n      if (!value) return filters;\n      filters.filter[key] = value;\n      return filters;\n    }, { filter: {} });\n\n    return this.fetchBy('/api/form-responses/latest', { data })\n      .then(response => {\n        if (!response) return new Model();\n        return response;\n      });\n  },\n});\n\nexport default new Entity();\n","import BaseEntity from 'js/base/entity-service';\nimport fetcher, { handleJSON } from 'js/base/fetch';\n\nconst Entity = BaseEntity.extend({\n  radioRequests: {\n    'fetch:icd': 'fetchIcd',\n  },\n  fetchIcd({ term, prefixes }) {\n    const variables = { term, prefixes };\n    const query = `query ($term: String!, $prefixes: [String!]) {\n      icdCodes(term: $term, prefixes: $prefixes) {\n        code\n        description\n        hcc_v24\n        hcc_v28\n        isSpecific\n        parent {\n          code\n          description\n        }\n        children {\n          code\n          description\n        }\n      }\n    }`;\n\n    return fetcher('/api/graphql', {\n      header: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n      body: JSON.stringify({ query, variables }),\n    })\n      .then(handleJSON);\n  },\n});\n\nexport default new Entity();\n\n","import { extend } from 'underscore';\nimport { v5 as uuid } from 'uuid';\nimport Store from 'backbone.store';\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\n\nconst TYPE = 'patient-fields';\n\nconst _Model = BaseModel.extend({\n  type: TYPE,\n  url() {\n    return `/api/patients/${ this.get('_patient') }/fields/${ this.get('name') }`;\n  },\n  isNew() {\n    // NOTE: This will treat the PATCH like a PUT\n    // We won't always have an ID, but never need to POST\n    return false;\n  },\n  saveAll(attrs) {\n    attrs = extend({}, this.attributes, attrs);\n\n    // NOTE: sets the id instead of attrs.id due to how backbone's save works\n    /* istanbul ignore next: Currently not saving new fields, but would be important if we do */\n    if (!attrs.id) {\n      this.set({ id: uuid(`resource:field:${ attrs.name.toLowerCase() }`, attrs._patient) });\n    }\n\n    const relationships = {\n      'patient': this.toRelation(attrs._patient, 'patients'),\n    };\n\n    return this.save(attrs, { relationships }, { wait: true });\n  },\n});\n\nconst Model = Store(_Model, TYPE);\nconst Collection = BaseCollection.extend({\n  model: Model,\n});\n\nexport {\n  _Model,\n  Model,\n  Collection,\n};\n","import BaseEntity from 'js/base/entity-service';\nimport { _Model, Model, Collection } from './entities/patient-fields';\n\nconst Entity = BaseEntity.extend({\n  Entity: { _Model, Model, Collection },\n  radioRequests: {\n    'patientFields:model': 'getModel',\n    'patientFields:collection': 'getCollection',\n  },\n});\n\nexport default new Entity();\n","import { extend, isEmpty } from 'underscore';\nimport Radio from 'backbone.radio';\nimport Store from 'backbone.store';\nimport dayjs from 'dayjs';\n\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\n\nimport { PATIENT_STATUS } from 'js/static';\n\nconst TYPE = 'patients';\n\nconst _Model = BaseModel.extend({\n  type: TYPE,\n  url() {\n    if (this.isNew()) return '/api/patients';\n\n    const currentWorkspace = Radio.request('workspace', 'current');\n    return `/api/patients/${ this.id }?filter[workspace]=${ currentWorkspace.id }`;\n  },\n\n  validate({ first_name, last_name, birth_date, sex }) {\n    const errors = {};\n\n    if (!first_name || !last_name) errors.name = 'required';\n    if (!sex) errors.sex = 'required';\n\n    if (!birth_date) errors.birth_date = 'required';\n    else if (dayjs(birth_date).isAfter()) errors.birth_date = 'invalidDate';\n\n    if (!isEmpty(errors)) return errors;\n  },\n  getWorkspaces() {\n    return Radio.request('entities', 'workspaces:collection', this.get('_workspaces'));\n  },\n  getFields() {\n    return Radio.request('entities', 'patientFields:collection', this.get('_patient_fields'));\n  },\n  getField(name) {\n    const fields = this.getFields();\n    return fields.find({ name });\n  },\n  saveAll(attrs) {\n    attrs = extend({}, this.attributes, attrs);\n\n    const opts = { wait: true };\n\n    if (this.isNew()) opts.type = 'PUT';\n\n    return this.save(attrs, {}, opts);\n  },\n  canEdit() {\n    return this.isNew() || this.get('source') === 'manual';\n  },\n  getSortName() {\n    return (this.get('last_name') + this.get('first_name')).toLowerCase();\n  },\n  getWorkspacePatient() {\n    return Radio.request('entities', 'get:workspacePatients:model', this.id);\n  },\n  toggleActiveStatus() {\n    const workspacePatient = this.getWorkspacePatient();\n    const currentStatus = workspacePatient.get('status');\n    const newStatus = currentStatus !== PATIENT_STATUS.ACTIVE ? PATIENT_STATUS.ACTIVE : PATIENT_STATUS.INACTIVE;\n\n    workspacePatient.saveAll({ status: newStatus });\n  },\n  setArchivedStatus() {\n    const workspacePatient = Radio.request('entities', 'get:workspacePatients:model', this.id);\n\n    workspacePatient.saveAll({ status: PATIENT_STATUS.ARCHIVED });\n  },\n});\n\nconst Model = Store(_Model, TYPE);\nconst Collection = BaseCollection.extend({\n  url: '/api/patients',\n  model: Model,\n});\n\nexport {\n  Model,\n  _Model,\n  Collection,\n};\n","import BaseEntity from 'js/base/entity-service';\nimport { _Model, Model, Collection } from './entities/patients';\n\nconst Entity = BaseEntity.extend({\n  Entity: { _Model, Model, Collection },\n  radioRequests: {\n    'patients:model': 'getModel',\n    'patients:collection': 'getCollection',\n    'fetch:patients:model': 'fetchModel',\n    'fetch:patients:model:byAction': 'fetchPatientByAction',\n    'fetch:patients:model:byFlow': 'fetchPatientByFlow',\n  },\n  fetchPatientByAction(actionId) {\n    return this.fetchBy(`/api/actions/${ actionId }/patient`);\n  },\n  fetchPatientByFlow(flowId) {\n    return this.fetchBy(`/api/flows/${ flowId }/patient`);\n  },\n});\n\nexport default new Entity();\n","import { debounce, get, isBoolean } from 'underscore';\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\n\nconst TYPE = 'patients-search-results';\n\nconst Model = BaseModel.extend({\n  type: TYPE,\n});\n\nconst Collection = BaseCollection.extend({\n  url: '/api/patients',\n  model: Model,\n  initialize() {\n    this._debouncedSearch = debounce(this._debouncedSearch, 150);\n  },\n  prevSearch: '',\n  controller: new AbortController(),\n  search(\n    /* istanbul ignore next */\n    search = '') {\n    if (search.length < 3) {\n      if (!search.length || !this.prevSearch.includes(search)) {\n        delete this._hasIdentifiers;\n        this.reset();\n        this.prevSearch = '';\n      }\n      this._debouncedSearch.cancel();\n      this.controller.abort();\n      return;\n    }\n\n    this.prevSearch = search;\n    this.isSearching = true;\n    this._debouncedSearch(search);\n  },\n  hasIdentifiers() {\n    if (isBoolean(this._hasIdentifiers)) return this._hasIdentifiers;\n\n    this._hasIdentifiers = !!this.find(model => {\n      return get(model.get('identifiers'), 'length');\n    });\n\n    return this._hasIdentifiers;\n  },\n  _debouncedSearch(search) {\n    const filter = { search };\n\n    delete this._hasIdentifiers;\n    this.controller.abort();\n    this.controller = new AbortController();\n\n    const fetcher = this.fetch({ data: { filter }, signal: this.controller.signal });\n    this.fetcher = fetcher;\n\n    fetcher.then(() => {\n      if (this.fetcher !== fetcher) return;\n      this.isSearching = false;\n      this.trigger('search', this);\n    });\n  },\n});\n\nexport {\n  Collection,\n  Model,\n};\n","import BaseEntity from 'js/base/entity-service';\nimport { Model, Collection } from './entities/patient-search-results';\n\nconst Entity = BaseEntity.extend({\n  Entity: { Model, Collection },\n  radioRequests: {\n    'searchPatients:collection': 'getCollection',\n  },\n});\n\nexport default new Entity();\n","// Takes an array and converts each value to the value of the set property\n// collectionOf([1,2,3],'id') => [{'id':1}, {'id': 2}, {'id': 3}]\n\nimport { map, object } from 'underscore';\n\nexport default (list, property) => {\n  return map(list, function(item) {\n    return object([property], [item]);\n  });\n};\n","import { extend, first, size } from 'underscore';\nimport Radio from 'backbone.radio';\nimport Store from 'backbone.store';\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\nimport JsonApiMixin from 'js/base/jsonapi-mixin';\n\nimport trim from 'js/utils/formatting/trim';\nimport collectionOf from 'js/utils/formatting/collection-of';\n\nimport { ACTION_OUTREACH, STATE_STATUS, PROGRAM_BEHAVIORS } from 'js/static';\n\nconst TYPE = 'program-actions';\nconst { parseRelationship } = JsonApiMixin;\n\nconst _parseRelationship = function(relationship, key) {\n  if (!relationship || key === 'owner') return relationship;\n\n  return parseRelationship(relationship, key);\n};\n\nconst _Model = BaseModel.extend({\n  urlRoot: '/api/program-actions',\n  type: TYPE,\n  validate({ name }) {\n    if (!trim(name)) return 'Action name required';\n  },\n  getTags() {\n    return Radio.request('entities', 'tags:collection', collectionOf(this.get('tags'), 'text'));\n  },\n  addTag(tag) {\n    const tags = this.getTags();\n    tags.add(tag);\n    return this.save({ tags: tags.map('text') });\n  },\n  removeTag(tag) {\n    const tags = this.getTags();\n    tags.remove(tag);\n    return this.save({ tags: tags.map('text') });\n  },\n  getAction({ patientId, flowId }) {\n    const currentUser = Radio.request('bootstrap', 'currentUser');\n    const currentWorkspace = Radio.request('workspace', 'current');\n    const states = currentWorkspace.getStates();\n\n    const defaultInitialState = first(states.filter({ status: STATE_STATUS.QUEUED }));\n\n    return Radio.request('entities', 'actions:model', {\n      name: this.get('name'),\n      _flow: flowId,\n      _patient: patientId,\n      _state: defaultInitialState.id,\n      _owner: this.get('_owner') || {\n        id: currentUser.id,\n        type: 'clinicians',\n      },\n      _program_action: this.id,\n    });\n  },\n  enableAttachmentUploads() {\n    this.save({ allowed_uploads: ['pdf'] });\n  },\n  disableAttachmentUploads() {\n    this.save({ allowed_uploads: [] });\n  },\n  getOwner() {\n    const owner = this.get('_owner');\n    if (!owner) return;\n    return Radio.request('entities', 'teams:model', owner.id);\n  },\n  saveOwner(owner) {\n    owner = this.toRelation(owner);\n    return this.save({ _owner: owner.data }, {\n      relationships: { owner },\n    });\n  },\n  getForm() {\n    const formId = this.get('_form');\n    if (!formId) return;\n    return Radio.request('entities', 'forms:model', formId);\n  },\n  hasOutreach() {\n    return this.get('outreach') !== ACTION_OUTREACH.DISABLED;\n  },\n  isVisibleToCurrentUser() {\n    const visibleToTeamsList = this.get('_teams');\n    const currentUser = Radio.request('bootstrap', 'currentUser');\n    const currentUserTeam = currentUser.getTeam();\n\n    if (!size(visibleToTeamsList)) return true;\n\n    return !!visibleToTeamsList.find(team => team.id === currentUserTeam.id);\n  },\n  saveForm(form) {\n    form = this.toRelation(form);\n    const saveData = { _form: form.data };\n    if (!form.data) saveData.outreach = ACTION_OUTREACH.DISABLED;\n\n    return this.save(saveData, {\n      relationships: { form },\n    });\n  },\n  saveAll(attrs) {\n    attrs = extend({}, this.attributes, attrs);\n\n    const relationships = {\n      'owner': this.toRelation(attrs._owner, 'teams'),\n      'form': this.toRelation(attrs._form, 'forms'),\n      'program-flow': this.toRelation(attrs._program_flow, 'program-flows'),\n      'program': this.toRelation(attrs._program, 'programs'),\n    };\n\n    return this.save(attrs, { relationships }, { wait: true });\n  },\n  parseRelationship: _parseRelationship,\n});\n\nconst Model = Store(_Model, TYPE);\nconst Collection = BaseCollection.extend({\n  initialize(models, options = {}) {\n    this.flowId = options.flowId;\n    if (this.flowId) this.comparator = 'sequence';\n  },\n  url() {\n    if (this.flowId) return `/api/program-flows/${ this.flowId }/actions`;\n    return '/api/program-actions';\n  },\n  model: Model,\n  parseRelationship: _parseRelationship,\n  updateSequences() {\n    const data = this.map((flowAction, sequence) => {\n      flowAction.set({ sequence });\n      return flowAction.toJSONApi({ sequence });\n    });\n\n    return this.sync('patch', this, {\n      url: this.url(),\n      data: JSON.stringify({ data }),\n    });\n  },\n  filterAddable() {\n    const clone = this.clone();\n\n    const addable = this.filter(action => {\n      const isPublished = !!action.get('published_at');\n      const isArchived = !!action.get('archived_at');\n      const isAutomated = action.get('behavior') === PROGRAM_BEHAVIORS.AUTOMATED;\n      const isVisible = action.isVisibleToCurrentUser();\n\n      return isPublished && !isArchived && !isAutomated && isVisible;\n    });\n\n    clone.reset(addable);\n\n    return clone;\n  },\n});\n\nexport {\n  _Model,\n  Model,\n  Collection,\n};\n","import BaseEntity from 'js/base/entity-service';\nimport { _Model, Model, Collection } from './entities/program-actions';\n\nimport { PROGRAM_BEHAVIORS } from 'js/static';\n\nconst Entity = BaseEntity.extend({\n  Entity: { _Model, Model, Collection },\n  radioRequests: {\n    'programActions:model': 'getModel',\n    'programActions:collection': 'getCollection',\n    'fetch:programActions:model': 'fetchModel',\n    'fetch:programActions:collection:byProgram': 'fetchProgramActionsByProgram',\n    'fetch:programActions:collection': 'fetchProgramActions',\n    'fetch:programActions:collection:byProgramFlow': 'fetchProgramActionsByFlow',\n  },\n  fetchProgramActionsByProgram({ programId }) {\n    const url = `/api/programs/${ programId }/relationships/actions`;\n\n    return this.fetchCollection({ url });\n  },\n  fetchProgramActions(behavior = PROGRAM_BEHAVIORS.STANDARD) {\n    const collection = new this.Entity.Collection();\n\n    return collection.fetch({ data: { filter: { behavior } } });\n  },\n  fetchProgramActionsByFlow(flowId, options) {\n    const collection = new Collection([], { flowId });\n\n    return collection.fetch(options);\n  },\n});\n\nexport default new Entity();\n","import { extend, first, size } from 'underscore';\nimport Radio from 'backbone.radio';\nimport Store from 'backbone.store';\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\nimport JsonApiMixin from 'js/base/jsonapi-mixin';\n\nimport trim from 'js/utils/formatting/trim';\nimport collectionOf from 'js/utils/formatting/collection-of';\n\n\nimport { STATE_STATUS, PROGRAM_BEHAVIORS } from 'js/static';\n\nconst TYPE = 'program-flows';\nconst { parseRelationship } = JsonApiMixin;\n\nconst _parseRelationship = function(relationship, key) {\n  if (!relationship || key === 'owner') return relationship;\n\n  return parseRelationship(relationship, key);\n};\n\nconst _Model = BaseModel.extend({\n  urlRoot() {\n    if (this.isNew()) return `/api/programs/${ this.get('_program') }/relationships/flows`;\n\n    return '/api/program-flows';\n  },\n  type: TYPE,\n  validate({ name }) {\n    if (!trim(name)) return 'Flow name required';\n  },\n  getTags() {\n    return Radio.request('entities', 'tags:collection', collectionOf(this.get('tags'), 'text'));\n  },\n  addTag(tag) {\n    const tags = this.getTags();\n    tags.add(tag);\n    return this.save({ tags: tags.map('text') });\n  },\n  removeTag(tag) {\n    const tags = this.getTags();\n    tags.remove(tag);\n    return this.save({ tags: tags.map('text') });\n  },\n  getOwner() {\n    const owner = this.get('_owner');\n    if (!owner) return;\n    return Radio.request('entities', 'teams:model', owner.id);\n  },\n  getFlow(patientId) {\n    const currentWorkspace = Radio.request('workspace', 'current');\n    const states = currentWorkspace.getStates();\n\n    const defaultInitialState = first(states.filter({ status: STATE_STATUS.QUEUED }));\n\n    const flow = Radio.request('entities', 'flows:model', {\n      _patient: patientId,\n      _program_flow: this.get('id'),\n      _state: defaultInitialState.id,\n    });\n\n    return flow;\n  },\n  saveOwner(owner) {\n    owner = this.toRelation(owner);\n    return this.save({ _owner: owner.data }, {\n      relationships: { owner },\n    });\n  },\n  saveAll(attrs) {\n    attrs = extend({}, this.attributes, attrs);\n\n    const relationships = {\n      owner: this.toRelation(attrs._owner, 'teams'),\n    };\n\n    return this.save(attrs, { relationships }, { wait: true });\n  },\n  getActions() {\n    return Radio.request('entities', 'programActions:collection', this.get('_program_actions'), { flowId: this.id });\n  },\n  getAddableActions() {\n    return this.getActions().filterAddable();\n  },\n  isVisibleToCurrentUser() {\n    const visibleToTeamsList = this.get('_teams');\n    const currentUser = Radio.request('bootstrap', 'currentUser');\n    const currentUserTeam = currentUser.getTeam();\n\n    if (!size(visibleToTeamsList)) return true;\n\n    return !!visibleToTeamsList.find(team => team.id === currentUserTeam.id);\n  },\n  parseRelationship: _parseRelationship,\n});\n\nconst Model = Store(_Model, TYPE);\nconst Collection = BaseCollection.extend({\n  url: '/api/program-flows',\n  model: Model,\n  parseRelationship: _parseRelationship,\n  filterAddable() {\n    const clone = this.clone();\n\n    const addable = this.filter(flow => {\n      const isPublished = !!flow.get('published_at');\n      const isArchived = !!flow.get('archived_at');\n      const isAutomated = flow.get('behavior') === PROGRAM_BEHAVIORS.AUTOMATED;\n      const isVisible = flow.isVisibleToCurrentUser();\n\n      return isPublished && !isArchived && !isAutomated && isVisible;\n    });\n\n    clone.reset(addable);\n\n    return clone;\n  },\n});\n\nexport {\n  _Model,\n  Model,\n  Collection,\n};\n","import BaseEntity from 'js/base/entity-service';\nimport { _Model, Model, Collection } from './entities/program-flows';\n\nimport { PROGRAM_BEHAVIORS } from 'js/static';\n\nconst Entity = BaseEntity.extend({\n  Entity: { _Model, Model, Collection },\n  radioRequests: {\n    'programFlows:model': 'getModel',\n    'programFlows:collection': 'getCollection',\n    'fetch:programFlows:model': 'fetchModel',\n    'fetch:programFlows:collection:byProgram': 'fetchProgramFlowsByProgram',\n    'fetch:programFlows:collection': 'fetchProgramFlows',\n  },\n  fetchProgramFlowsByProgram({ programId }) {\n    const url = `/api/programs/${ programId }/relationships/flows`;\n\n    return this.fetchCollection({ url });\n  },\n  fetchProgramFlows(behavior = PROGRAM_BEHAVIORS.STANDARD) {\n    const collection = new this.Entity.Collection();\n\n    return collection.fetch({ data: { filter: { behavior } } });\n  },\n});\n\nexport default new Entity();\n","import Backbone from 'backbone';\nimport Radio from 'backbone.radio';\nimport Store from 'backbone.store';\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\n\nimport trim from 'js/utils/formatting/trim';\n\nconst TYPE = 'programs';\n\nconst _Model = BaseModel.extend({\n  type: TYPE,\n  validate({ name }) {\n    if (!trim(name)) return 'Program name required';\n  },\n  urlRoot: '/api/programs',\n\n  getAddable() {\n    const programActions = Radio.request('entities', 'programActions:collection', this.get('_program_actions'));\n    const programFlows = Radio.request('entities', 'programFlows:collection', this.get('_program_flows'));\n\n    const actions = programActions.filterAddable();\n    const flows = programFlows.filterAddable();\n\n    return new Backbone.Collection([...flows.models, ...actions.models], { comparator: 'name' });\n  },\n  getUserWorkspaces() {\n    const currentUser = Radio.request('bootstrap', 'currentUser');\n    const userWorkspaces = currentUser.getWorkspaces();\n    const workspaces = Radio.request('entities', 'workspaces:collection', this.get('_workspaces'));\n    workspaces.reset(workspaces.filter(workspace => userWorkspaces.get(workspace.id)));\n    return workspaces;\n  },\n});\n\nconst Model = Store(_Model, TYPE);\nconst Collection = BaseCollection.extend({\n  url: '/api/programs',\n  model: Model,\n});\n\nexport {\n  Model,\n  _Model,\n  Collection,\n};\n","import BaseEntity from 'js/base/entity-service';\nimport { _Model, Model, Collection } from './entities/programs';\n\nconst Entity = BaseEntity.extend({\n  Entity: { _Model, Model, Collection },\n  radioRequests: {\n    'programs:model': 'getModel',\n    'programs:collection': 'getCollection',\n    'fetch:programs:model': 'fetchModel',\n    'fetch:programs:collection': 'fetchCollection',\n    'fetch:programs:model:byProgramFlow': 'fetchProgramByProgramFlow',\n    'fetch:programs:byWorkspace': 'fetchProgramsByWorkspace',\n  },\n  fetchProgramByProgramFlow(flowId) {\n    return this.fetchBy(`/api/program-flows/${ flowId }/program`);\n  },\n  fetchProgramsByWorkspace(workspaceId) {\n    const url = `/api/workspaces/${ workspaceId }/relationships/programs`;\n    return this.fetchCollection({ url });\n  },\n});\n\nexport default new Entity();\n","import Store from 'backbone.store';\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\n\nconst TYPE = 'roles';\n\nconst _Model = BaseModel.extend({\n  type: TYPE,\n  urlRoot: '/api/roles',\n});\n\nconst Model = Store(_Model, TYPE);\nconst Collection = BaseCollection.extend({\n  url: '/api/roles',\n  model: Model,\n});\n\nexport {\n  _Model,\n  Model,\n  Collection,\n};\n","import BaseEntity from 'js/base/entity-service';\nimport { _Model, Model, Collection } from './entities/roles';\n\nconst Entity = BaseEntity.extend({\n  Entity: { _Model, Model, Collection },\n  radioRequests: {\n    'roles:model': 'getModel',\n    'roles:collection': 'getCollection',\n    'fetch:roles:collection': 'fetchCollection',\n  },\n});\n\nexport default new Entity();\n","import Store from 'backbone.store';\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\n\nconst TYPE = 'settings';\n\nconst _Model = BaseModel.extend({\n  type: TYPE,\n  urlRoot: '/api/settings',\n});\n\nconst Model = Store(_Model, TYPE);\nconst Collection = BaseCollection.extend({\n  url: '/api/settings',\n  model: Model,\n});\n\nexport {\n  _Model,\n  Model,\n  Collection,\n};\n","import BaseEntity from 'js/base/entity-service';\nimport { _Model, Model, Collection } from './entities/settings';\n\nconst Entity = BaseEntity.extend({\n  Entity: { _Model, Model, Collection },\n  radioRequests: {\n    'settings:model': 'getModel',\n    'fetch:settings:collection': 'fetchCollection',\n  },\n});\n\nexport default new Entity();\n","import Store from 'backbone.store';\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\n\nimport { STATE_STATUS } from 'js/static';\n\nconst TYPE = 'states';\n\nconst _Model = BaseModel.extend({\n  type: TYPE,\n  isDone() {\n    return this.get('status') === STATE_STATUS.DONE;\n  },\n});\n\nconst Model = Store(_Model, TYPE);\nconst Collection = BaseCollection.extend({\n  url: '/api/states',\n  model: Model,\n  comparator: 'sequence',\n  groupByDone() {\n    const { done, notDone } = this.groupBy(state => {\n      return state.isDone() ? 'done' : 'notDone';\n    });\n\n    return {\n      done: new Collection(done),\n      notDone: new Collection(notDone),\n    };\n  },\n  getFilterIds() {\n    return this.map('id').join(',');\n  },\n});\n\nexport {\n  _Model,\n  Model,\n  Collection,\n};\n","import BaseEntity from 'js/base/entity-service';\nimport { _Model, Model, Collection } from './entities/states';\n\nconst Entity = BaseEntity.extend({\n  Entity: { _Model, Model, Collection },\n  radioRequests: {\n    'states:model': 'getModel',\n    'states:collection': 'getCollection',\n    'fetch:states:collection': 'fetchCollection',\n  },\n});\n\nexport default new Entity();\n","import { map } from 'underscore';\nimport Store from 'backbone.store';\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\n\nconst TYPE = 'tags';\n\nconst _Model = BaseModel.extend({\n  type: TYPE,\n  idAttribute: 'text',\n});\n\nconst Model = Store(_Model, TYPE);\nconst Collection = BaseCollection.extend({\n  url: '/api/tags',\n  model: Model,\n  parse(response) {\n    return map(response.data, tag => {\n      return { text: tag };\n    });\n  },\n  comparator: 'text',\n});\n\nexport {\n  _Model,\n  Model,\n  Collection,\n};\n","import BaseEntity from 'js/base/entity-service';\nimport { _Model, Model, Collection } from './entities/tags';\n\nlet tagsCache;\n\nconst Entity = BaseEntity.extend({\n  Entity: { _Model, Model, Collection },\n  radioRequests: {\n    'tags:model': 'getModel',\n    'tags:collection': 'getCollection',\n    'fetch:tags:collection': 'fetchTags',\n  },\n  fetchTags() {\n    if (tagsCache) return tagsCache;\n\n    return this.fetchCollection().then(tags => {\n      tagsCache = tags;\n      return tags;\n    });\n  },\n});\n\nexport default new Entity();\n","import Radio from 'backbone.radio';\nimport Store from 'backbone.store';\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\n\nconst TYPE = 'teams';\n\nconst _Model = BaseModel.extend({\n  type: TYPE,\n  urlRoot: '/api/teams',\n  getAssignableClinicians() {\n    const clinicians = Radio.request('entities', 'clinicians:collection', this.get('_clinicians'));\n\n    return clinicians.filterAssignable();\n  },\n});\n\nconst Model = Store(_Model, TYPE);\nconst Collection = BaseCollection.extend({\n  url: '/api/teams',\n  model: Model,\n  comparator: 'name',\n});\n\nexport {\n  _Model,\n  Model,\n  Collection,\n};\n","import BaseEntity from 'js/base/entity-service';\nimport { _Model, Model, Collection } from './entities/teams';\n\nconst Entity = BaseEntity.extend({\n  Entity: { _Model, Model, Collection },\n  radioRequests: {\n    'teams:model': 'getModel',\n    'teams:collection': 'getCollection',\n    'fetch:teams:collection': 'fetchCollection',\n  },\n});\n\nexport default new Entity();\n","import Store from 'backbone.store';\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\n\nconst TYPE = 'widget-values';\n\nconst _Model = BaseModel.extend({\n  type: TYPE,\n});\n\nconst Model = Store(_Model, TYPE);\nconst Collection = BaseCollection.extend({\n  model: Model,\n});\n\nexport {\n  _Model,\n  Model,\n  Collection,\n};\n","import { isEmpty } from 'underscore';\nimport BaseEntity from 'js/base/entity-service';\nimport { _Model, Model } from './entities/widget-values';\nimport { v5 as uuid, validate, NIL as NIL_UUID } from 'uuid';\n\nconst Entity = BaseEntity.extend({\n  Entity: { _Model, Model },\n  radioRequests: {\n    'get:widgetValues:model': 'getByPatient',\n    'fetch:widgetValues:byPatient': 'fetchByPatient',\n  },\n  fetchByPatient(widget, patientId) {\n    const model = this.getByPatient(widget.get('slug'), patientId);\n\n    const requestValues = widget.get('values');\n\n    // If not expecting values don't fetch them\n    if (isEmpty(requestValues)) return model;\n\n    const data = { filter: { patient: patientId } };\n    return model.fetch({ url: `/api/widgets/${ widget.get('slug') }/values`, data });\n  },\n  getByPatient(slug, patientId) {\n    /* istanbul ignore next: makes patientId a uuid for cypress */\n    if (!validate(patientId)) patientId = uuid(patientId, NIL_UUID);\n\n    return new Model({\n      id: uuid(slug, patientId),\n      name: slug,\n    });\n  },\n});\n\nexport default new Entity();\n","import { uniqueId } from 'underscore';\nimport Radio from 'backbone.radio';\nimport Store from 'backbone.store';\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\n\nconst TYPE = 'widgets';\n\nconst _Model = BaseModel.extend({\n  type: TYPE,\n  fetchValues(patientId) {\n    return Radio.request('entities', 'fetch:widgetValues:byPatient', this, patientId);\n  },\n});\n\nconst Model = Store(_Model, TYPE);\nconst Collection = BaseCollection.extend({\n  url: '/api/widgets',\n  model: Model,\n  modelId(attr) {\n    return uniqueId(`${ attr.slug }-`);\n  },\n});\n\nexport {\n  _Model,\n  Model,\n  Collection,\n};\n","import BaseEntity from 'js/base/entity-service';\nimport { _Model, Model, Collection } from './entities/widgets';\n\nconst Entity = BaseEntity.extend({\n  Entity: { _Model, Model, Collection },\n  radioRequests: {\n    'widgets:model': 'getModel',\n    'widgets:collection': 'getCollection',\n    'fetch:widgets:collection': 'fetchWidgets',\n  },\n  fetchWidgets({ filter = {} } = {}) {\n    const data = { filter };\n    return this.fetchCollection({ data });\n  },\n\n});\n\nexport default new Entity();\n","import Radio from 'backbone.radio';\nimport Store from 'backbone.store';\nimport BaseModel from 'js/base/model';\n\nconst TYPE = 'workspace-patients';\n\nconst _Model = BaseModel.extend({\n  type: TYPE,\n  urlRoot: '/api/workspace-patients',\n  saveAll(attrs) {\n    const opts = { type: 'PUT' };\n\n    const relationships = {\n      'workspace': this.toRelation(this.get('_workspace'), 'workspaces'),\n      'patient': this.toRelation(this.get('_patient'), 'patients'),\n    };\n\n    this.save(attrs, { relationships }, opts);\n  },\n  canEdit() {\n    const currentUser = Radio.request('bootstrap', 'currentUser');\n\n    return currentUser.can('patients:manage');\n  },\n});\n\nconst Model = Store(_Model, TYPE);\n\nexport {\n  _Model,\n  Model,\n};\n","import Radio from 'backbone.radio';\nimport BaseEntity from 'js/base/entity-service';\nimport { _Model, Model } from './entities/workspace-patients';\nimport { v5 as uuid } from 'uuid';\n\nconst Entity = BaseEntity.extend({\n  Entity: { _Model, Model },\n  radioRequests: {\n    'get:workspacePatients:model': 'getByPatient',\n    'fetch:workspacePatients:byPatient': 'fetchByPatient',\n  },\n  fetchByPatient(patientId) {\n    const model = this.getByPatient(patientId);\n\n    return model.fetch();\n  },\n  getByPatient(patientId) {\n    const currentWorkspace = Radio.request('workspace', 'current');\n    const workspaceId = currentWorkspace.id;\n\n    return new Model({ id: uuid(patientId, workspaceId), _patient: patientId, _workspace: workspaceId });\n  },\n});\n\nexport default new Entity();\n","import { reject, union, pick } from 'underscore';\nimport Radio from 'backbone.radio';\nimport Store from 'backbone.store';\nimport BaseCollection from 'js/base/collection';\nimport BaseModel from 'js/base/model';\n\nconst TYPE = 'workspaces';\n\nconst _Model = BaseModel.extend({\n  type: TYPE,\n  urlRoot: '/api/workspaces',\n  getStates() {\n    return Radio.request('entities', 'states:collection', this.get('_states'));\n  },\n  getForms() {\n    return Radio.request('entities', 'forms:collection', this.get('_forms'));\n  },\n  getAssignableClinicians() {\n    const clinicians = Radio.request('entities', 'clinicians:collection', this.get('_clinicians'));\n\n    return clinicians.filterAssignable();\n  },\n  updateClinicians(clinicians) {\n    this.set('_clinicians', clinicians.map(m => pick(m, 'id', 'type')));\n  },\n  addClinician(clinician) {\n    const url = `/api/workspaces/${ this.id }/relationships/clinicians`;\n    const workspaces = clinician.get('_workspaces');\n\n    clinician.set({ _workspaces: union(workspaces, [{ id: this.id }]) });\n\n    this.set({ _clinicians: union(this.get('_clinicians'), [{ id: clinician.id }]) });\n\n    return this.sync('create', this, {\n      url,\n      data: JSON.stringify({\n        data: [{\n          id: clinician.id,\n          type: clinician.type,\n        }],\n      }),\n    });\n  },\n  removeClinician(clinician) {\n    const url = `/api/workspaces/${ this.id }/relationships/clinicians`;\n\n    clinician.set({ _workspaces: reject(clinician.get('_workspaces'), { id: this.id }) });\n\n    this.set({\n      _clinicians: reject(this.get('_clinicians'), { id: clinician.id }),\n    });\n\n    return this.sync('delete', this, {\n      url,\n      data: JSON.stringify({\n        data: [{\n          id: clinician.id,\n          type: clinician.type,\n        }],\n      }),\n    });\n  },\n});\n\nconst Model = Store(_Model, TYPE);\nconst Collection = BaseCollection.extend({\n  url: '/api/workspaces',\n  model: Model,\n  comparator: 'name',\n});\n\nexport {\n  _Model,\n  Model,\n  Collection,\n};\n","import BaseEntity from 'js/base/entity-service';\nimport { _Model, Model, Collection } from './entities/workspaces';\n\nconst Entity = BaseEntity.extend({\n  Entity: { _Model, Model, Collection },\n  radioRequests: {\n    'workspaces:model': 'getModel',\n    'workspaces:collection': 'getCollection',\n    'fetch:workspaces:collection': 'fetchCollection',\n  },\n});\n\nexport default new Entity();\n"],"names":["NIL_UUID","REGEX","validate","uuid","parse","v","arr","stringToBytes","str","bytes","i","DNS","URL","v35","name","version","hashfunc","generateUUID","value","namespace","buf","offset","_namespace","unsafeStringify","f","s","x","y","z","ROTL","n","sha1","K","H","msg","l","N","M","_i","j","_i2","W","t","_t","a","b","c","d","e","_t2","T","v5","ACTION_OUTREACH","FORM_RESPONSE_STATUS","ACTION_SHARING","PROGRAM_BEHAVIORS","RELATIVE_DATE_RANGES","STATE_STATUS","PATIENT_STATUS","TYPE","parseRelationship","JsonApiMixin","_parseRelationship","relationship","key","_Model","BaseModel","flow","tagName","contains","formId","Radio","owner","currentUsersTeam","ownersTeam","date","time","dayjs","dueDateTime","currentUser","state","saveOpts","sharing","attrs","extend","relationships","size","programAction","Model","Store","Collection","BaseCollection","saves","groupedCollection","reduce","keys","collection","Backbone","Entity","BaseEntity","id","include","data","patientId","filter","url","flowId","trim","previousTeam","reject","team","union","workspace","workspaces","prop","permissions","includes","role","names","first","last","hasTeam","hasWorkspaces","lastActive","clone","assignable","clinician","setUser","workspaceId","clinicians","message","actionId","options","map","slug","query","dedupeFile","fileName","extIndex","path","responseData","get","file","fileSize","resolve","xhr","complete","total","sortByDir","sortDirection","sortableVal","alphaSort","sortDir","nullVal","getSortNum","val","defaultVal","isNumber","numSort","sortVal","omit","responseA","responseB","submissions","filters","response","term","prefixes","fetcher","handleJSON","currentWorkspace","first_name","last_name","birth_date","sex","errors","isEmpty","opts","workspacePatient","newStatus","debounce","search","isBoolean","model","collectionOf","list","property","item","object","tag","tags","states","defaultInitialState","visibleToTeamsList","currentUserTeam","form","saveData","models","flowAction","sequence","addable","action","isPublished","isArchived","isAutomated","isVisible","programId","behavior","programActions","programFlows","actions","flows","userWorkspaces","done","notDone","tagsCache","widget","requestValues","attr","uniqueId","m","pick"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}