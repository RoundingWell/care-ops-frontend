{"version":3,"file":"20240318-675-54cdd0ab6000832c4365.js","mappings":"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","sources":["webpack://care-ops-frontend/./node_modules/sortablejs/modular/sortable.esm.js"],"sourcesContent":["/**!\n * Sortable 1.15.1\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar version = \"1.15.1\";\n\nfunction userAgent(pattern) {\n  if (typeof window !== 'undefined' && window.navigator) {\n    return !! /*@__PURE__*/navigator.userAgent.match(pattern);\n  }\n}\nvar IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i);\nvar Edge = userAgent(/Edge/i);\nvar FireFox = userAgent(/firefox/i);\nvar Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nvar IOS = userAgent(/iP(ad|od|hone)/i);\nvar ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n\nvar captureMode = {\n  capture: false,\n  passive: false\n};\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\nfunction matches( /**HTMLElement*/el, /**String*/selector) {\n  if (!selector) return;\n  selector[0] === '>' && (selector = selector.substring(1));\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n  return false;\n}\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\n}\nfunction closest( /**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx, includeCTX) {\n  if (el) {\n    ctx = ctx || document;\n    do {\n      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\n        return el;\n      }\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while (el = getParentOrHost(el));\n  }\n  return null;\n}\nvar R_SPACE = /\\s+/g;\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? 'add' : 'remove'](name);\n    } else {\n      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n    }\n  }\n}\nfunction css(el, prop, val) {\n  var style = el && el.style;\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, '');\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf('webkit') === -1) {\n        prop = '-webkit-' + prop;\n      }\n      style[prop] = val + (typeof val === 'string' ? '' : 'px');\n    }\n  }\n}\nfunction matrix(el, selfOnly) {\n  var appliedTransforms = '';\n  if (typeof el === 'string') {\n    appliedTransforms = el;\n  } else {\n    do {\n      var transform = css(el, 'transform');\n      if (transform && transform !== 'none') {\n        appliedTransforms = transform + ' ' + appliedTransforms;\n      }\n      /* jshint boss:true */\n    } while (!selfOnly && (el = el.parentNode));\n  }\n  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n  /*jshint -W056 */\n  return matrixFn && new matrixFn(appliedTransforms);\n}\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    var list = ctx.getElementsByTagName(tagName),\n      i = 0,\n      n = list.length;\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n    return list;\n  }\n  return [];\n}\nfunction getWindowScrollingElement() {\n  var scrollingElement = document.scrollingElement;\n  if (scrollingElement) {\n    return scrollingElement;\n  } else {\n    return document.documentElement;\n  }\n}\n\n/**\r\n * Returns the \"bounding client rect\" of given element\r\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\r\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\r\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\r\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\r\n * @param  {[HTMLElement]} container              The parent the element will be placed in\r\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\r\n */\nfunction getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\n  if (!el.getBoundingClientRect && el !== window) return;\n  var elRect, top, left, bottom, right, height, width;\n  if (el !== window && el.parentNode && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\n    // Adjust for translate()\n    container = container || el.parentNode;\n\n    // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n    if (!IE11OrLess) {\n      do {\n        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\n          var containerRect = container.getBoundingClientRect();\n\n          // Set relative to edges of padding box of container\n          top -= containerRect.top + parseInt(css(container, 'border-top-width'));\n          left -= containerRect.left + parseInt(css(container, 'border-left-width'));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n          break;\n        }\n        /* jshint boss:true */\n      } while (container = container.parentNode);\n    }\n  }\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    var elMatrix = matrix(container || el),\n      scaleX = elMatrix && elMatrix.a,\n      scaleY = elMatrix && elMatrix.d;\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n      width /= scaleX;\n      height /= scaleY;\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n\n/**\r\n * Returns the content rect of the element (bounding rect minus border and padding)\r\n * @param {HTMLElement} el \r\n */\nfunction getContentRect(el) {\n  var rect = getRect(el);\n  var paddingLeft = parseInt(css(el, 'padding-left')),\n    paddingTop = parseInt(css(el, 'padding-top')),\n    paddingRight = parseInt(css(el, 'padding-right')),\n    paddingBottom = parseInt(css(el, 'padding-bottom'));\n  rect.top += paddingTop + parseInt(css(el, 'border-top-width'));\n  rect.left += paddingLeft + parseInt(css(el, 'border-left-width'));\n  // Client Width/Height includes padding only\n  rect.width = el.clientWidth - paddingLeft - paddingRight;\n  rect.height = el.clientHeight - paddingTop - paddingBottom;\n  rect.bottom = rect.top + rect.height;\n  rect.right = rect.left + rect.width;\n  return rect;\n}\n\n/**\r\n * Checks if a side of an element is scrolled past a side of its parents\r\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\r\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\r\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\r\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\r\n */\nfunction isScrolledPast(el, elSide, parentSide) {\n  var parent = getParentAutoScrollElement(el, true),\n    elSideVal = getRect(el)[elSide];\n\n  /* jshint boss:true */\n  while (parent) {\n    var parentSideVal = getRect(parent)[parentSide],\n      visible = void 0;\n    if (parentSide === 'top' || parentSide === 'left') {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n    if (!visible) return parent;\n    if (parent === getWindowScrollingElement()) break;\n    parent = getParentAutoScrollElement(parent, false);\n  }\n  return false;\n}\n\n/**\r\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\r\n * and non-draggable elements\r\n * @param  {HTMLElement} el       The parent element\r\n * @param  {Number} childNum      The index of the child\r\n * @param  {Object} options       Parent Sortable's options\r\n * @return {HTMLElement}          The child at index childNum, or null if not found\r\n */\nfunction getChild(el, childNum, options, includeDragEl) {\n  var currentChild = 0,\n    i = 0,\n    children = el.children;\n  while (i < children.length) {\n    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && (includeDragEl || children[i] !== Sortable.dragged) && closest(children[i], options.draggable, el, false)) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n      currentChild++;\n    }\n    i++;\n  }\n  return null;\n}\n\n/**\r\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\r\n * @param  {HTMLElement} el       Parent element\r\n * @param  {selector} selector    Any other elements that should be ignored\r\n * @return {HTMLElement}          The last child, ignoring ghostEl\r\n */\nfunction lastChild(el, selector) {\n  var last = el.lastElementChild;\n  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\n    last = last.previousElementSibling;\n  }\n  return last || null;\n}\n\n/**\r\n * Returns the index of an element within its parent for a selected set of\r\n * elements\r\n * @param  {HTMLElement} el\r\n * @param  {selector} selector\r\n * @return {number}\r\n */\nfunction index(el, selector) {\n  var index = 0;\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n\n  /* jshint boss:true */\n  while (el = el.previousElementSibling) {\n    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\n      index++;\n    }\n  }\n  return index;\n}\n\n/**\r\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\r\n * The value is returned in real pixels.\r\n * @param  {HTMLElement} el\r\n * @return {Array}             Offsets in the format of [left, top]\r\n */\nfunction getRelativeScrollOffset(el) {\n  var offsetLeft = 0,\n    offsetTop = 0,\n    winScroller = getWindowScrollingElement();\n  if (el) {\n    do {\n      var elMatrix = matrix(el),\n        scaleX = elMatrix.a,\n        scaleY = elMatrix.d;\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n  return [offsetLeft, offsetTop];\n}\n\n/**\r\n * Returns the index of the object within the given array\r\n * @param  {Array} arr   Array that may or may not hold the object\r\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\r\n * @return {Number}      The index of the object in the array, or -1\r\n */\nfunction indexOfObject(arr, obj) {\n  for (var i in arr) {\n    if (!arr.hasOwnProperty(i)) continue;\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n  return -1;\n}\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n  var elem = el;\n  var gotSelf = false;\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n      var elemCSS = css(elem);\n      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\n        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n  } while (elem = elem.parentNode);\n  return getWindowScrollingElement();\n}\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (var key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n  return dst;\n}\nfunction isRectEqual(rect1, rect2) {\n  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\n}\nvar _throttleTimeout;\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      var args = arguments,\n        _this = this;\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\nfunction clone(el) {\n  var Polymer = window.Polymer;\n  var $ = window.jQuery || window.Zepto;\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\nfunction setRect(el, rect) {\n  css(el, 'position', 'absolute');\n  css(el, 'top', rect.top);\n  css(el, 'left', rect.left);\n  css(el, 'width', rect.width);\n  css(el, 'height', rect.height);\n}\nfunction unsetRect(el) {\n  css(el, 'position', '');\n  css(el, 'top', '');\n  css(el, 'left', '');\n  css(el, 'width', '');\n  css(el, 'height', '');\n}\nvar expando = 'Sortable' + new Date().getTime();\n\nfunction AnimationStateManager() {\n  var animationStates = [],\n    animationCallbackId;\n  return {\n    captureAnimationState: function captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      var children = [].slice.call(this.el.children);\n      children.forEach(function (child) {\n        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;\n        animationStates.push({\n          target: child,\n          rect: getRect(child)\n        });\n        var fromRect = _objectSpread2({}, animationStates[animationStates.length - 1].rect);\n\n        // If animating: compensate for current animation\n        if (child.thisAnimationDuration) {\n          var childMatrix = matrix(child, true);\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n        child.fromRect = fromRect;\n      });\n    },\n    addAnimationState: function addAnimationState(state) {\n      animationStates.push(state);\n    },\n    removeAnimationState: function removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, {\n        target: target\n      }), 1);\n    },\n    animateAll: function animateAll(callback) {\n      var _this = this;\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === 'function') callback();\n        return;\n      }\n      var animating = false,\n        animationTime = 0;\n      animationStates.forEach(function (state) {\n        var time = 0,\n          target = state.target,\n          fromRect = target.fromRect,\n          toRect = getRect(target),\n          prevFromRect = target.prevFromRect,\n          prevToRect = target.prevToRect,\n          animatingRect = state.rect,\n          targetMatrix = matrix(target, true);\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n        target.toRect = toRect;\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) &&\n          // Make sure animatingRect is on line between toRect & fromRect\n          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);\n          }\n        }\n\n        // if fromRect != toRect: animate\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n          if (!time) {\n            time = _this.options.animation;\n          }\n          _this.animate(target, animatingRect, toRect, time);\n        }\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            target.animationTime = 0;\n            target.prevFromRect = null;\n            target.fromRect = null;\n            target.prevToRect = null;\n            target.thisAnimationDuration = null;\n          }, time);\n          target.thisAnimationDuration = time;\n        }\n      });\n      clearTimeout(animationCallbackId);\n      if (!animating) {\n        if (typeof callback === 'function') callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === 'function') callback();\n        }, animationTime);\n      }\n      animationStates = [];\n    },\n    animate: function animate(target, currentRect, toRect, duration) {\n      if (duration) {\n        css(target, 'transition', '');\n        css(target, 'transform', '');\n        var elMatrix = matrix(this.el),\n          scaleX = elMatrix && elMatrix.a,\n          scaleY = elMatrix && elMatrix.d,\n          translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n          translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\n        this.forRepaintDummy = repaint(target); // repaint\n\n        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n        css(target, 'transform', 'translate3d(0,0,0)');\n        typeof target.animated === 'number' && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, 'transition', '');\n          css(target, 'transform', '');\n          target.animated = false;\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    }\n  };\n}\nfunction repaint(target) {\n  return target.offsetWidth;\n}\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\n}\n\nvar plugins = [];\nvar defaults = {\n  initializeByDefault: true\n};\nvar PluginManager = {\n  mount: function mount(plugin) {\n    // Set default static properties\n    for (var option in defaults) {\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n        plugin[option] = defaults[option];\n      }\n    }\n    plugins.forEach(function (p) {\n      if (p.pluginName === plugin.pluginName) {\n        throw \"Sortable: Cannot mount plugin \".concat(plugin.pluginName, \" more than once\");\n      }\n    });\n    plugins.push(plugin);\n  },\n  pluginEvent: function pluginEvent(eventName, sortable, evt) {\n    var _this = this;\n    this.eventCanceled = false;\n    evt.cancel = function () {\n      _this.eventCanceled = true;\n    };\n    var eventNameGlobal = eventName + 'Global';\n    plugins.forEach(function (plugin) {\n      if (!sortable[plugin.pluginName]) return;\n      // Fire global events if it exists in this sortable\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\n        sortable[plugin.pluginName][eventNameGlobal](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      }\n\n      // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {\n        sortable[plugin.pluginName][eventName](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      }\n    });\n  },\n  initializePlugins: function initializePlugins(sortable, el, defaults, options) {\n    plugins.forEach(function (plugin) {\n      var pluginName = plugin.pluginName;\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n      var initialized = new plugin(sortable, el, sortable.options);\n      initialized.sortable = sortable;\n      initialized.options = sortable.options;\n      sortable[pluginName] = initialized;\n\n      // Add default options from plugin\n      _extends(defaults, initialized.defaults);\n    });\n    for (var option in sortable.options) {\n      if (!sortable.options.hasOwnProperty(option)) continue;\n      var modified = this.modifyOption(sortable, option, sortable.options[option]);\n      if (typeof modified !== 'undefined') {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventProperties: function getEventProperties(name, sortable) {\n    var eventProperties = {};\n    plugins.forEach(function (plugin) {\n      if (typeof plugin.eventProperties !== 'function') return;\n      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));\n    });\n    return eventProperties;\n  },\n  modifyOption: function modifyOption(sortable, name, value) {\n    var modifiedValue;\n    plugins.forEach(function (plugin) {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugin.pluginName]) return;\n\n      // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {\n        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);\n      }\n    });\n    return modifiedValue;\n  }\n};\n\nfunction dispatchEvent(_ref) {\n  var sortable = _ref.sortable,\n    rootEl = _ref.rootEl,\n    name = _ref.name,\n    targetEl = _ref.targetEl,\n    cloneEl = _ref.cloneEl,\n    toEl = _ref.toEl,\n    fromEl = _ref.fromEl,\n    oldIndex = _ref.oldIndex,\n    newIndex = _ref.newIndex,\n    oldDraggableIndex = _ref.oldDraggableIndex,\n    newDraggableIndex = _ref.newDraggableIndex,\n    originalEvent = _ref.originalEvent,\n    putSortable = _ref.putSortable,\n    extraEventProperties = _ref.extraEventProperties;\n  sortable = sortable || rootEl && rootEl[expando];\n  if (!sortable) return;\n  var evt,\n    options = sortable.options,\n    onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\n  // Support for new CustomEvent feature\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent(name, true, true);\n  }\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n  var allEventProperties = _objectSpread2(_objectSpread2({}, extraEventProperties), PluginManager.getEventProperties(name, sortable));\n  for (var option in allEventProperties) {\n    evt[option] = allEventProperties[option];\n  }\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\n\nvar _excluded = [\"evt\"];\nvar pluginEvent = function pluginEvent(eventName, sortable) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n    originalEvent = _ref.evt,\n    data = _objectWithoutProperties(_ref, _excluded);\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread2({\n    dragEl: dragEl,\n    parentEl: parentEl,\n    ghostEl: ghostEl,\n    rootEl: rootEl,\n    nextEl: nextEl,\n    lastDownEl: lastDownEl,\n    cloneEl: cloneEl,\n    cloneHidden: cloneHidden,\n    dragStarted: moved,\n    putSortable: putSortable,\n    activeSortable: Sortable.active,\n    originalEvent: originalEvent,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex,\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n    cloneNowHidden: function cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown: function cloneNowShown() {\n      cloneHidden = false;\n    },\n    dispatchSortableEvent: function dispatchSortableEvent(name) {\n      _dispatchEvent({\n        sortable: sortable,\n        name: name,\n        originalEvent: originalEvent\n      });\n    }\n  }, data));\n};\nfunction _dispatchEvent(info) {\n  dispatchEvent(_objectSpread2({\n    putSortable: putSortable,\n    cloneEl: cloneEl,\n    targetEl: dragEl,\n    rootEl: rootEl,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex\n  }, info));\n}\nvar dragEl,\n  parentEl,\n  ghostEl,\n  rootEl,\n  nextEl,\n  lastDownEl,\n  cloneEl,\n  cloneHidden,\n  oldIndex,\n  newIndex,\n  oldDraggableIndex,\n  newDraggableIndex,\n  activeGroup,\n  putSortable,\n  awaitingDragStarted = false,\n  ignoreNextClick = false,\n  sortables = [],\n  tapEvt,\n  touchEvt,\n  lastDx,\n  lastDy,\n  tapDistanceLeft,\n  tapDistanceTop,\n  moved,\n  lastTarget,\n  lastDirection,\n  pastFirstInvertThresh = false,\n  isCircumstantialInvert = false,\n  targetMoveDistance,\n  // For positioning ghost absolutely\n  ghostRelativeParent,\n  ghostRelativeParentInitialScroll = [],\n  // (left, top)\n\n  _silent = false,\n  savedInputChecked = [];\n\n/** @const */\nvar documentExists = typeof document !== 'undefined',\n  PositionGhostAbsolutely = IOS,\n  CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n  // This will not pass for IE9, because IE9 DnD only works on anchors\n  supportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),\n  supportCssPointerEvents = function () {\n    if (!documentExists) return;\n    // false when <= IE11\n    if (IE11OrLess) {\n      return false;\n    }\n    var el = document.createElement('x');\n    el.style.cssText = 'pointer-events:auto';\n    return el.style.pointerEvents === 'auto';\n  }(),\n  _detectDirection = function _detectDirection(el, options) {\n    var elCSS = css(el),\n      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      firstChildCSS = child1 && css(child1),\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\n      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\n    if (elCSS.display === 'flex') {\n      return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\n    }\n    if (elCSS.display === 'grid') {\n      return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n    }\n    if (child1 && firstChildCSS[\"float\"] && firstChildCSS[\"float\"] !== 'none') {\n      var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\n      return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\n    }\n    return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\n  },\n  _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\n    var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n    return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\n  },\n  /**\r\n   * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\r\n   * @param  {Number} x      X position\r\n   * @param  {Number} y      Y position\r\n   * @return {HTMLElement}   Element of the first found nearest Sortable\r\n   */\n  _detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\n    var ret;\n    sortables.some(function (sortable) {\n      var threshold = sortable[expando].options.emptyInsertThreshold;\n      if (!threshold || lastChild(sortable)) return;\n      var rect = getRect(sortable),\n        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\n      if (insideHorizontally && insideVertically) {\n        return ret = sortable;\n      }\n    });\n    return ret;\n  },\n  _prepareGroup = function _prepareGroup(options) {\n    function toFn(value, pull) {\n      return function (to, from, dragEl, evt) {\n        var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\n        if (value == null && (pull || sameGroup)) {\n          // Default pull value\n          // Default pull and put value if same group\n          return true;\n        } else if (value == null || value === false) {\n          return false;\n        } else if (pull && value === 'clone') {\n          return value;\n        } else if (typeof value === 'function') {\n          return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n        } else {\n          var otherGroup = (pull ? to : from).options.group.name;\n          return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\n        }\n      };\n    }\n    var group = {};\n    var originalGroup = options.group;\n    if (!originalGroup || _typeof(originalGroup) != 'object') {\n      originalGroup = {\n        name: originalGroup\n      };\n    }\n    group.name = originalGroup.name;\n    group.checkPull = toFn(originalGroup.pull, true);\n    group.checkPut = toFn(originalGroup.put);\n    group.revertClone = originalGroup.revertClone;\n    options.group = group;\n  },\n  _hideGhostForTarget = function _hideGhostForTarget() {\n    if (!supportCssPointerEvents && ghostEl) {\n      css(ghostEl, 'display', 'none');\n    }\n  },\n  _unhideGhostForTarget = function _unhideGhostForTarget() {\n    if (!supportCssPointerEvents && ghostEl) {\n      css(ghostEl, 'display', '');\n    }\n  };\n\n// #1184 fix - Prevent click event on fallback if dragged but item not changed position\nif (documentExists && !ChromeForAndroid) {\n  document.addEventListener('click', function (evt) {\n    if (ignoreNextClick) {\n      evt.preventDefault();\n      evt.stopPropagation && evt.stopPropagation();\n      evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n      ignoreNextClick = false;\n      return false;\n    }\n  }, true);\n}\nvar nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n    if (nearest) {\n      // Create imitation event\n      var event = {};\n      for (var i in evt) {\n        if (evt.hasOwnProperty(i)) {\n          event[i] = evt[i];\n        }\n      }\n      event.target = event.rootEl = nearest;\n      event.preventDefault = void 0;\n      event.stopPropagation = void 0;\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\nvar _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n\n/**\r\n * @class  Sortable\r\n * @param  {HTMLElement}  el\r\n * @param  {Object}       [options]\r\n */\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\n  }\n  this.el = el; // root element\n  this.options = options = _extends({}, options);\n\n  // Export instance\n  el[expando] = this;\n  var defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\n    swapThreshold: 1,\n    // percentage; 0 <= x <= 1\n    invertSwap: false,\n    // invert always\n    invertedSwapThreshold: null,\n    // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function direction() {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: 'sortable-ghost',\n    chosenClass: 'sortable-chosen',\n    dragClass: 'sortable-drag',\n    ignore: 'a, img',\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function setData(dataTransfer, dragEl) {\n      dataTransfer.setData('Text', dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: 'data-id',\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n    forceFallback: false,\n    fallbackClass: 'sortable-fallback',\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: {\n      x: 0,\n      y: 0\n    },\n    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window && !Safari,\n    emptyInsertThreshold: 5\n  };\n  PluginManager.initializePlugins(this, el, defaults);\n\n  // Set default options\n  for (var name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n  _prepareGroup(options);\n\n  // Bind all private methods\n  for (var fn in this) {\n    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n      this[fn] = this[fn].bind(this);\n    }\n  }\n\n  // Setup drag mode\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  }\n\n  // Bind events\n  if (options.supportPointer) {\n    on(el, 'pointerdown', this._onTapStart);\n  } else {\n    on(el, 'mousedown', this._onTapStart);\n    on(el, 'touchstart', this._onTapStart);\n  }\n  if (this.nativeDraggable) {\n    on(el, 'dragover', this);\n    on(el, 'dragenter', this);\n  }\n  sortables.push(this.el);\n\n  // Restore sorting\n  options.store && options.store.get && this.sort(options.store.get(this) || []);\n\n  // Add animation state manager\n  _extends(this, AnimationStateManager());\n}\nSortable.prototype = /** @lends Sortable.prototype */{\n  constructor: Sortable,\n  _isOutsideThisEl: function _isOutsideThisEl(target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n  _getDirection: function _getDirection(evt, target) {\n    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n  },\n  _onTapStart: function _onTapStart( /** Event|TouchEvent */evt) {\n    if (!evt.cancelable) return;\n    var _this = this,\n      el = this.el,\n      options = this.options,\n      preventOnFilter = options.preventOnFilter,\n      type = evt.type,\n      touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,\n      target = (touch || evt).target,\n      originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\n      filter = options.filter;\n    _saveInputCheckedState(el);\n\n    // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n    if (dragEl) {\n      return;\n    }\n    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n      return; // only left button and enabled\n    }\n\n    // cancel dnd if original target is content editable\n    if (originalTarget.isContentEditable) {\n      return;\n    }\n\n    // Safari ignores further event handling after mousedown\n    if (!this.nativeDraggable && Safari && target && target.tagName.toUpperCase() === 'SELECT') {\n      return;\n    }\n    target = closest(target, options.draggable, el, false);\n    if (target && target.animated) {\n      return;\n    }\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    }\n\n    // Get the index of the dragged element within its parent\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable);\n\n    // Check filter\n    if (typeof filter === 'function') {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: 'filter',\n          targetEl: target,\n          toEl: el,\n          fromEl: el\n        });\n        pluginEvent('filter', _this, {\n          evt: evt\n        });\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(',').some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: 'filter',\n            targetEl: target,\n            fromEl: el,\n            toEl: el\n          });\n          pluginEvent('filter', _this, {\n            evt: evt\n          });\n          return true;\n        }\n      });\n      if (filter) {\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    }\n\n    // Prepare `dragstart`\n    this._prepareDragStart(evt, touch, target);\n  },\n  _prepareDragStart: function _prepareDragStart( /** Event */evt, /** Touch */touch, /** HTMLElement */target) {\n    var _this = this,\n      el = _this.el,\n      options = _this.options,\n      ownerDocument = el.ownerDocument,\n      dragStartFn;\n    if (target && !dragEl && target.parentNode === el) {\n      var dragRect = getRect(target);\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n      Sortable.dragged = dragEl;\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY\n      };\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n      dragEl.style['will-change'] = 'all';\n      dragStartFn = function dragStartFn() {\n        pluginEvent('delayEnded', _this, {\n          evt: evt\n        });\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n          return;\n        }\n        // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n        _this._disableDelayedDragEvents();\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        }\n\n        // Bind the events: dragstart/dragend\n        _this._triggerDragStart(evt, touch);\n\n        // Drag start event\n        _dispatchEvent({\n          sortable: _this,\n          name: 'choose',\n          originalEvent: evt\n        });\n\n        // Chosen item\n        toggleClass(dragEl, options.chosenClass, true);\n      };\n\n      // Disable \"draggable\"\n      options.ignore.split(',').forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mouseup', _this._onDrop);\n      on(ownerDocument, 'touchend', _this._onDrop);\n      on(ownerDocument, 'touchcancel', _this._onDrop);\n\n      // Make dragEl draggable (must be before delay for FireFox)\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n      pluginEvent('delayStart', this, {\n        evt: evt\n      });\n\n      // Delay is impossible for native DnD in Edge or IE\n      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n          return;\n        }\n        // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler( /** TouchEvent|PointerEvent **/e) {\n    var touch = e.touches ? e.touches[0] : e;\n    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\n      this._disableDelayedDrag();\n    }\n  },\n  _disableDelayedDrag: function _disableDelayedDrag() {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n    this._disableDelayedDragEvents();\n  },\n  _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n    off(ownerDocument, 'touchend', this._disableDelayedDrag);\n    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n  },\n  _triggerDragStart: function _triggerDragStart( /** Event */evt, /** Touch */touch) {\n    touch = touch || evt.pointerType == 'touch' && evt;\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, 'pointermove', this._onTouchMove);\n      } else if (touch) {\n        on(document, 'touchmove', this._onTouchMove);\n      } else {\n        on(document, 'mousemove', this._onTouchMove);\n      }\n    } else {\n      on(dragEl, 'dragend', this);\n      on(rootEl, 'dragstart', this._onDragStart);\n    }\n    try {\n      if (document.selection) {\n        // Timeout neccessary for IE9\n        _nextTick(function () {\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n  _dragStarted: function _dragStarted(fallback, evt) {\n    awaitingDragStarted = false;\n    if (rootEl && dragEl) {\n      pluginEvent('dragStarted', this, {\n        evt: evt\n      });\n      if (this.nativeDraggable) {\n        on(document, 'dragover', _checkOutsideTargetEl);\n      }\n      var options = this.options;\n\n      // Apply effect\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n      Sortable.active = this;\n      fallback && this._appendGhost();\n\n      // Drag start event\n      _dispatchEvent({\n        sortable: this,\n        name: 'start',\n        originalEvent: evt\n      });\n    } else {\n      this._nulling();\n    }\n  },\n  _emulateDragOver: function _emulateDragOver() {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n      _hideGhostForTarget();\n      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n      var parent = target;\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n        if (target === parent) break;\n        parent = target;\n      }\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            var inserted = void 0;\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent\n            });\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n          target = parent; // store last element\n        }\n        /* jshint boss:true */ while (parent = parent.parentNode);\n      }\n      _unhideGhostForTarget();\n    }\n  },\n  _onTouchMove: function _onTouchMove( /**TouchEvent*/evt) {\n    if (tapEvt) {\n      var options = this.options,\n        fallbackTolerance = options.fallbackTolerance,\n        fallbackOffset = options.fallbackOffset,\n        touch = evt.touches ? evt.touches[0] : evt,\n        ghostMatrix = ghostEl && matrix(ghostEl, true),\n        scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n        scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n        relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\n        dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\n        dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1);\n\n      // only set the status to dragging, when we are actually dragging\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\n          return;\n        }\n        this._onDragStart(evt, true);\n      }\n      if (ghostEl) {\n        if (ghostMatrix) {\n          ghostMatrix.e += dx - (lastDx || 0);\n          ghostMatrix.f += dy - (lastDy || 0);\n        } else {\n          ghostMatrix = {\n            a: 1,\n            b: 0,\n            c: 0,\n            d: 1,\n            e: dx,\n            f: dy\n          };\n        }\n        var cssMatrix = \"matrix(\".concat(ghostMatrix.a, \",\").concat(ghostMatrix.b, \",\").concat(ghostMatrix.c, \",\").concat(ghostMatrix.d, \",\").concat(ghostMatrix.e, \",\").concat(ghostMatrix.f, \")\");\n        css(ghostEl, 'webkitTransform', cssMatrix);\n        css(ghostEl, 'mozTransform', cssMatrix);\n        css(ghostEl, 'msTransform', cssMatrix);\n        css(ghostEl, 'transform', cssMatrix);\n        lastDx = dx;\n        lastDy = dy;\n        touchEvt = touch;\n      }\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n  _appendGhost: function _appendGhost() {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      var container = this.options.fallbackOnBody ? document.body : rootEl,\n        rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n        options = this.options;\n\n      // Position absolutely\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\n      }\n      ghostEl = dragEl.cloneNode(true);\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n      css(ghostEl, 'transition', '');\n      css(ghostEl, 'transform', '');\n      css(ghostEl, 'box-sizing', 'border-box');\n      css(ghostEl, 'margin', 0);\n      css(ghostEl, 'top', rect.top);\n      css(ghostEl, 'left', rect.left);\n      css(ghostEl, 'width', rect.width);\n      css(ghostEl, 'height', rect.height);\n      css(ghostEl, 'opacity', '0.8');\n      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\n      css(ghostEl, 'zIndex', '100000');\n      css(ghostEl, 'pointerEvents', 'none');\n      Sortable.ghost = ghostEl;\n      container.appendChild(ghostEl);\n\n      // Set transform-origin\n      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');\n    }\n  },\n  _onDragStart: function _onDragStart( /**Event*/evt, /**boolean*/fallback) {\n    var _this = this;\n    var dataTransfer = evt.dataTransfer;\n    var options = _this.options;\n    pluginEvent('dragStart', this, {\n      evt: evt\n    });\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n      return;\n    }\n    pluginEvent('setupClone', this);\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n      cloneEl.removeAttribute(\"id\");\n      cloneEl.draggable = false;\n      cloneEl.style['will-change'] = '';\n      this._hideClone();\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      Sortable.clone = cloneEl;\n    }\n\n    // #1143: IFrame support workaround\n    _this.cloneId = _nextTick(function () {\n      pluginEvent('clone', _this);\n      if (Sortable.eventCanceled) return;\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n      _this._hideClone();\n      _dispatchEvent({\n        sortable: _this,\n        name: 'clone'\n      });\n    });\n    !fallback && toggleClass(dragEl, options.dragClass, true);\n\n    // Set proper drop events\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, 'mouseup', _this._onDrop);\n      off(document, 'touchend', _this._onDrop);\n      off(document, 'touchcancel', _this._onDrop);\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = 'move';\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n      on(document, 'drop', _this);\n\n      // #1276 fix:\n      css(dragEl, 'transform', 'translateZ(0)');\n    }\n    awaitingDragStarted = true;\n    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n    on(document, 'selectstart', _this);\n    moved = true;\n    if (Safari) {\n      css(document.body, 'user-select', 'none');\n    }\n  },\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function _onDragOver( /**Event*/evt) {\n    var el = this.el,\n      target = evt.target,\n      dragRect,\n      targetRect,\n      revert,\n      options = this.options,\n      group = options.group,\n      activeSortable = Sortable.active,\n      isOwner = activeGroup === group,\n      canSort = options.sort,\n      fromSortable = putSortable || activeSortable,\n      vertical,\n      _this = this,\n      completedFired = false;\n    if (_silent) return;\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, _objectSpread2({\n        evt: evt,\n        isOwner: isOwner,\n        axis: vertical ? 'vertical' : 'horizontal',\n        revert: revert,\n        dragRect: dragRect,\n        targetRect: targetRect,\n        canSort: canSort,\n        fromSortable: fromSortable,\n        target: target,\n        completed: completed,\n        onMove: function onMove(target, after) {\n          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\n        },\n        changed: changed\n      }, extra));\n    }\n\n    // Capture animation state\n    function capture() {\n      dragOverEvent('dragOverAnimationCapture');\n      _this.captureAnimationState();\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    }\n\n    // Return invocation when dragEl is inserted (or completed)\n    function completed(insertion) {\n      dragOverEvent('dragOverCompleted', {\n        insertion: insertion\n      });\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        }\n\n        // Animation\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n        _this.animateAll(function () {\n          dragOverEvent('dragOverAnimationComplete');\n          _this._ignoreWhileAnimating = null;\n        });\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      }\n\n      // Null lastTarget if it is not inside a previously swapped element\n      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\n        lastTarget = null;\n      }\n\n      // no bubbling and not fallback\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n\n        // Do not detect for empty insert if already inserted\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n      return completedFired = true;\n    }\n\n    // Call when dragEl has been inserted\n    function changed() {\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n      _dispatchEvent({\n        sortable: _this,\n        name: 'change',\n        toEl: el,\n        newIndex: newIndex,\n        newDraggableIndex: newDraggableIndex,\n        originalEvent: evt\n      });\n    }\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n    target = closest(target, options.draggable, el, true);\n    dragOverEvent('dragOver');\n    if (Sortable.eventCanceled) return completedFired;\n    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\n      return completed(false);\n    }\n    ignoreNextClick = false;\n    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = parentEl !== rootEl) // Reverting item into the original list\n    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\n      vertical = this._getDirection(evt, target) === 'vertical';\n      dragRect = getRect(dragEl);\n      dragOverEvent('dragOverValid');\n      if (Sortable.eventCanceled) return completedFired;\n      if (revert) {\n        parentEl = rootEl; // actualization\n        capture();\n        this._hideClone();\n        dragOverEvent('revert');\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n        return completed(true);\n      }\n      var elLastChild = lastChild(el, options.draggable);\n      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\n        // Insert to end of list\n\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        }\n\n        // if there is a last element, it is the target\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n        if (target) {\n          targetRect = getRect(target);\n        }\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n          capture();\n          if (elLastChild && elLastChild.nextSibling) {\n            // the last draggable element is not the last node\n            el.insertBefore(dragEl, elLastChild.nextSibling);\n          } else {\n            el.appendChild(dragEl);\n          }\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (elLastChild && _ghostIsFirst(evt, vertical, this)) {\n        // Insert to start of list\n        var firstChild = getChild(el, 0, options, true);\n        if (firstChild === dragEl) {\n          return completed(false);\n        }\n        target = firstChild;\n        targetRect = getRect(target);\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, false) !== false) {\n          capture();\n          el.insertBefore(dragEl, firstChild);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        targetRect = getRect(target);\n        var direction = 0,\n          targetBeforeFirstSwap,\n          differentLevel = dragEl.parentNode !== el,\n          differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\n          side1 = vertical ? 'top' : 'left',\n          scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),\n          scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\n        }\n        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\n        var sibling;\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          var dragIndex = index(dragEl);\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\n        }\n        // If dragEl is already beside target: Do not insert\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n        lastTarget = target;\n        lastDirection = direction;\n        var nextSibling = target.nextElementSibling,\n          after = false;\n        after = direction === 1;\n        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n          _silent = true;\n          setTimeout(_unsilent, 30);\n          capture();\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n          }\n\n          // Undo chrome's scroll adjustment (has no effect on other browsers)\n          if (scrolledPastTop) {\n            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n          }\n          parentEl = dragEl.parentNode; // actualization\n\n          // must be done before animation\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\n          }\n          changed();\n          return completed(true);\n        }\n      }\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n    return false;\n  },\n  _ignoreWhileAnimating: null,\n  _offMoveEvents: function _offMoveEvents() {\n    off(document, 'mousemove', this._onTouchMove);\n    off(document, 'touchmove', this._onTouchMove);\n    off(document, 'pointermove', this._onTouchMove);\n    off(document, 'dragover', nearestEmptyInsertDetectEvent);\n    off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n    off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n  },\n  _offUpEvents: function _offUpEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._onDrop);\n    off(ownerDocument, 'touchend', this._onDrop);\n    off(ownerDocument, 'pointerup', this._onDrop);\n    off(ownerDocument, 'touchcancel', this._onDrop);\n    off(document, 'selectstart', this);\n  },\n  _onDrop: function _onDrop( /**Event*/evt) {\n    var el = this.el,\n      options = this.options;\n\n    // Get the index of the dragged element within its parent\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    pluginEvent('drop', this, {\n      evt: evt\n    });\n    parentEl = dragEl && dragEl.parentNode;\n\n    // Get again after plugin event\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    if (Sortable.eventCanceled) {\n      this._nulling();\n      return;\n    }\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n    clearInterval(this._loopId);\n    clearTimeout(this._dragStartTimer);\n    _cancelNextTick(this.cloneId);\n    _cancelNextTick(this._dragStartId);\n\n    // Unbind events\n    if (this.nativeDraggable) {\n      off(document, 'drop', this);\n      off(el, 'dragstart', this._onDragStart);\n    }\n    this._offMoveEvents();\n    this._offUpEvents();\n    if (Safari) {\n      css(document.body, 'user-select', '');\n    }\n    css(dragEl, 'transform', '');\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        // Remove clone(s)\n        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n      }\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, 'dragend', this);\n        }\n        _disableDraggable(dragEl);\n        dragEl.style['will-change'] = '';\n\n        // Remove classes\n        // ghostClass is added in dragStarted\n        if (moved && !awaitingDragStarted) {\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n        }\n        toggleClass(dragEl, this.options.chosenClass, false);\n\n        // Drag stop event\n        _dispatchEvent({\n          sortable: this,\n          name: 'unchoose',\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt\n        });\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'add',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n\n            // Remove event\n            _dispatchEvent({\n              sortable: this,\n              name: 'remove',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n\n            // drag from one list and drop into another\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'sort',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n            _dispatchEvent({\n              sortable: this,\n              name: 'sort',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n          }\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: 'update',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n              _dispatchEvent({\n                sortable: this,\n                name: 'sort',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n            }\n          }\n        }\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n          _dispatchEvent({\n            sortable: this,\n            name: 'end',\n            toEl: parentEl,\n            originalEvent: evt\n          });\n\n          // Save sorting\n          this.save();\n        }\n      }\n    }\n    this._nulling();\n  },\n  _nulling: function _nulling() {\n    pluginEvent('nulling', this);\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n    savedInputChecked.length = lastDx = lastDy = 0;\n  },\n  handleEvent: function handleEvent( /**Event*/evt) {\n    switch (evt.type) {\n      case 'drop':\n      case 'dragend':\n        this._onDrop(evt);\n        break;\n      case 'dragenter':\n      case 'dragover':\n        if (dragEl) {\n          this._onDragOver(evt);\n          _globalDragOver(evt);\n        }\n        break;\n      case 'selectstart':\n        evt.preventDefault();\n        break;\n    }\n  },\n  /**\r\n   * Serializes the item into an array of string.\r\n   * @returns {String[]}\r\n   */\n  toArray: function toArray() {\n    var order = [],\n      el,\n      children = this.el.children,\n      i = 0,\n      n = children.length,\n      options = this.options;\n    for (; i < n; i++) {\n      el = children[i];\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n    return order;\n  },\n  /**\r\n   * Sorts the elements according to the array.\r\n   * @param  {String[]}  order  order of the items\r\n   */\n  sort: function sort(order, useAnimation) {\n    var items = {},\n      rootEl = this.el;\n    this.toArray().forEach(function (id, i) {\n      var el = rootEl.children[i];\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n    useAnimation && this.captureAnimationState();\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n    useAnimation && this.animateAll();\n  },\n  /**\r\n   * Save the current sorting\r\n   */\n  save: function save() {\n    var store = this.options.store;\n    store && store.set && store.set(this);\n  },\n  /**\r\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\r\n   * @param   {HTMLElement}  el\r\n   * @param   {String}       [selector]  default: `options.draggable`\r\n   * @returns {HTMLElement|null}\r\n   */\n  closest: function closest$1(el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n  /**\r\n   * Set/get option\r\n   * @param   {string} name\r\n   * @param   {*}      [value]\r\n   * @returns {*}\r\n   */\n  option: function option(name, value) {\n    var options = this.options;\n    if (value === void 0) {\n      return options[name];\n    } else {\n      var modifiedValue = PluginManager.modifyOption(this, name, value);\n      if (typeof modifiedValue !== 'undefined') {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n      if (name === 'group') {\n        _prepareGroup(options);\n      }\n    }\n  },\n  /**\r\n   * Destroy\r\n   */\n  destroy: function destroy() {\n    pluginEvent('destroy', this);\n    var el = this.el;\n    el[expando] = null;\n    off(el, 'mousedown', this._onTapStart);\n    off(el, 'touchstart', this._onTapStart);\n    off(el, 'pointerdown', this._onTapStart);\n    if (this.nativeDraggable) {\n      off(el, 'dragover', this);\n      off(el, 'dragenter', this);\n    }\n    // Remove draggable attributes\n    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n      el.removeAttribute('draggable');\n    });\n    this._onDrop();\n    this._disableDelayedDragEvents();\n    sortables.splice(sortables.indexOf(this.el), 1);\n    this.el = el = null;\n  },\n  _hideClone: function _hideClone() {\n    if (!cloneHidden) {\n      pluginEvent('hideClone', this);\n      if (Sortable.eventCanceled) return;\n      css(cloneEl, 'display', 'none');\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n      cloneHidden = true;\n    }\n  },\n  _showClone: function _showClone(putSortable) {\n    if (putSortable.lastPutMode !== 'clone') {\n      this._hideClone();\n      return;\n    }\n    if (cloneHidden) {\n      pluginEvent('showClone', this);\n      if (Sortable.eventCanceled) return;\n\n      // show clone at dragEl or original position\n      if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n      if (this.options.group.revertClone) {\n        this.animate(dragEl, cloneEl);\n      }\n      css(cloneEl, 'display', '');\n      cloneHidden = false;\n    }\n  }\n};\nfunction _globalDragOver( /**Event*/evt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = 'move';\n  }\n  evt.cancelable && evt.preventDefault();\n}\nfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\n  var evt,\n    sortable = fromEl[expando],\n    onMoveFn = sortable.options.onMove,\n    retVal;\n  // Support for new CustomEvent feature\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent('move', {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent('move', true, true);\n  }\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n  evt.originalEvent = originalEvent;\n  fromEl.dispatchEvent(evt);\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n  return retVal;\n}\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\nfunction _unsilent() {\n  _silent = false;\n}\nfunction _ghostIsFirst(evt, vertical, sortable) {\n  var firstElRect = getRect(getChild(sortable.el, 0, sortable.options, true));\n  var sortableContentRect = getContentRect(sortable.el);\n  var spacer = 10;\n  return vertical ? evt.clientX < sortableContentRect.left - spacer || evt.clientY < firstElRect.top && evt.clientX < firstElRect.right : evt.clientY < sortableContentRect.top - spacer || evt.clientY < firstElRect.bottom && evt.clientX < firstElRect.left;\n}\nfunction _ghostIsLast(evt, vertical, sortable) {\n  var lastElRect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  var sortableContentRect = getContentRect(sortable.el);\n  var spacer = 10;\n  return vertical ? evt.clientX > sortableContentRect.right + spacer || evt.clientY > lastElRect.bottom && evt.clientX > lastElRect.left : evt.clientY > sortableContentRect.bottom + spacer || evt.clientX > lastElRect.right && evt.clientY > lastElRect.top;\n}\nfunction _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n    targetLength = vertical ? targetRect.height : targetRect.width,\n    targetS1 = vertical ? targetRect.top : targetRect.left,\n    targetS2 = vertical ? targetRect.bottom : targetRect.right,\n    invert = false;\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n        : mouseOnAxis > targetS2 - targetMoveDistance) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n  invert = invert || invertSwap;\n  if (invert) {\n    // Invert of regular\n    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n  return 0;\n}\n\n/**\r\n * Gets the direction dragEl must be swapped relative to target in order to make it\r\n * seem that dragEl has been \"inserted\" into that element's position\r\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\r\n * @return {Number}                   Direction dragEl must be swapped\r\n */\nfunction _getInsertDirection(target) {\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n\n/**\r\n * Generate id\r\n * @param   {HTMLElement} el\r\n * @returns {String}\r\n * @private\r\n */\nfunction _generateId(el) {\n  var str = el.tagName + el.className + el.src + el.href + el.textContent,\n    i = str.length,\n    sum = 0;\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n  return sum.toString(36);\n}\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n  var inputs = root.getElementsByTagName('input');\n  var idx = inputs.length;\n  while (idx--) {\n    var el = inputs[idx];\n    el.checked && savedInputChecked.push(el);\n  }\n}\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n}\n\n// Fixed #973:\nif (documentExists) {\n  on(document, 'touchmove', function (evt) {\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n      evt.preventDefault();\n    }\n  });\n}\n\n// Export utils\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function is(el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild\n};\n\n/**\r\n * Get the Sortable instance of an element\r\n * @param  {HTMLElement} element The element\r\n * @return {Sortable|undefined}         The instance of Sortable\r\n */\nSortable.get = function (element) {\n  return element[expando];\n};\n\n/**\r\n * Mount a plugin to Sortable\r\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\r\n */\nSortable.mount = function () {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n  plugins.forEach(function (plugin) {\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(plugin));\n    }\n    if (plugin.utils) Sortable.utils = _objectSpread2(_objectSpread2({}, Sortable.utils), plugin.utils);\n    PluginManager.mount(plugin);\n  });\n};\n\n/**\r\n * Create sortable instance\r\n * @param {HTMLElement}  el\r\n * @param {Object}      [options]\r\n */\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n};\n\n// Export\nSortable.version = version;\n\nvar autoScrolls = [],\n  scrollEl,\n  scrollRootEl,\n  scrolling = false,\n  lastAutoScrollX,\n  lastAutoScrollY,\n  touchEvt$1,\n  pointerElemChangedInterval;\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.defaults = {\n      scroll: true,\n      forceAutoScrollFallback: false,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true\n    };\n\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n  AutoScroll.prototype = {\n    dragStarted: function dragStarted(_ref) {\n      var originalEvent = _ref.originalEvent;\n      if (this.sortable.nativeDraggable) {\n        on(document, 'dragover', this._handleAutoScroll);\n      } else {\n        if (this.options.supportPointer) {\n          on(document, 'pointermove', this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, 'touchmove', this._handleFallbackAutoScroll);\n        } else {\n          on(document, 'mousemove', this._handleFallbackAutoScroll);\n        }\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref2) {\n      var originalEvent = _ref2.originalEvent;\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n    drop: function drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, 'dragover', this._handleAutoScroll);\n      } else {\n        off(document, 'pointermove', this._handleFallbackAutoScroll);\n        off(document, 'touchmove', this._handleFallbackAutoScroll);\n        off(document, 'mousemove', this._handleFallbackAutoScroll);\n      }\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n    nulling: function nulling() {\n      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n      autoScrolls.length = 0;\n    },\n    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\n      var _this = this;\n      var x = (evt.touches ? evt.touches[0] : evt).clientX,\n        y = (evt.touches ? evt.touches[0] : evt).clientY,\n        elem = document.elementFromPoint(x, y);\n      touchEvt$1 = evt;\n\n      // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n      if (fallback || this.options.forceAutoScrollFallback || Edge || IE11OrLess || Safari) {\n        autoScroll(evt, this.options, elem, fallback);\n\n        // Listener for pointer element change\n        var ogElemScroller = getParentAutoScrollElement(elem, true);\n        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval();\n          // Detect for pointer elem change, emulating native DnD behaviour\n          pointerElemChangedInterval = setInterval(function () {\n            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n            autoScroll(evt, _this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\n          clearAutoScrolls();\n          return;\n        }\n        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\n      }\n    }\n  };\n  return _extends(AutoScroll, {\n    pluginName: 'scroll',\n    initializeByDefault: true\n  });\n}\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\nvar autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  var x = (evt.touches ? evt.touches[0] : evt).clientX,\n    y = (evt.touches ? evt.touches[0] : evt).clientY,\n    sens = options.scrollSensitivity,\n    speed = options.scrollSpeed,\n    winScroller = getWindowScrollingElement();\n  var scrollThisInstance = false,\n    scrollCustomFn;\n\n  // New scroll root, set scrollEl\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n    clearAutoScrolls();\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n  var layersOut = 0;\n  var currentParent = scrollEl;\n  do {\n    var el = currentParent,\n      rect = getRect(el),\n      top = rect.top,\n      bottom = rect.bottom,\n      left = rect.left,\n      right = rect.right,\n      width = rect.width,\n      height = rect.height,\n      canScrollX = void 0,\n      canScrollY = void 0,\n      scrollWidth = el.scrollWidth,\n      scrollHeight = el.scrollHeight,\n      elCSS = css(el),\n      scrollPosX = el.scrollLeft,\n      scrollPosY = el.scrollTop;\n    if (el === winScroller) {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\n    } else {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\n    }\n    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n    if (!autoScrolls[layersOut]) {\n      for (var i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n      clearInterval(autoScrolls[layersOut].pid);\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n        autoScrolls[layersOut].pid = setInterval(function () {\n          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n          if (isFallback && this.layer === 0) {\n            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\n          }\n          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n          if (typeof scrollCustomFn === 'function') {\n            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\n              return;\n            }\n          }\n          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n        }.bind({\n          layer: layersOut\n        }), 24);\n      }\n    }\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nvar drop = function drop(_ref) {\n  var originalEvent = _ref.originalEvent,\n    putSortable = _ref.putSortable,\n    dragEl = _ref.dragEl,\n    activeSortable = _ref.activeSortable,\n    dispatchSortableEvent = _ref.dispatchSortableEvent,\n    hideGhostForTarget = _ref.hideGhostForTarget,\n    unhideGhostForTarget = _ref.unhideGhostForTarget;\n  if (!originalEvent) return;\n  var toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;\n  var target = document.elementFromPoint(touch.clientX, touch.clientY);\n  unhideGhostForTarget();\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent('spill');\n    this.onSpill({\n      dragEl: dragEl,\n      putSortable: putSortable\n    });\n  }\n};\nfunction Revert() {}\nRevert.prototype = {\n  startIndex: null,\n  dragStart: function dragStart(_ref2) {\n    var oldDraggableIndex = _ref2.oldDraggableIndex;\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill: function onSpill(_ref3) {\n    var dragEl = _ref3.dragEl,\n      putSortable = _ref3.putSortable;\n    this.sortable.captureAnimationState();\n    if (putSortable) {\n      putSortable.captureAnimationState();\n    }\n    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n    this.sortable.animateAll();\n    if (putSortable) {\n      putSortable.animateAll();\n    }\n  },\n  drop: drop\n};\n_extends(Revert, {\n  pluginName: 'revertOnSpill'\n});\nfunction Remove() {}\nRemove.prototype = {\n  onSpill: function onSpill(_ref4) {\n    var dragEl = _ref4.dragEl,\n      putSortable = _ref4.putSortable;\n    var parentSortable = putSortable || this.sortable;\n    parentSortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    parentSortable.animateAll();\n  },\n  drop: drop\n};\n_extends(Remove, {\n  pluginName: 'removeOnSpill'\n});\n\nvar lastSwapEl;\nfunction SwapPlugin() {\n  function Swap() {\n    this.defaults = {\n      swapClass: 'sortable-swap-highlight'\n    };\n  }\n  Swap.prototype = {\n    dragStart: function dragStart(_ref) {\n      var dragEl = _ref.dragEl;\n      lastSwapEl = dragEl;\n    },\n    dragOverValid: function dragOverValid(_ref2) {\n      var completed = _ref2.completed,\n        target = _ref2.target,\n        onMove = _ref2.onMove,\n        activeSortable = _ref2.activeSortable,\n        changed = _ref2.changed,\n        cancel = _ref2.cancel;\n      if (!activeSortable.options.swap) return;\n      var el = this.sortable.el,\n        options = this.options;\n      if (target && target !== el) {\n        var prevSwapEl = lastSwapEl;\n        if (onMove(target) !== false) {\n          toggleClass(target, options.swapClass, true);\n          lastSwapEl = target;\n        } else {\n          lastSwapEl = null;\n        }\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n          toggleClass(prevSwapEl, options.swapClass, false);\n        }\n      }\n      changed();\n      completed(true);\n      cancel();\n    },\n    drop: function drop(_ref3) {\n      var activeSortable = _ref3.activeSortable,\n        putSortable = _ref3.putSortable,\n        dragEl = _ref3.dragEl;\n      var toSortable = putSortable || this.sortable;\n      var options = this.options;\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {\n        if (dragEl !== lastSwapEl) {\n          toSortable.captureAnimationState();\n          if (toSortable !== activeSortable) activeSortable.captureAnimationState();\n          swapNodes(dragEl, lastSwapEl);\n          toSortable.animateAll();\n          if (toSortable !== activeSortable) activeSortable.animateAll();\n        }\n      }\n    },\n    nulling: function nulling() {\n      lastSwapEl = null;\n    }\n  };\n  return _extends(Swap, {\n    pluginName: 'swap',\n    eventProperties: function eventProperties() {\n      return {\n        swapItem: lastSwapEl\n      };\n    }\n  });\n}\nfunction swapNodes(n1, n2) {\n  var p1 = n1.parentNode,\n    p2 = n2.parentNode,\n    i1,\n    i2;\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n  i1 = index(n1);\n  i2 = index(n2);\n  if (p1.isEqualNode(p2) && i1 < i2) {\n    i2++;\n  }\n  p1.insertBefore(n2, p1.children[i1]);\n  p2.insertBefore(n1, p2.children[i2]);\n}\n\nvar multiDragElements = [],\n  multiDragClones = [],\n  lastMultiDragSelect,\n  // for selection with modifier key down (SHIFT)\n  multiDragSortable,\n  initialFolding = false,\n  // Initial multi-drag fold when drag started\n  folding = false,\n  // Folding any other time\n  dragStarted = false,\n  dragEl$1,\n  clonesFromRect,\n  clonesHidden;\nfunction MultiDragPlugin() {\n  function MultiDrag(sortable) {\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n    if (!sortable.options.avoidImplicitDeselect) {\n      if (sortable.options.supportPointer) {\n        on(document, 'pointerup', this._deselectMultiDrag);\n      } else {\n        on(document, 'mouseup', this._deselectMultiDrag);\n        on(document, 'touchend', this._deselectMultiDrag);\n      }\n    }\n    on(document, 'keydown', this._checkKeyDown);\n    on(document, 'keyup', this._checkKeyUp);\n    this.defaults = {\n      selectedClass: 'sortable-selected',\n      multiDragKey: null,\n      avoidImplicitDeselect: false,\n      setData: function setData(dataTransfer, dragEl) {\n        var data = '';\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          multiDragElements.forEach(function (multiDragElement, i) {\n            data += (!i ? '' : ', ') + multiDragElement.textContent;\n          });\n        } else {\n          data = dragEl.textContent;\n        }\n        dataTransfer.setData('Text', data);\n      }\n    };\n  }\n  MultiDrag.prototype = {\n    multiDragKeyDown: false,\n    isMultiDrag: false,\n    delayStartGlobal: function delayStartGlobal(_ref) {\n      var dragged = _ref.dragEl;\n      dragEl$1 = dragged;\n    },\n    delayEnded: function delayEnded() {\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);\n    },\n    setupClone: function setupClone(_ref2) {\n      var sortable = _ref2.sortable,\n        cancel = _ref2.cancel;\n      if (!this.isMultiDrag) return;\n      for (var i = 0; i < multiDragElements.length; i++) {\n        multiDragClones.push(clone(multiDragElements[i]));\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n        multiDragClones[i].draggable = false;\n        multiDragClones[i].style['will-change'] = '';\n        toggleClass(multiDragClones[i], this.options.selectedClass, false);\n        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);\n      }\n      sortable._hideClone();\n      cancel();\n    },\n    clone: function clone(_ref3) {\n      var sortable = _ref3.sortable,\n        rootEl = _ref3.rootEl,\n        dispatchSortableEvent = _ref3.dispatchSortableEvent,\n        cancel = _ref3.cancel;\n      if (!this.isMultiDrag) return;\n      if (!this.options.removeCloneOnHide) {\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          insertMultiDragClones(true, rootEl);\n          dispatchSortableEvent('clone');\n          cancel();\n        }\n      }\n    },\n    showClone: function showClone(_ref4) {\n      var cloneNowShown = _ref4.cloneNowShown,\n        rootEl = _ref4.rootEl,\n        cancel = _ref4.cancel;\n      if (!this.isMultiDrag) return;\n      insertMultiDragClones(false, rootEl);\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', '');\n      });\n      cloneNowShown();\n      clonesHidden = false;\n      cancel();\n    },\n    hideClone: function hideClone(_ref5) {\n      var _this = this;\n      var sortable = _ref5.sortable,\n        cloneNowHidden = _ref5.cloneNowHidden,\n        cancel = _ref5.cancel;\n      if (!this.isMultiDrag) return;\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', 'none');\n        if (_this.options.removeCloneOnHide && clone.parentNode) {\n          clone.parentNode.removeChild(clone);\n        }\n      });\n      cloneNowHidden();\n      clonesHidden = true;\n      cancel();\n    },\n    dragStartGlobal: function dragStartGlobal(_ref6) {\n      var sortable = _ref6.sortable;\n      if (!this.isMultiDrag && multiDragSortable) {\n        multiDragSortable.multiDrag._deselectMultiDrag();\n      }\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.sortableIndex = index(multiDragElement);\n      });\n\n      // Sort multi-drag elements\n      multiDragElements = multiDragElements.sort(function (a, b) {\n        return a.sortableIndex - b.sortableIndex;\n      });\n      dragStarted = true;\n    },\n    dragStarted: function dragStarted(_ref7) {\n      var _this2 = this;\n      var sortable = _ref7.sortable;\n      if (!this.isMultiDrag) return;\n      if (this.options.sort) {\n        // Capture rects,\n        // hide multi drag elements (by positioning them absolute),\n        // set multi drag elements rects to dragRect,\n        // show multi drag elements,\n        // animate to rects,\n        // unset rects & remove from DOM\n\n        sortable.captureAnimationState();\n        if (this.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            css(multiDragElement, 'position', 'absolute');\n          });\n          var dragRect = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRect);\n          });\n          folding = true;\n          initialFolding = true;\n        }\n      }\n      sortable.animateAll(function () {\n        folding = false;\n        initialFolding = false;\n        if (_this2.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n        }\n\n        // Remove all auxiliary multidrag items from el, if sorting enabled\n        if (_this2.options.sort) {\n          removeMultiDragElements();\n        }\n      });\n    },\n    dragOver: function dragOver(_ref8) {\n      var target = _ref8.target,\n        completed = _ref8.completed,\n        cancel = _ref8.cancel;\n      if (folding && ~multiDragElements.indexOf(target)) {\n        completed(false);\n        cancel();\n      }\n    },\n    revert: function revert(_ref9) {\n      var fromSortable = _ref9.fromSortable,\n        rootEl = _ref9.rootEl,\n        sortable = _ref9.sortable,\n        dragRect = _ref9.dragRect;\n      if (multiDragElements.length > 1) {\n        // Setup unfold animation\n        multiDragElements.forEach(function (multiDragElement) {\n          sortable.addAnimationState({\n            target: multiDragElement,\n            rect: folding ? getRect(multiDragElement) : dragRect\n          });\n          unsetRect(multiDragElement);\n          multiDragElement.fromRect = dragRect;\n          fromSortable.removeAnimationState(multiDragElement);\n        });\n        folding = false;\n        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref10) {\n      var sortable = _ref10.sortable,\n        isOwner = _ref10.isOwner,\n        insertion = _ref10.insertion,\n        activeSortable = _ref10.activeSortable,\n        parentEl = _ref10.parentEl,\n        putSortable = _ref10.putSortable;\n      var options = this.options;\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        }\n        initialFolding = false;\n        // If leaving sort:false root, or already folding - Fold to new location\n        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n          var dragRectAbsolute = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRectAbsolute);\n\n            // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n            parentEl.appendChild(multiDragElement);\n          });\n          folding = true;\n        }\n\n        // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n        if (!isOwner) {\n          // Only remove if not folding (folding will remove them anyways)\n          if (!folding) {\n            removeMultiDragElements();\n          }\n          if (multiDragElements.length > 1) {\n            var clonesHiddenBefore = clonesHidden;\n            activeSortable._showClone(sortable);\n\n            // Unfold animation for clones if showing from hidden\n            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {\n              multiDragClones.forEach(function (clone) {\n                activeSortable.addAnimationState({\n                  target: clone,\n                  rect: clonesFromRect\n                });\n                clone.fromRect = clonesFromRect;\n                clone.thisAnimationDuration = null;\n              });\n            }\n          } else {\n            activeSortable._showClone(sortable);\n          }\n        }\n      }\n    },\n    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {\n      var dragRect = _ref11.dragRect,\n        isOwner = _ref11.isOwner,\n        activeSortable = _ref11.activeSortable;\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.thisAnimationDuration = null;\n      });\n      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {\n        clonesFromRect = _extends({}, dragRect);\n        var dragMatrix = matrix(dragEl$1, true);\n        clonesFromRect.top -= dragMatrix.f;\n        clonesFromRect.left -= dragMatrix.e;\n      }\n    },\n    dragOverAnimationComplete: function dragOverAnimationComplete() {\n      if (folding) {\n        folding = false;\n        removeMultiDragElements();\n      }\n    },\n    drop: function drop(_ref12) {\n      var evt = _ref12.originalEvent,\n        rootEl = _ref12.rootEl,\n        parentEl = _ref12.parentEl,\n        sortable = _ref12.sortable,\n        dispatchSortableEvent = _ref12.dispatchSortableEvent,\n        oldIndex = _ref12.oldIndex,\n        putSortable = _ref12.putSortable;\n      var toSortable = putSortable || this.sortable;\n      if (!evt) return;\n      var options = this.options,\n        children = parentEl.children;\n\n      // Multi-drag selection\n      if (!dragStarted) {\n        if (options.multiDragKey && !this.multiDragKeyDown) {\n          this._deselectMultiDrag();\n        }\n        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));\n        if (!~multiDragElements.indexOf(dragEl$1)) {\n          multiDragElements.push(dragEl$1);\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'select',\n            targetEl: dragEl$1,\n            originalEvent: evt\n          });\n\n          // Modifier activated, select from last to dragEl\n          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {\n            var lastIndex = index(lastMultiDragSelect),\n              currentIndex = index(dragEl$1);\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n              // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n              // (but previous selection existed)\n              var n, i;\n              if (currentIndex > lastIndex) {\n                i = lastIndex;\n                n = currentIndex;\n              } else {\n                i = currentIndex;\n                n = lastIndex + 1;\n              }\n              for (; i < n; i++) {\n                if (~multiDragElements.indexOf(children[i])) continue;\n                toggleClass(children[i], options.selectedClass, true);\n                multiDragElements.push(children[i]);\n                dispatchEvent({\n                  sortable: sortable,\n                  rootEl: rootEl,\n                  name: 'select',\n                  targetEl: children[i],\n                  originalEvent: evt\n                });\n              }\n            }\n          } else {\n            lastMultiDragSelect = dragEl$1;\n          }\n          multiDragSortable = toSortable;\n        } else {\n          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);\n          lastMultiDragSelect = null;\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'deselect',\n            targetEl: dragEl$1,\n            originalEvent: evt\n          });\n        }\n      }\n\n      // Multi-drag drop\n      if (dragStarted && this.isMultiDrag) {\n        folding = false;\n        // Do not \"unfold\" after around dragEl if reverted\n        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {\n          var dragRect = getRect(dragEl$1),\n            multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');\n          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;\n          toSortable.captureAnimationState();\n          if (!initialFolding) {\n            if (options.animation) {\n              dragEl$1.fromRect = dragRect;\n              multiDragElements.forEach(function (multiDragElement) {\n                multiDragElement.thisAnimationDuration = null;\n                if (multiDragElement !== dragEl$1) {\n                  var rect = folding ? getRect(multiDragElement) : dragRect;\n                  multiDragElement.fromRect = rect;\n\n                  // Prepare unfold animation\n                  toSortable.addAnimationState({\n                    target: multiDragElement,\n                    rect: rect\n                  });\n                }\n              });\n            }\n\n            // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n            // properly they must all be removed\n            removeMultiDragElements();\n            multiDragElements.forEach(function (multiDragElement) {\n              if (children[multiDragIndex]) {\n                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);\n              } else {\n                parentEl.appendChild(multiDragElement);\n              }\n              multiDragIndex++;\n            });\n\n            // If initial folding is done, the elements may have changed position because they are now\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n            // must be fired here as Sortable will not.\n            if (oldIndex === index(dragEl$1)) {\n              var update = false;\n              multiDragElements.forEach(function (multiDragElement) {\n                if (multiDragElement.sortableIndex !== index(multiDragElement)) {\n                  update = true;\n                  return;\n                }\n              });\n              if (update) {\n                dispatchSortableEvent('update');\n                dispatchSortableEvent('sort');\n              }\n            }\n          }\n\n          // Must be done after capturing individual rects (scroll bar)\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n          toSortable.animateAll();\n        }\n        multiDragSortable = toSortable;\n      }\n\n      // Remove clones if necessary\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        multiDragClones.forEach(function (clone) {\n          clone.parentNode && clone.parentNode.removeChild(clone);\n        });\n      }\n    },\n    nullingGlobal: function nullingGlobal() {\n      this.isMultiDrag = dragStarted = false;\n      multiDragClones.length = 0;\n    },\n    destroyGlobal: function destroyGlobal() {\n      this._deselectMultiDrag();\n      off(document, 'pointerup', this._deselectMultiDrag);\n      off(document, 'mouseup', this._deselectMultiDrag);\n      off(document, 'touchend', this._deselectMultiDrag);\n      off(document, 'keydown', this._checkKeyDown);\n      off(document, 'keyup', this._checkKeyUp);\n    },\n    _deselectMultiDrag: function _deselectMultiDrag(evt) {\n      if (typeof dragStarted !== \"undefined\" && dragStarted) return;\n\n      // Only deselect if selection is in this sortable\n      if (multiDragSortable !== this.sortable) return;\n\n      // Only deselect if target is not item in this sortable\n      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return;\n\n      // Only deselect if left click\n      if (evt && evt.button !== 0) return;\n      while (multiDragElements.length) {\n        var el = multiDragElements[0];\n        toggleClass(el, this.options.selectedClass, false);\n        multiDragElements.shift();\n        dispatchEvent({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: 'deselect',\n          targetEl: el,\n          originalEvent: evt\n        });\n      }\n    },\n    _checkKeyDown: function _checkKeyDown(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = true;\n      }\n    },\n    _checkKeyUp: function _checkKeyUp(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = false;\n      }\n    }\n  };\n  return _extends(MultiDrag, {\n    // Static methods & properties\n    pluginName: 'multiDrag',\n    utils: {\n      /**\r\n       * Selects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be selected\r\n       */\n      select: function select(el) {\n        var sortable = el.parentNode[expando];\n        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;\n        if (multiDragSortable && multiDragSortable !== sortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n          multiDragSortable = sortable;\n        }\n        toggleClass(el, sortable.options.selectedClass, true);\n        multiDragElements.push(el);\n      },\n      /**\r\n       * Deselects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be deselected\r\n       */\n      deselect: function deselect(el) {\n        var sortable = el.parentNode[expando],\n          index = multiDragElements.indexOf(el);\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\n        toggleClass(el, sortable.options.selectedClass, false);\n        multiDragElements.splice(index, 1);\n      }\n    },\n    eventProperties: function eventProperties() {\n      var _this3 = this;\n      var oldIndicies = [],\n        newIndicies = [];\n      multiDragElements.forEach(function (multiDragElement) {\n        oldIndicies.push({\n          multiDragElement: multiDragElement,\n          index: multiDragElement.sortableIndex\n        });\n\n        // multiDragElements will already be sorted if folding\n        var newIndex;\n        if (folding && multiDragElement !== dragEl$1) {\n          newIndex = -1;\n        } else if (folding) {\n          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');\n        } else {\n          newIndex = index(multiDragElement);\n        }\n        newIndicies.push({\n          multiDragElement: multiDragElement,\n          index: newIndex\n        });\n      });\n      return {\n        items: _toConsumableArray(multiDragElements),\n        clones: [].concat(multiDragClones),\n        oldIndicies: oldIndicies,\n        newIndicies: newIndicies\n      };\n    },\n    optionListeners: {\n      multiDragKey: function multiDragKey(key) {\n        key = key.toLowerCase();\n        if (key === 'ctrl') {\n          key = 'Control';\n        } else if (key.length > 1) {\n          key = key.charAt(0).toUpperCase() + key.substr(1);\n        }\n        return key;\n      }\n    }\n  });\n}\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n  multiDragElements.forEach(function (multiDragElement, i) {\n    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];\n    if (target) {\n      rootEl.insertBefore(multiDragElement, target);\n    } else {\n      rootEl.appendChild(multiDragElement);\n    }\n  });\n}\n\n/**\r\n * Insert multi-drag clones\r\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\r\n * @param  {HTMLElement} rootEl\r\n */\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n  multiDragClones.forEach(function (clone, i) {\n    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n    if (target) {\n      rootEl.insertBefore(clone, target);\n    } else {\n      rootEl.appendChild(clone);\n    }\n  });\n}\nfunction removeMultiDragElements() {\n  multiDragElements.forEach(function (multiDragElement) {\n    if (multiDragElement === dragEl$1) return;\n    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);\n  });\n}\n\nSortable.mount(new AutoScrollPlugin());\nSortable.mount(Remove, Revert);\n\nexport default Sortable;\nexport { MultiDragPlugin as MultiDrag, Sortable, SwapPlugin as Swap };\n"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_typeof","obj","Symbol","iterator","constructor","prototype","value","configurable","writable","_extends","assign","hasOwnProperty","call","this","userAgent","pattern","window","navigator","match","IE11OrLess","Edge","FireFox","Safari","IOS","ChromeForAndroid","captureMode","capture","passive","on","el","event","fn","addEventListener","off","removeEventListener","matches","selector","substring","msMatchesSelector","webkitMatchesSelector","_","getParentOrHost","host","document","nodeType","parentNode","closest","ctx","includeCTX","_throttleTimeout","R_SPACE","toggleClass","name","state","classList","className","replace","css","prop","val","style","defaultView","getComputedStyle","currentStyle","indexOf","matrix","selfOnly","appliedTransforms","transform","matrixFn","DOMMatrix","WebKitCSSMatrix","CSSMatrix","MSCSSMatrix","find","tagName","list","getElementsByTagName","n","getWindowScrollingElement","scrollingElement","documentElement","getRect","relativeToContainingBlock","relativeToNonStaticParent","undoScale","container","getBoundingClientRect","elRect","top","left","bottom","right","height","width","innerHeight","innerWidth","containerRect","parseInt","elMatrix","scaleX","a","scaleY","d","getContentRect","rect","paddingLeft","paddingTop","paddingRight","paddingBottom","clientWidth","clientHeight","isScrolledPast","elSide","parentSide","parent","getParentAutoScrollElement","elSideVal","parentSideVal","getChild","childNum","options","includeDragEl","currentChild","children","display","Sortable","ghost","dragged","draggable","lastChild","last","lastElementChild","previousElementSibling","index","nodeName","toUpperCase","clone","getRelativeScrollOffset","offsetLeft","offsetTop","winScroller","scrollLeft","scrollTop","includeSelf","elem","gotSelf","scrollWidth","scrollHeight","elemCSS","overflowX","overflowY","body","isRectEqual","rect1","rect2","Math","round","throttle","callback","ms","args","setTimeout","scrollBy","x","y","Polymer","$","jQuery","Zepto","dom","cloneNode","expando","Date","getTime","plugins","defaults","initializeByDefault","PluginManager","mount","plugin","option","p","pluginName","concat","pluginEvent","eventName","sortable","evt","_this","eventCanceled","cancel","eventNameGlobal","initializePlugins","initialized","modified","modifyOption","getEventProperties","eventProperties","modifiedValue","optionListeners","_excluded","_ref","undefined","originalEvent","data","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","_objectWithoutProperties","bind","dragEl","parentEl","ghostEl","rootEl","nextEl","lastDownEl","cloneEl","cloneHidden","dragStarted","moved","putSortable","activeSortable","active","oldIndex","oldDraggableIndex","newIndex","newDraggableIndex","hideGhostForTarget","_hideGhostForTarget","unhideGhostForTarget","_unhideGhostForTarget","cloneNowHidden","cloneNowShown","dispatchSortableEvent","_dispatchEvent","info","targetEl","toEl","fromEl","extraEventProperties","onName","charAt","substr","CustomEvent","createEvent","initEvent","bubbles","cancelable","to","from","item","pullMode","lastPutMode","allEventProperties","dispatchEvent","activeGroup","tapEvt","touchEvt","lastDx","lastDy","tapDistanceLeft","tapDistanceTop","lastTarget","lastDirection","targetMoveDistance","ghostRelativeParent","awaitingDragStarted","ignoreNextClick","sortables","pastFirstInvertThresh","isCircumstantialInvert","ghostRelativeParentInitialScroll","_silent","savedInputChecked","documentExists","PositionGhostAbsolutely","CSSFloatProperty","supportDraggable","createElement","supportCssPointerEvents","cssText","pointerEvents","_detectDirection","elCSS","elWidth","borderLeftWidth","borderRightWidth","child1","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginLeft","marginRight","secondChildWidth","flexDirection","gridTemplateColumns","split","touchingSideChild2","clear","_prepareGroup","toFn","pull","sameGroup","group","otherGroup","join","originalGroup","checkPull","checkPut","put","revertClone","preventDefault","stopPropagation","stopImmediatePropagation","nearestEmptyInsertDetectEvent","touches","nearest","clientX","clientY","some","threshold","emptyInsertThreshold","insideHorizontally","insideVertically","ret","_onDragOver","_checkOutsideTargetEl","_isOutsideThisEl","toString","animationCallbackId","animationStates","sort","disabled","store","handle","test","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","preventOnFilter","animation","easing","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","Number","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","nativeDraggable","_onTapStart","get","captureAnimationState","slice","child","fromRect","thisAnimationDuration","childMatrix","f","e","addAnimationState","removeAnimationState","splice","arr","indexOfObject","animateAll","clearTimeout","animating","animationTime","time","toRect","prevFromRect","prevToRect","animatingRect","targetMatrix","sqrt","pow","calculateRealTime","animate","max","animationResetTimer","currentRect","duration","translateX","translateY","animatingX","animatingY","forRepaintDummy","offsetWidth","repaint","animated","_onMove","dragRect","targetRect","willInsertAfter","retVal","onMoveFn","onMove","draggedRect","related","relatedRect","_disableDraggable","_unsilent","_generateId","str","src","href","sum","charCodeAt","_nextTick","_cancelNextTick","id","contains","_getDirection","type","touch","pointerType","originalTarget","shadowRoot","path","composedPath","root","inputs","idx","checked","_saveInputCheckedState","button","isContentEditable","criteria","trim","_prepareDragStart","dragStartFn","ownerDocument","nextSibling","_lastX","_lastY","_onDrop","_disableDelayedDragEvents","_triggerDragStart","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","abs","floor","_onTouchMove","_onDragStart","selection","empty","getSelection","removeAllRanges","err","_dragStarted","fallback","_appendGhost","_nulling","_emulateDragOver","elementFromPoint","ghostMatrix","relativeScrollOffset","dx","dy","b","c","cssMatrix","appendChild","removeAttribute","_hideClone","cloneId","insertBefore","_loopId","setInterval","effectAllowed","_dragStartId","revert","vertical","isOwner","canSort","fromSortable","completedFired","dragOverEvent","_ignoreWhileAnimating","completed","elLastChild","lastElRect","sortableContentRect","_ghostIsLast","changed","firstElRect","_ghostIsFirst","firstChild","targetBeforeFirstSwap","sibling","differentLevel","differentRowCol","dragElS1Opp","dragElS2Opp","dragElOppLength","targetS1Opp","targetS2Opp","targetOppLength","_dragElInRowColumn","side1","scrolledPastTop","scrollBefore","isLastTarget","mouseOnAxis","targetLength","targetS1","targetS2","invert","_getInsertDirection","_getSwapDirection","dragIndex","nextElementSibling","after","moveVector","extra","axis","insertion","_showClone","_offMoveEvents","_offUpEvents","clearInterval","removeChild","save","handleEvent","dropEffect","_globalDragOver","toArray","order","getAttribute","useAnimation","items","set","destroy","Array","querySelectorAll","utils","is","extend","dst","nextTick","cancelNextTick","detectDirection","element","_len","_key","create","version","scrollEl","scrollRootEl","lastAutoScrollX","lastAutoScrollY","touchEvt$1","pointerElemChangedInterval","autoScrolls","scrolling","clearAutoScrolls","autoScroll","pid","clearPointerElemChangedInterval","isFallback","scroll","scrollCustomFn","sens","scrollSensitivity","speed","scrollSpeed","scrollThisInstance","scrollFn","layersOut","currentParent","canScrollX","canScrollY","scrollPosX","scrollPosY","vx","vy","layer","scrollOffsetY","scrollOffsetX","bubbleScroll","drop","toSortable","changedTouches","onSpill","Revert","Remove","startIndex","dragStart","_ref2","_ref3","_ref4","parentSortable","AutoScroll","forceAutoScrollFallback","_handleAutoScroll","_handleFallbackAutoScroll","dragOverCompleted","dragOverBubble","nulling","ogElemScroller","newElem"],"sourceRoot":""}