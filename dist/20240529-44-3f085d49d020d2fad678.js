"use strict";(globalThis.webpackChunkcare_ops_frontend=globalThis.webpackChunkcare_ops_frontend||[]).push([[44],{44:(e,t,i)=>{var s=i(5915),o=i(7084),n=i.n(o),r=i(1359),a=i(6447),l=i.n(a),c=i(7120),d=i(2866),h=i.n(d),u=i(7353),p=i(9472),g=i(6267),m=i(7273);const f="patient-actions",{parseRelationship:w}=g.A,A=function(e,t){return e&&"owner"!==t?w(e,t):e},_=p.A.extend({urlRoot(){if(this.isNew()){const e=this.get("_flow");return e?`/api/flows/${e}/relationships/actions`:`/api/patients/${this.get("_patient")}/relationships/actions`}return"/api/actions"},type:f,hasTag(e){return(0,r.contains)(this.get("tags"),e)},getForm(){const e=this.get("_form");if(e)return l().request("entities","forms:model",e)},getFormResponses(){return l().request("entities","formResponses:collection",this.get("_form_responses"))},getPatient(){return l().request("entities","patients:model",this.get("_patient"))},getOwner(){const e=this.get("_owner");return l().request("entities",`${e.type}:model`,e.id)},isSameTeamAsUser(){const e=l().request("bootstrap","currentUser").getTeam(),t=this.getOwner();return e===("teams"===t.type?t:t.getTeam())},getAuthor(){return l().request("entities","clinicians:model",this.get("_author"))},getFlow(){if(this.get("_flow"))return l().request("entities","flows:model",this.get("_flow"))},getState(){return l().request("entities","states:model",this.get("_state"))},getPreviousState(){return l().request("entities","states:model",this.previous("_state"))},isLocked(){return!!this.get("locked_at")},isDone(){return this.getState().isDone()},isFlowDone(){const e=this.getFlow();return e&&e.isDone()},isOverdue(){if(this.isDone())return!1;const e=this.get("due_date"),t=this.get("due_time");if(!t)return h()(e).isBefore(h()(),"day");const i=h()(`${e} ${t}`);return i.isBefore(h()(),"day")||i.isBefore(h()(),"minute")},hasOutreach(){return this.get("outreach")!==m.xb.DISABLED},hasSharing(){return this.get("sharing")!==m.G_.DISABLED},canEdit(){const e=l().request("bootstrap","currentUser");return!!e.can("work:manage")||!(!e.can("work:owned:manage")||this.getOwner()!==e)||!(!e.can("work:team:manage")||!this.isSameTeamAsUser())},canSubmit(){const e=l().request("bootstrap","currentUser");return!!e.can("work:submit")||!(!e.can("work:owned:submit")||this.getOwner()!==e)||!(!e.can("work:team:submit")||!this.isSameTeamAsUser())},canDelete(){if(!this.canEdit())return!1;const e=l().request("bootstrap","currentUser");return!!e.can("work:delete")||!(!e.can("work:owned:delete")||this.getOwner()!==e)||!(!e.can("work:authored:delete")||this.getAuthor()!==e)},saveDueDate(e){return e?this.save({due_date:e.format("YYYY-MM-DD")}):this.save({due_date:null,due_time:null})},saveDueTime(e){return e?this.save({due_time:e}):this.save({due_time:null})},saveState(e){const t={_state:e.id},i=this.get("sharing");return e.isDone()&&![m.G_.DISABLED,m.G_.RESPONDED].includes(i)&&(t.sharing=m.G_.CANCELED),this.save(t,{relationships:{state:this.toRelation(e)}})},saveOwner(e){return this.save({_owner:e},{relationships:{owner:this.toRelation(e)}})},saveAll(e){this.isNew()&&(e=(0,r.extend)({},this.attributes,e));const t={flow:this.toRelation(e._flow,"flows"),form:this.toRelation(e._form,"forms"),owner:this.toRelation(e._owner),state:this.toRelation(e._state,"states"),"program-action":this.toRelation(e._program_action,"program-actions")};return this.save(e,{relationships:t},{wait:!0})},hasAttachments(){return!!(0,r.size)(this.get("_files"))},hasAllowedUploads(){if(!this.canEdit())return!1;const e=l().request("entities","programActions:model",this.get("_program_action"));return!!(0,r.size)(e.get("allowed_uploads"))},parseRelationship:A}),y=(0,c.A)(_,f),v=u.A.extend({url:"/api/actions",model:y,parseRelationship:A,save(e){const t=this.invoke("saveAll",e);return Promise.all(t)},groupByDate(){const e=this.groupBy("due_date");return(0,r.reduce)((0,r.keys)(e),((t,i)=>(t.add({date:i,actions:new v(e[i])}),t)),new(n().Collection)([]))}});new(s.A.extend({Entity:{_Model:_,Model:y,Collection:v},radioRequests:{"actions:model":"getModel","actions:collection":"getCollection","fetch:actions:model":"fetchAction","fetch:actions:collection":"fetchCollection","fetch:actions:withResponses":"fetchActionWithResponses","fetch:actions:collection:byPatient":"fetchActionsByPatient","fetch:actions:collection:byFlow":"fetchActionsByFlow"},fetchAction(e){const t=["program-action.program","flow.program-flow.program"].join();return this.fetchModel(e,{data:{include:t}})},fetchActionWithResponses(e){return this.fetchModel(e,{data:{include:["form-responses"],fields:{"form-responses":["status","updated_at","editor"]}}})},fetchActionsByPatient({patientId:e,filter:t}){const i={filter:t},s=`/api/patients/${e}/relationships/actions`;return this.fetchCollection({url:s,data:i})},fetchActionsByFlow(e){const t=`/api/flows/${e}/relationships/actions`;return this.fetchCollection({url:t})}}));var R=i(1812),b=i(8850),C=i(8745);const q="clinicians",x=p.A.extend({type:q,urlRoot:"/api/clinicians",preinitialize(){this.on("change:_team",this.onChangeTeam)},validate:e=>(0,C.A)(e.name)?(0,C.A)(e.email)?e._role?void 0:"A clinician role is required":"A clinician email address is required":"A clinician name is required",onChangeTeam(){const e=l().request("entities","teams:model",this.previous("_team"));e.set("_clinicians",(0,r.reject)(e.get("_clinicians"),{id:this.id}));const t=l().request("entities","teams:model",this.get("_team"));t.set("_clinicians",(0,r.union)(t.get("_clinicians"),[{id:this.id}]))},getWorkspaces(){return l().request("entities","workspaces:collection",this.get("_workspaces"))},addWorkspace(e){const t=this.getWorkspaces();t.add(e),this.set("_workspaces",this.toRelation(t,"workspaces").data)},removeWorkspace(e){const t=this.getWorkspaces();t.remove(e),this.set("_workspaces",this.toRelation(t,"workspaces").data)},getTeam(){return l().request("entities","teams:model",this.get("_team"))},hasTeam(){const e=this.get("_team");return e&&e!==b.A},getRole(){return l().request("entities","roles:model",this.get("_role"))},can(e){const t=this.getRole().get("permissions");return(0,r.includes)(t,e)},saveRole(e){return this.save({_role:e.id},{relationships:{role:this.toRelation(e)}})},saveTeam(e){return this.save({_team:e.id},{relationships:{team:this.toRelation(e)}})},saveAll(e){e=(0,r.extend)({},this.attributes,e);const t={workspaces:this.toRelation(e._workspaces,"workspaces"),team:this.toRelation(e._team,"teams"),role:this.toRelation(e._role,"roles")};return this.save(e,{relationships:t},{wait:!0})},getInitials(){const e=String(this.get("name")).split(" ");return 1===e.length?(0,r.first)(e).charAt(0):`${(0,r.first)(e).charAt(0)}${(0,r.last)(e).charAt(0)}`},isEditable(){return!this.get("last_active_at")},isActive(){const e=this.hasTeam(),t=!!(0,r.size)(this.get("_workspaces")),i=this.get("last_active_at");return e&&t&&i}}),E=(0,c.A)(x,q),M=u.A.extend({url:"/api/clinicians",model:E,comparator:"name",filterAssignable(){const e=this.clone(),t=this.filter((e=>e.isActive()&&e.get("enabled")&&e.can("work:own")));return e.reset(t),e}}),k=(new(s.A.extend({Entity:{_Model:x,Model:E,Collection:M},radioRequests:{"clinicians:model":"getModel","clinicians:collection":"getCollection","fetch:clinicians:collection":"fetchCollection","fetch:clinicians:current":"fetchCurrentClinician","fetch:clinicians:model":"fetchModel","fetch:clinicians:byWorkspace":"fetchByWorkspace"},fetchCurrentClinician(){return this.fetchBy("/api/clinicians/me").then((e=>((0,R.gV)(e.pick("id","name","email")),e)))},fetchByWorkspace(e){const t=`/api/workspaces/${e}/relationships/clinicians`;return this.fetchCollection({url:t})}})),"comments"),T=p.A.extend({type:k,urlRoot(){return this.isNew()?`/api/actions/${this.get("_action")}/relationships/comments`:"/api/comments"},validate({message:e}){if(!(0,C.A)(e))return"Comment message required."},getClinician(){return l().request("entities","clinicians:model",this.get("_clinician"))}}),P=(0,c.A)(T,k),D=u.A.extend({model:P}),F=(new(s.A.extend({Entity:{_Model:T,Model:P,Collection:D},radioRequests:{"comments:model":"getModel","fetch:comments:collection:byAction":"fetchCommentsByAction"},fetchCommentsByAction(e){const t=`/api/actions/${e}/relationships/comments`;return this.fetchCollection({url:t})}})),"dashboards"),B=p.A.extend({type:F,urlRoot:"/api/dashboards"}),I=(0,c.A)(B,F),S=u.A.extend({url:"/api/dashboards",model:I}),O=(new(s.A.extend({Entity:{_Model:B,Model:I,Collection:S},radioRequests:{"dashboards:model":"getModel","dashboards:collection":"getCollection","fetch:dashboards:model":"fetchModel","fetch:dashboards:collection":"fetchCollection"}})),p.A.extend({type:"directories",url(){return`/api/directory/${this.get("slug")}`},getOptions(){if(this.options)return this.options;const e=(0,r.map)(this.get("value"),(e=>({name:e,id:e})));return this.options=new u.A(e),this.options}})),$=u.A.extend({url:"/api/directories",model:O}),N=(new(s.A.extend({Entity:{Model:O,Collection:$},radioRequests:{"directories:collection":"getCollection","fetch:directories:model":"fetchDirectory","fetch:directories:filterable":"fetchFilterable"},fetchDirectory:(e,t)=>new O({slug:e}).fetch({data:t}),fetchFilterable(){return this.fetchCollection({data:{filter:{filterable:!0}}})}})),"events"),U=p.A.extend({type:N,getClinician(){return l().request("entities","clinicians:model",this.get("_clinician"))},getRecipient(){if(this.get("_recipient"))return l().request("entities","patients:model",this.get("_recipient"))},getEditor(){return this.get("_editor")?l().request("entities","clinicians:model",this.get("_editor")):l().request("entities","clinicians:model",{name:"RoundingWell"})},getTeam(){return l().request("entities","teams:model",this.get("_team"))},getState(){return l().request("entities","states:model",this.get("_state"))},getProgram(){if(this.get("_program"))return l().request("entities","programs:model",this.get("_program"))},getForm(){if(this.get("_form"))return l().request("entities","forms:model",this.get("_form"))}}),W=(0,c.A)(U,N),V=u.A.extend({model:W}),L=(new(s.A.extend({Entity:{_Model:U,Model:W,Collection:V},radioRequests:{"events:model":"getModel","events:collection":"getCollection","fetch:actionEvents:collection":"fetchActionEvents","fetch:flowEvents:collection":"fetchFlowEvents"},fetchActionEvents(e){return this.fetchCollection({url:`/api/actions/${e}/activity`})},fetchFlowEvents(e){return this.fetchCollection({url:`/api/flows/${e}/activity`})}})),"files"),j=p.A.extend({defaults:{path:"",_progress:0},type:L,urlRoot(){return this.isNew()?`/api/actions/${this.get("_action")}/relationships/files?urls=upload`:"/api/files"},fetchFile(){return this.fetch({url:`${this.url()}?urls=download,view`})},createUpload(e){const t=`patient/${this.get("_patient")}/${e}`;return this.save({path:t,_progress:0},{},{type:"PUT"}).catch((({responseData:t}={})=>{if((0,r.get)((0,r.first)(t.errors),"detail","").includes("Another file exists"))return this.createUpload(function(e){const t=e.lastIndexOf(".");return`${e.slice(0,t)}-copy${e.slice(t)}`}(e));throw t}))},upload(e){this.createUpload(e.name).then((()=>this.putFile(e))).then((()=>this.fetchFile())).catch((()=>{this.trigger("upload:failed"),this.destroy()}))},putFile(e){const t=e.size;return new Promise(((i,s)=>{const o=new XMLHttpRequest;o.onreadystatechange=()=>{4===o.readyState&&(200===o.status?(this.set({_progress:100}),i()):s())},o.upload.onprogress=e=>{e.lengthComputable&&this.set({_progress:Math.round(e.loaded/t*100)})},o.open("PUT",this.get("_upload")),o.send(e)}))},getFilename(){return this.get("path").split("/").pop()}}),z=(0,c.A)(j,L),J=u.A.extend({model:z}),G=(new(s.A.extend({Entity:{_Model:j,Model:z,Collection:J},radioRequests:{"files:model":"getModel","fetch:files:collection:byAction":"fetchFilesByAction"},fetchFilesByAction(e){const t=`/api/actions/${e}/relationships/files`;return this.fetchCollection({url:t,data:{urls:["download","view"]}})}})),"flows"),{parseRelationship:Y}=g.A,H=function(e,t){return e&&"owner"!==t?Y(e,t):e},Q=p.A.extend({urlRoot(){return this.isNew()?`/api/patients/${this.get("_patient")}/relationships/flows`:"/api/flows"},type:G,getPatient(){return l().request("entities","patients:model",this.get("_patient"))},getOwner(){const e=this.get("_owner");return l().request("entities",`${e.type}:model`,e.id)},getAuthor(){return l().request("entities","clinicians:model",this.get("_author"))},getState(){return l().request("entities","states:model",this.get("_state"))},getProgramFlow(){return l().request("entities","programFlows:model",this.get("_program_flow"))},isDone(){return this.getState().isDone()},isAllDone(){const{complete:e,total:t}=this.get("_progress");return e===t},canEdit(){const e=l().request("bootstrap","currentUser");if(e.can("work:manage"))return!0;if(e.can("work:owned:manage")&&this.getOwner()===e)return!0;if(e.can("work:team:manage")){const t=this.getOwner();if(e.getTeam()===("teams"===t.type?t:t.getTeam()))return!0}return!1},canDelete(){if(!this.canEdit())return!1;const e=l().request("bootstrap","currentUser");return!!e.can("work:delete")||!(!e.can("work:owned:delete")||this.getOwner()!==e)||!(!e.can("work:authored:delete")||this.getAuthor()!==e)},saveState(e){return this.save({_state:e.id},{relationships:{state:this.toRelation(e)}})},saveOwner(e){return this.save({_owner:e},{relationships:{owner:this.toRelation(e)}})},applyOwner(e){const t=`${this.url()}/relationships/actions`,i={owner:this.toRelation(e)};return this.save({},{relationships:i},{url:t})},saveAll(e){this.isNew()&&(e=(0,r.extend)({},this.attributes,e));const t={state:this.toRelation(e._state,"states"),owner:this.toRelation(e._owner),"program-flow":this.toRelation(e._program_flow,"program-flows")};return this.save(e,{relationships:t},{wait:!0})},parseRelationship:H}),X=(0,c.A)(Q,G),K=u.A.extend({url:"/api/flows",model:X,parseRelationship:H,save(e){const t=this.invoke("saveAll",e);return Promise.all(t)},applyOwner(e){const t=this.invoke("applyOwner",e);return Promise.all(t)}});new(s.A.extend({Entity:{_Model:Q,Model:X,Collection:K},radioRequests:{"flows:model":"getModel","flows:collection":"getCollection","fetch:flows:model":"fetchFlow","fetch:flows:collection":"fetchCollection","fetch:flows:collection:byPatient":"fetchFlowsByPatient"},fetchFlow(e){const t=["program-flow","program-flow.program","program-flow.program-actions"].join();return this.fetchModel(e,{data:{include:t}})},fetchFlowsByPatient({patientId:e,filter:t}){const i={filter:t},s=`/api/patients/${e}/relationships/flows`;return this.fetchCollection({url:s,data:i})}})),i(2099);var Z=i(5293);const ee="form-responses",{parseRelationship:te}=g.A,ie=function(e,t){return"editor"===t?e:te(e,t)},se=p.A.extend({type:ee,urlRoot:"/api/form-responses",saveAll(){const e=this.attributes,t={form:this.toRelation(e._form,"forms"),patient:this.toRelation(e._patient,"patients"),action:this.toRelation(e._action,"patient-actions")};return this.save(e,{relationships:t},{wait:!0})},getDraft(){if(this.get("status")===m.II.DRAFT)return{updated:this.get("updated_at"),submission:this.getResponse()}},getResponse(){return(0,r.get)(this.get("response"),"data",{})},getFormData(){return(0,r.omit)(this.get("response"),"data")},parseRelationship:ie}),oe=(0,c.A)(se,ee),ne=u.A.extend({url:"/api/form-responses",model:oe,parseRelationship:ie,comparator:(e,t)=>(0,Z.fo)("desc",e.get("updated_at"),t.get("updated_at")),getFirstSubmission(){return this.find({status:m.II.SUBMITTED})},filterSubmissions(){const e=this.clone(),t=this.filter({status:m.II.SUBMITTED});return e.reset(t),e}});new(s.A.extend({Entity:{_Model:se,Model:oe,Collection:ne},radioRequests:{"formResponses:model":"getModel","formResponses:collection":"getCollection","fetch:formResponses:model":"fetchFormResponse","fetch:formResponses:latest":"fetchLatestResponse"},fetchFormResponse(e,t){return e?this.fetchModel(e,t):new oe},fetchLatestResponse(e){const t=(0,r.reduce)(e,((e,t,i)=>t?(e.filter[i]=t,e):e),{filter:{}});return this.fetchBy("/api/form-responses/latest",{data:t}).then((e=>e||new oe))}}));var re=i(9781);new(s.A.extend({radioRequests:{"fetch:icd:byTerm":"fetchIcdByTerm"},fetchIcdByTerm(e){const t={term:e};return(0,re.Ay)("/api/graphql",{header:{Accept:"application/json","Content-Type":"application/json"},method:"POST",body:JSON.stringify({query:"query ($term: String!) {\n      icdCodes(term: $term) {\n        code\n        description\n        hcc_v24\n        hcc_v28\n        isSpecific\n        parent {\n          code\n          description\n        }\n        children {\n          code\n          description\n        }\n      }\n    }",variables:t})}).then(re.bt)}}));var ae=i(9161);const le="patient-fields",ce=p.A.extend({type:le,url(){return`/api/patients/${this.get("_patient")}/fields/${this.get("name")}`},isNew:()=>!1,getValue(){const e=this.get("value");return(0,r.isObject)(e)&&(0,r.isEmpty)(e)?null:e},saveAll(e){(e=(0,r.extend)({},this.attributes,e)).id||this.set({id:(0,ae.A)(`resource:field:${e.name.toLowerCase()}`,e._patient)});const t={patient:this.toRelation(e._patient,"patients")};return this.save(e,{relationships:t},{wait:!0})}}),de=(0,c.A)(ce,le),he=u.A.extend({model:de}),ue=(new(s.A.extend({Entity:{_Model:ce,Model:de,Collection:he},radioRequests:{"patientFields:model":"getModel","patientFields:collection":"getCollection","fetch:patientFields:model":"fetchPatientField"},fetchPatientField(e,t){const i=`/api/patients/${e}/fields/${t}`;return this.fetchModel(t,{url:i,abort:!1}).then((e=>{this.getModel(e.attributes)}))}})),"patients"),pe=p.A.extend({type:ue,urlRoot:"/api/patients",validate({first_name:e,last_name:t,birth_date:i,sex:s}){const o={};if(e&&t||(o.name="required"),s||(o.sex="required"),i?h()(i).isAfter()&&(o.birth_date="invalidDate"):o.birth_date="required",!(0,r.isEmpty)(o))return o},getWorkspaces(){return l().request("entities","workspaces:collection",this.get("_workspaces"))},getFields(){return l().request("entities","patientFields:collection",this.get("_patient_fields"))},getField(e){return this.getFields().find({name:e})},saveAll(e){e=(0,r.extend)({},this.attributes,e);const t={wait:!0};return this.isNew()&&(t.type="PUT"),this.save(e,{},t)},canEdit(){return this.isNew()||"manual"===this.get("source")},getSortName(){return(this.get("last_name")+this.get("first_name")).toLowerCase()},getWorkspacePatient(){return l().request("entities","get:workspacePatients:model",this.id)},toggleActiveStatus(){const e=this.getWorkspacePatient(),t=e.get("status")!==m.B_.ACTIVE?m.B_.ACTIVE:m.B_.INACTIVE;e.saveAll({status:t})},setArchivedStatus(){l().request("entities","get:workspacePatients:model",this.id).saveAll({status:m.B_.ARCHIVED})}}),ge=(0,c.A)(pe,ue),me=u.A.extend({url:"/api/patients",model:ge}),fe=(new(s.A.extend({Entity:{_Model:pe,Model:ge,Collection:me},radioRequests:{"patients:model":"getModel","patients:collection":"getCollection","fetch:patients:model":"fetchModel","fetch:patients:model:byAction":"fetchPatientByAction","fetch:patients:model:byFlow":"fetchPatientByFlow"},fetchPatientByAction(e){return this.fetchBy(`/api/actions/${e}/patient`)},fetchPatientByFlow(e){return this.fetchBy(`/api/flows/${e}/patient`)}})),p.A.extend({type:"patients-search-results"})),we=u.A.extend({url:"/api/patients",model:fe,initialize(){this._debouncedSearch=(0,r.debounce)(this._debouncedSearch,150)},prevSearch:"",controller:new AbortController,search(e=""){if(e.length<3)return e.length&&this.prevSearch.includes(e)||(delete this._hasIdentifiers,this.reset(),this.prevSearch=""),this._debouncedSearch.cancel(),void this.controller.abort();this.prevSearch=e,this.isSearching=!0,this._debouncedSearch(e)},hasIdentifiers(){return(0,r.isBoolean)(this._hasIdentifiers)||(this._hasIdentifiers=!!this.find((e=>(0,r.get)(e.get("identifiers"),"length")))),this._hasIdentifiers},_debouncedSearch(e){const t={search:e};delete this._hasIdentifiers,this.controller.abort(),this.controller=new AbortController;const i=this.fetch({data:{filter:t},signal:this.controller.signal});this.fetcher=i,i.then((()=>{this.fetcher===i&&(this.isSearching=!1,this.trigger("search",this))}))}});new(s.A.extend({Entity:{Model:fe,Collection:we},radioRequests:{"searchPatients:collection":"getCollection"}}));var Ae=i(563);const _e="program-actions",{parseRelationship:ye}=g.A,ve=function(e,t){return e&&"owner"!==t?ye(e,t):e},Re=p.A.extend({urlRoot:"/api/program-actions",type:_e,validate({name:e}){if(!(0,C.A)(e))return"Action name required"},getTags(){return l().request("entities","tags:collection",(0,Ae.A)(this.get("tags"),"text"))},addTag(e){const t=this.getTags();return t.add(e),this.save({tags:t.map("text")})},removeTag(e){const t=this.getTags();return t.remove(e),this.save({tags:t.map("text")})},getAction({patientId:e,flowId:t}){const i=l().request("bootstrap","currentUser"),s=l().request("bootstrap","currentWorkspace").getStates(),o=(0,r.first)(s.filter({status:m.Jo.QUEUED}));return l().request("entities","actions:model",{name:this.get("name"),_flow:t,_patient:e,_state:o.id,_owner:this.get("_owner")||{id:i.id,type:"clinicians"},_program_action:this.id})},enableAttachmentUploads(){this.save({allowed_uploads:["pdf"]})},disableAttachmentUploads(){this.save({allowed_uploads:[]})},getOwner(){const e=this.get("_owner");if(e)return l().request("entities","teams:model",e.id)},saveOwner(e){return e=this.toRelation(e),this.save({_owner:e.data},{relationships:{owner:e}})},getForm(){const e=this.get("_form");if(e)return l().request("entities","forms:model",e)},hasOutreach(){return this.get("outreach")!==m.xb.DISABLED},isVisibleToCurrentUser(){const e=this.get("_visible_to"),t=l().request("bootstrap","currentUser").getTeam();return!(0,r.size)(e)||!!e.find((e=>e.id===t.id))},saveForm(e){const t={_form:(e=this.toRelation(e)).data};return e.data||(t.outreach=m.xb.DISABLED),this.save(t,{relationships:{form:e}})},saveAll(e){e=(0,r.extend)({},this.attributes,e);const t={owner:this.toRelation(e._owner,"teams"),form:this.toRelation(e._form,"forms"),"program-flow":this.toRelation(e._program_flow,"program-flows"),program:this.toRelation(e._program,"programs")};return this.save(e,{relationships:t},{wait:!0})},parseRelationship:ve}),be=(0,c.A)(Re,_e),Ce=u.A.extend({initialize(e,t={}){this.flowId=t.flowId,this.flowId&&(this.comparator="sequence")},url(){return this.flowId?`/api/program-flows/${this.flowId}/actions`:"/api/program-actions"},model:be,parseRelationship:ve,updateSequences(){const e=this.map(((e,t)=>(e.set({sequence:t}),e.toJSONApi({sequence:t}))));return this.sync("patch",this,{url:this.url(),data:JSON.stringify({data:e})})},filterAddable(){const e=this.clone(),t=this.filter((e=>{const t=!!e.get("published_at"),i=!!e.get("archived_at"),s=e.get("behavior")===m.Rp.AUTOMATED,o=e.isVisibleToCurrentUser();return t&&!i&&!s&&o}));return e.reset(t),e}}),qe=(new(s.A.extend({Entity:{_Model:Re,Model:be,Collection:Ce},radioRequests:{"programActions:model":"getModel","programActions:collection":"getCollection","fetch:programActions:model":"fetchModel","fetch:programActions:collection:byProgram":"fetchProgramActionsByProgram","fetch:programActions:collection":"fetchProgramActions","fetch:programActions:collection:byProgramFlow":"fetchProgramActionsByFlow"},fetchProgramActionsByProgram({programId:e}){const t=`/api/programs/${e}/relationships/actions`;return this.fetchCollection({url:t})},fetchProgramActions(e=m.Rp.STANDARD){return(new this.Entity.Collection).fetch({data:{filter:{behavior:e}}})},fetchProgramActionsByFlow:(e,t)=>new Ce([],{flowId:e}).fetch(t)})),"program-flows"),{parseRelationship:xe}=g.A,Ee=function(e,t){return e&&"owner"!==t?xe(e,t):e},Me=p.A.extend({urlRoot(){return this.isNew()?`/api/programs/${this.get("_program")}/relationships/flows`:"/api/program-flows"},type:qe,validate({name:e}){if(!(0,C.A)(e))return"Flow name required"},getTags(){return l().request("entities","tags:collection",(0,Ae.A)(this.get("tags"),"text"))},addTag(e){const t=this.getTags();return t.add(e),this.save({tags:t.map("text")})},removeTag(e){const t=this.getTags();return t.remove(e),this.save({tags:t.map("text")})},getOwner(){const e=this.get("_owner");if(e)return l().request("entities","teams:model",e.id)},getFlow(e){const t=l().request("bootstrap","currentWorkspace").getStates(),i=(0,r.first)(t.filter({status:m.Jo.QUEUED}));return l().request("entities","flows:model",{_patient:e,_program_flow:this.get("id"),_state:i.id})},saveOwner(e){return e=this.toRelation(e),this.save({_owner:e.data},{relationships:{owner:e}})},saveAll(e){e=(0,r.extend)({},this.attributes,e);const t={owner:this.toRelation(e._owner,"teams")};return this.save(e,{relationships:t},{wait:!0})},getActions(){return l().request("entities","programActions:collection",this.get("_program_actions"),{flowId:this.id})},getAddableActions(){return this.getActions().filterAddable()},isVisibleToCurrentUser(){const e=this.get("_visible_to"),t=l().request("bootstrap","currentUser").getTeam();return!(0,r.size)(e)||!!e.find((e=>e.id===t.id))},parseRelationship:Ee}),ke=(0,c.A)(Me,qe),Te=u.A.extend({url:"/api/program-flows",model:ke,parseRelationship:Ee,filterAddable(){const e=this.clone(),t=this.filter((e=>{const t=!!e.get("published_at"),i=!!e.get("archived_at"),s=e.get("behavior")===m.Rp.AUTOMATED,o=e.isVisibleToCurrentUser();return t&&!i&&!s&&o}));return e.reset(t),e}}),Pe=(new(s.A.extend({Entity:{_Model:Me,Model:ke,Collection:Te},radioRequests:{"programFlows:model":"getModel","programFlows:collection":"getCollection","fetch:programFlows:model":"fetchModel","fetch:programFlows:collection:byProgram":"fetchProgramFlowsByProgram","fetch:programFlows:collection":"fetchProgramFlows"},fetchProgramFlowsByProgram({programId:e}){const t=`/api/programs/${e}/relationships/flows`;return this.fetchCollection({url:t})},fetchProgramFlows(e=m.Rp.STANDARD){return(new this.Entity.Collection).fetch({data:{filter:{behavior:e}}})}})),"programs"),De=p.A.extend({type:Pe,validate({name:e}){if(!(0,C.A)(e))return"Program name required"},urlRoot:"/api/programs",getAddable(){const e=l().request("entities","programActions:collection",this.get("_program_actions")),t=l().request("entities","programFlows:collection",this.get("_program_flows")),i=e.filterAddable(),s=t.filterAddable();return new(n().Collection)([...s.models,...i.models],{comparator:"name"})}}),Fe=(0,c.A)(De,Pe),Be=u.A.extend({url:"/api/programs",model:Fe}),Ie=(new(s.A.extend({Entity:{_Model:De,Model:Fe,Collection:Be},radioRequests:{"programs:model":"getModel","programs:collection":"getCollection","fetch:programs:model":"fetchModel","fetch:programs:collection":"fetchCollection","fetch:programs:model:byProgramFlow":"fetchProgramByProgramFlow"},fetchProgramByProgramFlow(e){return this.fetchBy(`/api/program-flows/${e}/program`)}})),"roles"),Se=p.A.extend({type:Ie,urlRoot:"/api/roles"}),Oe=(0,c.A)(Se,Ie),$e=u.A.extend({url:"/api/roles",model:Oe}),Ne=(new(s.A.extend({Entity:{_Model:Se,Model:Oe,Collection:$e},radioRequests:{"roles:model":"getModel","roles:collection":"getCollection","fetch:roles:collection":"fetchCollection"}})),"settings"),Ue=p.A.extend({type:Ne,urlRoot:"/api/settings"}),We=(0,c.A)(Ue,Ne),Ve=u.A.extend({url:"/api/settings",model:We}),Le=(new(s.A.extend({Entity:{_Model:Ue,Model:We,Collection:Ve},radioRequests:{"settings:model":"getModel","fetch:settings:collection":"fetchCollection"}})),"states"),je=p.A.extend({type:Le,isDone(){return this.get("status")===m.Jo.DONE}}),ze=(0,c.A)(je,Le),Je=u.A.extend({url:"/api/states",model:ze,comparator:"sequence",groupByDone(){const{done:e,notDone:t}=this.groupBy((e=>e.isDone()?"done":"notDone"));return{done:new Je(e),notDone:new Je(t)}},getFilterIds(){return this.map("id").join(",")}}),Ge=(new(s.A.extend({Entity:{_Model:je,Model:ze,Collection:Je},radioRequests:{"states:model":"getModel","states:collection":"getCollection","fetch:states:collection":"fetchCollection"}})),"tags"),Ye=p.A.extend({type:Ge,idAttribute:"text"}),He=(0,c.A)(Ye,Ge),Qe=u.A.extend({url:"/api/tags",model:He,parse:e=>(0,r.map)(e.data,(e=>({text:e}))),comparator:"text"});let Xe;const Ke=(new(s.A.extend({Entity:{_Model:Ye,Model:He,Collection:Qe},radioRequests:{"tags:model":"getModel","tags:collection":"getCollection","fetch:tags:collection":"fetchTags"},fetchTags(){return Xe||this.fetchCollection().then((e=>(Xe=e,e)))}})),"teams"),Ze=p.A.extend({type:Ke,urlRoot:"/api/teams",getAssignableClinicians(){return l().request("entities","clinicians:collection",this.get("_clinicians")).filterAssignable()}}),et=(0,c.A)(Ze,Ke),tt=u.A.extend({url:"/api/teams",model:et,comparator:"name"}),it=(new(s.A.extend({Entity:{_Model:Ze,Model:et,Collection:tt},radioRequests:{"teams:model":"getModel","teams:collection":"getCollection","fetch:teams:collection":"fetchCollection"}})),"widget-values"),st=p.A.extend({type:it}),ot=(0,c.A)(st,it);u.A.extend({model:ot});var nt=i(9320);const rt=s.A.extend({Entity:{_Model:st,Model:ot},radioRequests:{"get:widgetValues:model":"getByPatient","fetch:widgetValues:byPatient":"fetchByPatient"},fetchByPatient(e,t){const i=this.getByPatient(e.get("slug"),t),s=e.get("values");if((0,r.isEmpty)(s))return i;const o={filter:{patient:t}};return i.fetch({url:`/api/widgets/${e.get("slug")}/values`,data:o})},getByPatient:(e,t)=>((0,nt.A)(t)||(t=(0,ae.A)(t,b.A)),new ot({id:(0,ae.A)(e,t),name:e}))}),at=(new rt,"widgets"),lt=p.A.extend({type:at,fetchValues(e){return l().request("entities","fetch:widgetValues:byPatient",this,e)}}),ct=(0,c.A)(lt,at),dt=u.A.extend({url:"/api/widgets",model:ct,modelId:e=>(0,r.uniqueId)(`${e.slug}-`)}),ht=(new(s.A.extend({Entity:{_Model:lt,Model:ct,Collection:dt},radioRequests:{"widgets:model":"getModel","widgets:collection":"getCollection","fetch:widgets:collection":"fetchWidgets"},fetchWidgets({filter:e={}}={}){const t={filter:e};return this.fetchCollection({data:t})}})),"workspace-patients"),ut=p.A.extend({type:ht,urlRoot:"/api/workspace-patients",saveAll(e){const t={workspace:this.toRelation(this.get("_workspace"),"workspaces"),patient:this.toRelation(this.get("_patient"),"patients")};this.save(e,{relationships:t},{type:"PUT"})},canEdit:()=>l().request("bootstrap","currentUser").can("patients:manage")}),pt=(0,c.A)(ut,ht),gt=(new(s.A.extend({Entity:{_Model:ut,Model:pt},radioRequests:{"get:workspacePatients:model":"getByPatient","fetch:workspacePatients:byPatient":"fetchByPatient"},fetchByPatient(e){return this.getByPatient(e).fetch()},getByPatient(e){const t=l().request("bootstrap","currentWorkspace").id;return new pt({id:(0,ae.A)(e,t),_patient:e,_workspace:t})}})),"workspaces"),mt=p.A.extend({type:gt,urlRoot:"/api/workspaces",getStates(){return l().request("entities","states:collection",this.get("_states"))},getForms(){return l().request("entities","forms:collection",this.get("_forms"))},getAssignableClinicians(){return l().request("entities","clinicians:collection",this.get("_clinicians")).filterAssignable()},updateClinicians(e){this.set("_clinicians",e.map((e=>(0,r.pick)(e,"id","type"))))},addClinician(e){const t=`/api/workspaces/${this.id}/relationships/clinicians`,i=e.get("_workspaces");return e.set({_workspaces:(0,r.union)(i,[{id:this.id}])}),this.set({_clinicians:(0,r.union)(this.get("_clinicians"),[{id:e.id}])}),this.sync("create",this,{url:t,data:JSON.stringify({data:[{id:e.id,type:e.type}]})})},removeClinician(e){const t=`/api/workspaces/${this.id}/relationships/clinicians`;return e.set({_workspaces:(0,r.reject)(e.get("_workspaces"),{id:this.id})}),this.set({_clinicians:(0,r.reject)(this.get("_clinicians"),{id:e.id})}),this.sync("delete",this,{url:t,data:JSON.stringify({data:[{id:e.id,type:e.type}]})})}}),ft=(0,c.A)(mt,gt),wt=u.A.extend({url:"/api/workspaces",model:ft,comparator:"name"});new(s.A.extend({Entity:{_Model:mt,Model:ft,Collection:wt},radioRequests:{"workspaces:model":"getModel","workspaces:collection":"getCollection","fetch:workspaces:collection":"fetchCollection"}}))},7273:(e,t,i)=>{i.d(t,{B_:()=>c,G_:()=>n,II:()=>o,Jo:()=>l,Rp:()=>r,b5:()=>a,xb:()=>s});const s={DISABLED:"disabled",PATIENT:"patient"},o={DRAFT:"draft",SUBMITTED:"submitted",ANY:"draft,submitted"},n={DISABLED:"disabled",PENDING:"pending",SENT:"sent",RESPONDED:"responded",CANCELED:"canceled",ERROR_NO_PHONE:"error_no_phone",ERROR_OPT_OUT:"error_opt_out",ERROR_SMS_FAILED:"error_sms_failed"},r={STANDARD:"standard",CONDITIONAL:"conditional",AUTOMATED:"automated"},a=[{id:"today",unit:"day",prev:0},{id:"yesterday",unit:"day",prev:1},{id:"thisweek",unit:"week",prev:0},{id:"lastweek",unit:"week",prev:1},{id:"thismonth",unit:"month",prev:0},{id:"lastmonth",unit:"month",prev:1}],l={STARTED:"started",QUEUED:"queued",DONE:"done"},c={ACTIVE:"active",INACTIVE:"inactive",ARCHIVED:"archived"}},563:(e,t,i)=>{i.d(t,{A:()=>o});var s=i(1359);const o=(e,t)=>(0,s.map)(e,(function(e){return(0,s.object)([t],[e])}))},5293:(e,t,i)=>{i.d(t,{fo:()=>n,zC:()=>a});var s=i(1359);function o(e,t){return"desc"===e?-1*t:t}function n(e,t,i,s=""){return t||(t=s),i||(i=s),o(e,t.localeCompare(i))}function r(e,t=-1){return(0,s.isNumber)(e)?e:t}function a(e,t,i,s=Number.NEGATIVE_INFINITY){return t||(t=s),i||(i=s),o(e,r(t,s)>r(i,s)?1:-1)}}}]);