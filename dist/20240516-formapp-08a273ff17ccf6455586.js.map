{"version":3,"file":"20240516-formapp-08a273ff17ccf6455586.js","mappings":"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","sources":["webpack://care-ops-frontend/./src/js/formapp/utils.js","webpack://care-ops-frontend/./src/js/formapp/components.js","webpack://care-ops-frontend/./src/js/formapp.js"],"sourcesContent":["/* global Formio, FormioUtils */\nimport { extend, reduce, values } from 'underscore';\nimport { addError } from 'js/datadog';\n\n// Note: Allows for setting the submission at form instantiation\n// https://github.com/formio/formio.js/pull/4580\nconst webformInit = Formio.Displays.displays.webform.prototype.init;\n\nFormio.Displays.displays.webform.prototype.init = function() {\n  if (this.options.data) {\n    const data = extend({}, this.options.data);\n    this._submission = { data };\n    this._data = data;\n  }\n  webformInit.call(this);\n};\n\n// NOTE: Evaluator should throw errors\n// https://github.com/formio/formio.js/issues/4613\nconst evaluator = Formio.Evaluator.evaluator;\nFormio.Evaluator.evaluator = function(func, ...params) {\n  try {\n    return evaluator(func, ...params);\n  } catch (e) {\n    addError(e);\n  }\n};\n\n// NOTE: Evaluate should also throw errors\nconst evaluate = Formio.Evaluator.evaluate;\nFormio.Evaluator.evaluate = function(func, ...params) {\n  try {\n    return evaluate(func, ...params);\n  } catch (e) {\n    addError(e);\n  }\n};\n\nfunction getScriptContext(contextScripts, baseContext) {\n  return Formio.createForm(document.createElement('div'), {}).then(form => {\n    const context = reduce(contextScripts, (memo, script) => {\n      return extend({}, memo, FormioUtils.evaluate(script, form.evalContext(memo)));\n    }, baseContext);\n\n    form.destroy();\n\n    return context;\n  });\n}\n\nfunction getSubmission(formData, formSubmission, responseData, reducers, evalContext) {\n  return Formio.createForm(document.createElement('div'), {}, { evalContext }).then(form => {\n    const submission = reduce(reducers, (memo, reducer) => {\n      return FormioUtils.evaluate(reducer, form.evalContext({ formSubmission: memo, formData, responseData })) || memo;\n    }, formSubmission);\n\n    form.destroy();\n\n    return submission;\n  });\n}\n\nconst hasChangedFunction = 'return function hasChanged(key) { return !_.isEqual(_.get(formSubmission, key), _.get(prevSubmission, key)); }';\n\nfunction getChangeReducers(form, changeReducers, curSubmission, prevSubmission) {\n  return reduce(changeReducers, (memo, reducer) => {\n    const context = form.evalContext({ formSubmission: memo, prevSubmission });\n    context.hasChanged = FormioUtils.evaluate(hasChangedFunction, context);\n    return FormioUtils.evaluate(reducer, context) || memo;\n  }, curSubmission);\n}\n\nfunction getResponse(form, submitReducers, formSubmission) {\n  const formData = { fields: {}, action: {}, flow: {}, artifacts: {} };\n\n  return reduce(submitReducers, (memo, reducer) => {\n    const context = form.evalContext({ formSubmission, formData: memo });\n    const reducerFunction = evaluator(reducer, context);\n\n    // User evaluate directly to throw errors\n    return evaluate(reducerFunction, values(context)) || memo;\n  }, formData);\n}\n\nexport {\n  getScriptContext,\n  getSubmission,\n  getChangeReducers,\n  getResponse,\n};\n","/* global Formio */\nimport { debounce, isString } from 'underscore';\nconst NestedComponent = Formio.Components.components.nested;\nconst SelectComponent = Formio.Components.components.select;\n\n// Modifies the emptyValue to avoid error on php mutating {} to []\nclass SurveyComponent extends Formio.Components.components.survey {\n  get emptyValue() {\n    return [];\n  }\n}\n\nFormio.Components.components.survey = SurveyComponent;\n\nclass DateTimeComponent extends Formio.Components.components.datetime {\n  formatValue(date) {\n    if (!isString(date) || !date.length) return date;\n\n    return Formio.Utils.moment(date).format();\n  }\n}\n\nFormio.Components.components.datetime = DateTimeComponent;\n\nclass SnippetComponent extends NestedComponent {\n  constructor(...args) {\n    super(...args);\n    this.noField = true;\n  }\n  static schema(...extendArgs) {\n    return NestedComponent.schema({\n      label: 'Snippet',\n      key: 'snippet',\n      type: 'snippet',\n      components: [],\n      input: false,\n      persistent: false,\n      snippet: null,\n    }, ...extendArgs);\n  }\n}\n\n// NOTE: Outside of the schema much of the logic is slightly modified from SelectComponent\nclass DirectoryComponent extends SelectComponent {\n  static schema(...extend) {\n    return SelectComponent.schema({\n      label: 'Directory',\n      key: 'directory',\n      type: 'directory',\n      dataSrc: 'custom',\n      searchField: true,\n      customOptions: {\n        noChoicesText: 'Type a minimum of 3 characters for results',\n      },\n    }, ...extend);\n  }\n\n  get defaultSchema() {\n    return DirectoryComponent.schema();\n  }\n\n  constructor(...args) {\n    super(...args);\n    this.updateCustomItems = debounce(this.updateCustomItems, 300);\n  }\n\n  updateItems(searchInput, forceUpdate) {\n    if (!this.visible) {\n      this.itemsLoadedResolve();\n      return;\n    }\n\n    this.updateCustomItems(forceUpdate, searchInput);\n  }\n\n  // NOTE: Biggest modification is exposing the searchInput to the custom code\n  getCustomItems(searchInput) {\n    if (!searchInput || searchInput.length < 3) return Promise.resolve([]);\n\n    return this.evaluate(this.component.data.custom, {\n      values: [],\n      searchInput,\n    }, 'values');\n  }\n\n  updateCustomItems(forceUpdate, searchInput) {\n    if (!forceUpdate && !this.active) {\n      this.itemsLoadedResolve();\n      return;\n    }\n\n    this.loading = true;\n    this.getCustomItems(searchInput)\n      .then(items => {\n        this.loading = false;\n        this.setItems(items || []);\n      })\n      .catch(err => {\n        this.handleLoadingError(err);\n      });\n  }\n}\n\nclass CustomButtonComponent extends Formio.Components.components.button {\n  get shouldDisabled() {\n    if (this.component.alwaysEnable) return false;\n\n    return super.shouldDisabled;\n  }\n\n  set disabled(disabled) {\n    this._disabled = disabled;\n  }\n\n  get disabled() {\n    return !this.component.alwaysEnable && (this._disabled || this.parentDisabled);\n  }\n}\n\nFormio.use({\n  components: {\n    snippet: SnippetComponent,\n    directory: DirectoryComponent,\n    button: CustomButtonComponent,\n  },\n});\n","/* global Formio, FormioUtils */\nimport 'formiojs/dist/formio.form.min';\nimport 'formiojs/dist/formio.form.css';\nimport '@fortawesome/fontawesome-pro/scss/fontawesome.scss';\nimport '@fortawesome/fontawesome-pro/scss/v4-shims.scss';\nimport '@fortawesome/fontawesome-pro/scss/solid.scss';\nimport 'scss/formapp/bootstrap.min.css';\n\nimport 'scss/formapp-core.scss';\n\nimport { extend, map, debounce, uniqueId, each, isEmpty } from 'underscore';\nimport $ from 'jquery';\nimport Backbone from 'backbone';\nimport Handlebars from 'handlebars/runtime';\nimport parsePhoneNumber from 'libphonenumber-js/min';\nimport { addError } from 'js/datadog';\n\nimport intl from 'js/i18n';\n\nimport { versions } from './config';\n\nimport {\n  getScriptContext,\n  getSubmission,\n  getChangeReducers,\n  getResponse,\n} from 'js/formapp/utils';\n\nimport 'js/formapp/components';\n\nimport 'scss/formapp/comment.scss';\nimport 'scss/formapp/form.scss';\nimport 'scss/formapp/formio-overrides.scss';\nimport 'scss/formapp/print.scss';\nimport 'scss/formapp/pdf.scss';\n\nimport 'scss/modules/loader.scss';\n\nlet router;\n\nfunction scrollTop() {\n  window.scrollTo({ top: 0 });\n}\n\nfunction updateField(fieldName, value) {\n  return router.updateField({ fieldName, value });\n}\n\nfunction getField(fieldName) {\n  return router.getField({ fieldName });\n}\n\nfunction getClinicians({ teamId } = {}) {\n  return router.getClinicians({ teamId });\n}\n\nfunction getDirectory(directoryName, query) {\n  return router.getDirectory({ directoryName, query });\n}\n\nfunction getIcd(term) {\n  return router.getIcd({ term });\n}\n\nfunction getContext(contextScripts) {\n  return getScriptContext(contextScripts, { getClinicians, getDirectory, getField, updateField, getIcd, Handlebars, TEMPLATES: {}, parsePhoneNumber });\n}\n\nlet prevSubmission;\n\nfunction updateSubmission() {\n  router.request('update:storedSubmission', prevSubmission);\n}\n\nconst updateSubmissionDebounce = debounce(updateSubmission, /* istanbul ignore next */ _TEST_ ? 100 : 2000);\n\nconst onChange = function(form, changeReducers) {\n  const data = getChangeReducers(form, changeReducers, structuredClone(form.submission.data), prevSubmission);\n\n  form.data = data;\n  form.setSubmission({ data }, { fromChangeReducers: true, fromSubmission: false });\n\n  prevSubmission = structuredClone(form.submission.data);\n  updateSubmissionDebounce();\n};\n\nconst onChangeDebounce = debounce(onChange, 100);\n\nasync function renderForm({ definition, isReadOnly, storedSubmission, formData, formSubmission, responseData, loaderReducers, changeReducers, submitReducers, contextScripts, beforeSubmit }) {\n  const evalContext = await getContext(contextScripts);\n\n  const submission = storedSubmission || await getSubmission(formData, formSubmission, responseData, loaderReducers, evalContext);\n  prevSubmission = structuredClone(submission);\n\n  const form = await Formio.createForm(document.getElementById('root'), definition, {\n    readOnly: isReadOnly,\n    evalContext,\n    data: submission,\n    onChange({ fromChangeReducers }, { instance }) {\n      if (fromChangeReducers && form.initialized) return;\n\n      // Prevents clearing submission on add/edit of editgrid\n      if (instance && instance.inEditGrid) return;\n\n      onChangeDebounce(form, changeReducers);\n    },\n  });\n\n  form.nosubmit = true;\n\n  router.off('form:submit');\n  router.off('form:errors');\n\n  router.on({\n    'form:errors'(errors) {\n      // NOTE: maps errors due to https://github.com/formio/formio.js/issues/3970\n      form.showErrors(map(errors, error => {\n        return { message: error };\n      }), true);\n    },\n    'form:submit'() {\n      form.submit();\n    },\n  });\n\n  form.on('prevPage', scrollTop);\n  form.on('nextPage', scrollTop);\n\n  form.on('error', () => {\n    router.request('ready:form');\n    form._isReady = true;\n  });\n\n  form.on('submit', response => {\n    // Prevents submission after a success\n    if (!form._isReady) return;\n    form._isReady = false;\n    // Always run one last change event on submit\n    onChangeDebounce.cancel();\n    onChange(form, changeReducers);\n    updateSubmissionDebounce.cancel();\n\n    form.setPristine(false);\n    if (!form.checkValidity(response.data, true, response.data)) {\n      form.emit('error');\n      return;\n    }\n\n    const data = FormioUtils.evaluate(beforeSubmit, form.evalContext({ formSubmission: response.data }));\n\n    if (!data) {\n      router.trigger('form:errors', [intl.formapp.failedSubmit]);\n      addError(new Error('beforeSubmit failure.'));\n      return;\n    }\n\n    try {\n      const submitResponse = extend(getResponse(form, submitReducers, data), response, { data });\n\n      // Remove empty data to prevent { __empty__: true }\n      each(['fields', 'flow', 'action', 'artifacts'], key => {\n        if (isEmpty(submitResponse[key])) delete submitResponse[key];\n      });\n\n      router.request('submit:form', { response: submitResponse });\n    } catch (e) {\n      router.trigger('form:errors', [intl.formapp.failedSubmit]);\n      addError(e);\n    }\n  });\n\n  router.request('ready:form');\n  form._isReady = true;\n}\n\nasync function renderPreview({ definition, contextScripts }) {\n  const evalContext = await getContext(contextScripts);\n\n  extend(evalContext, { isPreview: true });\n\n  Formio.createForm(document.getElementById('root'), definition, { evalContext });\n}\n\nasync function renderResponse({ definition, formSubmission, contextScripts }) {\n  const evalContext = await getContext(contextScripts);\n\n  extend(evalContext, { isResponse: true });\n\n  Formio.createForm(document.getElementById('root'), definition, {\n    readOnly: true,\n    renderMode: 'form',\n    evalContext,\n    data: formSubmission,\n  }).then(form => {\n    form.on('prevPage', scrollTop);\n    form.on('nextPage', scrollTop);\n  });\n}\n\nasync function renderPdf({ definition, formData, formSubmission, responseData, loaderReducers, contextScripts }) {\n  const evalContext = await getContext(contextScripts);\n\n  const submission = await getSubmission(formData, formSubmission, responseData, loaderReducers, evalContext);\n\n  const form = await Formio.createForm(document.getElementById('root'), definition, {\n    evalContext,\n    data: submission,\n  });\n\n  form.nosubmit = true;\n}\n\nconst Router = Backbone.Router.extend({\n  initialize() {\n    window.addEventListener('message', ({ data, origin }) => {\n      /* istanbul ignore next: security check */\n      if (origin !== window.origin || !data || !data.message) return;\n\n      this.trigger(data.message, data.args);\n    }, false);\n\n    $(window).on('focus', () => {\n      this.request('focus');\n    });\n\n    this.request('version', versions.frontend);\n    this.requestResolves = {};\n    this.on({\n      'fetch:clinicians': this.onFetchClinicians,\n      'fetch:directory': this.onFetchDirectory,\n      'fetch:field': this.onFetchField,\n      'update:field': this.onUpdateField,\n      'fetch:icd': this.onFetchIcd,\n    });\n  },\n  request(message, args = {}) {\n    const request = new Promise(resolve => {\n      this.once(message, resolve);\n      parent.postMessage({ message, args }, window.origin);\n    });\n\n    return request;\n  },\n  requestValue({ args, message, requestId }) {\n    const request = new Promise((resolve, reject) => {\n      this.requestResolves[requestId] = { resolve, reject };\n      parent.postMessage({\n        message,\n        args: extend({ requestId }, args),\n      }, window.origin);\n    });\n\n    return request;\n  },\n  resolveValue({ value, error, requestId }) {\n    // Prevents an edge case where a request is resolved\n    // after the form is submitted and reloaded\n    if (!this.requestResolves[requestId]) return;\n    const { resolve, reject } = this.requestResolves[requestId];\n    delete this.requestResolves[requestId];\n    error ? reject(error) : resolve(value);\n  },\n  getClinicians(args) {\n    const message = 'fetch:clinicians';\n    const requestId = uniqueId('clinicians');\n\n    return this.requestValue({ args, message, requestId });\n  },\n  onFetchClinicians(args) {\n    this.resolveValue(args);\n  },\n  getDirectory(args) {\n    const message = 'fetch:directory';\n    const requestId = uniqueId('directory');\n\n    return this.requestValue({ args, message, requestId });\n  },\n  onFetchDirectory(args) {\n    this.resolveValue(args);\n  },\n  getField(args) {\n    const message = 'fetch:field';\n    const requestId = uniqueId('field');\n\n    return this.requestValue({ args, message, requestId });\n  },\n  onFetchField(args) {\n    this.resolveValue(args);\n  },\n  updateField(args) {\n    const message = 'update:field';\n    const requestId = uniqueId('field');\n\n    return this.requestValue({ args, message, requestId });\n  },\n  onUpdateField(args) {\n    this.resolveValue(args);\n  },\n  getIcd(args) {\n    const message = 'fetch:icd';\n    const requestId = uniqueId('icd');\n\n    return this.requestValue({ args, message, requestId });\n  },\n  onFetchIcd(args) {\n    this.resolveValue(args);\n  },\n  routes: {\n    'formapp/': 'renderForm',\n    'formapp/preview': 'renderPreview',\n    'formapp/:id': 'renderResponse',\n    'formapp/pdf/action/:actionId': 'renderActionPdf',\n    'formapp/pdf/:formId/:patientId(/:responseId)': 'renderPdf',\n  },\n  renderForm() {\n    this.request('fetch:form:data').then(renderForm);\n  },\n  renderPreview() {\n    this.request('fetch:form').then(renderPreview);\n  },\n  renderResponse(responseId) {\n    this.request('fetch:form:response', { responseId }).then(renderResponse);\n  },\n  renderActionPdf(actionId) {\n    this.once('form:pdf', renderPdf);\n    $('body').append(`<iframe class=\"iframe-hidden\" src=\"/formservice/action/${ actionId }\"></iframe>`);\n  },\n  renderPdf(formId, patientId, responseId) {\n    this.once('form:pdf', renderPdf);\n    $('body').append(`<iframe class=\"iframe-hidden\" src=\"/formservice/${ formId }/${ patientId }${ responseId ? `/${ responseId }` : '' }\"></iframe>`);\n  },\n});\n\nfunction startFormApp() {\n  $('#root').append(`\n    <div class=\"loader__bar js-progress-bar\">\n      <div class=\"loader__bar-progress--loop\"></div>\n    </div>\n    <div class=\"loader__text js-loading\">${ intl.regions.preload.loading }</div>\n  `);\n  router = new Router();\n  Backbone.history.start({ pushState: true });\n}\n\nexport {\n  startFormApp,\n};\n"],"names":["webformInit","Formio","Displays","displays","webform","prototype","init","this","options","data","extend","_submission","_data","call","evaluator","Evaluator","func","params","e","addError","evaluate","getSubmission","formData","formSubmission","responseData","reducers","evalContext","createForm","document","createElement","then","form","submission","reduce","memo","reducer","FormioUtils","destroy","NestedComponent","Components","components","nested","SelectComponent","select","SurveyComponent","survey","emptyValue","DateTimeComponent","datetime","formatValue","date","isString","length","Utils","moment","format","DirectoryComponent","schema","label","key","type","dataSrc","searchField","customOptions","noChoicesText","defaultSchema","constructor","args","super","updateCustomItems","debounce","updateItems","searchInput","forceUpdate","visible","itemsLoadedResolve","getCustomItems","Promise","resolve","component","custom","values","active","loading","items","setItems","catch","err","handleLoadingError","CustomButtonComponent","button","shouldDisabled","alwaysEnable","disabled","_disabled","parentDisabled","router","prevSubmission","scrollTop","window","scrollTo","top","updateField","fieldName","value","getField","getClinicians","teamId","getDirectory","directoryName","query","getIcd","term","getContext","contextScripts","baseContext","context","script","getScriptContext","Handlebars","TEMPLATES","parsePhoneNumber","use","snippet","noField","extendArgs","input","persistent","directory","updateSubmissionDebounce","request","onChange","changeReducers","curSubmission","hasChanged","getChangeReducers","structuredClone","setSubmission","fromChangeReducers","fromSubmission","onChangeDebounce","async","renderForm","definition","isReadOnly","storedSubmission","loaderReducers","submitReducers","beforeSubmit","getElementById","readOnly","instance","initialized","inEditGrid","nosubmit","off","on","errors","showErrors","map","error","message","submit","_isReady","response","cancel","setPristine","checkValidity","emit","trigger","intl","formapp","failedSubmit","Error","submitResponse","reducerFunction","fields","action","flow","artifacts","getResponse","each","isEmpty","renderPreview","isPreview","renderResponse","isResponse","renderMode","renderPdf","Router","Backbone","initialize","addEventListener","origin","$","versions","frontend","requestResolves","onFetchClinicians","onFetchDirectory","onFetchField","onUpdateField","onFetchIcd","once","parent","postMessage","requestValue","requestId","reject","resolveValue","uniqueId","routes","responseId","renderActionPdf","actionId","append","formId","patientId","startFormApp","regions","preload","start","pushState"],"sourceRoot":""}