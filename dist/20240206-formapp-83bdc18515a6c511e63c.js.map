{"version":3,"file":"20240206-formapp-83bdc18515a6c511e63c.js","mappings":"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","sources":["webpack://care-ops-frontend/./src/js/formapp/utils.js","webpack://care-ops-frontend/./src/js/formapp/components.js","webpack://care-ops-frontend/./src/js/formapp.js"],"sourcesContent":["/* global Formio, FormioUtils */\nimport { extend, reduce, values } from 'underscore';\nimport { addError } from 'js/datadog';\n\n// Note: Allows for setting the submission at form instantiation\n// https://github.com/formio/formio.js/pull/4580\nconst webformInit = Formio.Displays.displays.webform.prototype.init;\n\nFormio.Displays.displays.webform.prototype.init = function() {\n  if (this.options.data) {\n    const data = extend({}, this.options.data);\n    this._submission = { data };\n    this._data = data;\n  }\n  webformInit.call(this);\n};\n\n// NOTE: Evaluator should throw errors\n// https://github.com/formio/formio.js/issues/4613\nconst evaluator = Formio.Evaluator.evaluator;\nFormio.Evaluator.evaluator = function(func, ...params) {\n  try {\n    return evaluator(func, ...params);\n  } catch (e) {\n    addError(e);\n  }\n};\n\n// NOTE: Evaluate should also throw errors\nconst evaluate = Formio.Evaluator.evaluate;\nFormio.Evaluator.evaluate = function(func, ...params) {\n  try {\n    return evaluate(func, ...params);\n  } catch (e) {\n    addError(e);\n  }\n};\n\nfunction getScriptContext(contextScripts, baseContext) {\n  return Formio.createForm(document.createElement('div'), {}).then(form => {\n    const context = reduce(contextScripts, (memo, script) => {\n      return extend({}, memo, FormioUtils.evaluate(script, form.evalContext(memo)));\n    }, baseContext);\n\n    form.destroy();\n\n    return context;\n  });\n}\n\nfunction getSubmission(formData, formSubmission, responseData, reducers, evalContext) {\n  return Formio.createForm(document.createElement('div'), {}, { evalContext }).then(form => {\n    const submission = reduce(reducers, (memo, reducer) => {\n      return FormioUtils.evaluate(reducer, form.evalContext({ formSubmission: memo, formData, responseData })) || memo;\n    }, formSubmission);\n\n    form.destroy();\n\n    return submission;\n  });\n}\n\nconst hasChangedFunction = 'return function hasChanged(key) { return !_.isEqual(_.get(formSubmission, key), _.get(prevSubmission, key)); }';\n\nfunction getChangeReducers(form, changeReducers, curSubmission, prevSubmission) {\n  return reduce(changeReducers, (memo, reducer) => {\n    const context = form.evalContext({ formSubmission: memo, prevSubmission });\n    context.hasChanged = FormioUtils.evaluate(hasChangedFunction, context);\n    return FormioUtils.evaluate(reducer, context) || memo;\n  }, curSubmission);\n}\n\nfunction getResponse(form, submitReducers, formSubmission) {\n  const formData = { fields: {}, action: {}, flow: {} };\n\n  return reduce(submitReducers, (memo, reducer) => {\n    const context = form.evalContext({ formSubmission, formData: memo });\n    const reducerFunction = evaluator(reducer, context);\n\n    // User evaluate directly to throw errors\n    return evaluate(reducerFunction, values(context)) || memo;\n  }, formData);\n}\n\nexport {\n  getScriptContext,\n  getSubmission,\n  getChangeReducers,\n  getResponse,\n};\n","/* global Formio */\nimport { debounce } from 'underscore';\nconst NestedComponent = Formio.Components.components.nested;\nconst SelectComponent = Formio.Components.components.select;\n\n// Modifies the emptyValue to avoid error on php mutating {} to []\nclass SurveyComponent extends Formio.Components.components.survey {\n  get emptyValue() {\n    return [];\n  }\n}\n\nFormio.Components.components.survey = SurveyComponent;\n\nclass SnippetComponent extends NestedComponent {\n  constructor(...args) {\n    super(...args);\n    this.noField = true;\n  }\n  static schema(...extendArgs) {\n    return NestedComponent.schema({\n      label: 'Snippet',\n      key: 'snippet',\n      type: 'snippet',\n      components: [],\n      input: false,\n      persistent: false,\n      snippet: null,\n    }, ...extendArgs);\n  }\n}\n\n// NOTE: Outside of the schema much of the logic is slightly modified from SelectComponent\nclass DirectoryComponent extends SelectComponent {\n  static schema(...extend) {\n    return SelectComponent.schema({\n      label: 'Directory',\n      key: 'directory',\n      type: 'directory',\n      dataSrc: 'custom',\n      searchField: true,\n      customOptions: {\n        noChoicesText: 'Type a minimum of 3 characters for results',\n      },\n    }, ...extend);\n  }\n\n  get defaultSchema() {\n    return DirectoryComponent.schema();\n  }\n\n  constructor(...args) {\n    super(...args);\n    this.updateCustomItems = debounce(this.updateCustomItems, 300);\n  }\n\n  updateItems(searchInput, forceUpdate) {\n    if (!this.visible) {\n      this.itemsLoadedResolve();\n      return;\n    }\n\n    this.updateCustomItems(forceUpdate, searchInput);\n  }\n\n  // NOTE: Biggest modification is exposing the searchInput to the custom code\n  getCustomItems(searchInput) {\n    if (!searchInput || searchInput.length < 3) return Promise.resolve([]);\n\n    return this.evaluate(this.component.data.custom, {\n      values: [],\n      searchInput,\n    }, 'values');\n  }\n\n  updateCustomItems(forceUpdate, searchInput) {\n    if (!forceUpdate && !this.active) {\n      this.itemsLoadedResolve();\n      return;\n    }\n\n    this.loading = true;\n    this.getCustomItems(searchInput)\n      .then(items => {\n        this.loading = false;\n        this.setItems(items || []);\n      })\n      .catch(err => {\n        this.handleLoadingError(err);\n      });\n  }\n}\n\nclass CustomButtonComponent extends Formio.Components.components.button {\n  get shouldDisabled() {\n    if (this.component.alwaysEnable) return false;\n\n    return super.shouldDisabled;\n  }\n\n  set disabled(disabled) {\n    this._disabled = disabled;\n  }\n\n  get disabled() {\n    return !this.component.alwaysEnable && (this._disabled || this.parentDisabled);\n  }\n}\n\nFormio.use({\n  components: {\n    snippet: SnippetComponent,\n    directory: DirectoryComponent,\n    button: CustomButtonComponent,\n  },\n});\n","/* global Formio, FormioUtils */\nimport 'formiojs/dist/formio.form.min';\nimport 'formiojs/dist/formio.form.css';\nimport '@fortawesome/fontawesome-pro/scss/fontawesome.scss';\nimport '@fortawesome/fontawesome-pro/scss/v4-shims.scss';\nimport '@fortawesome/fontawesome-pro/scss/solid.scss';\nimport 'scss/formapp/bootstrap.min.css';\n\nimport 'scss/formapp-core.scss';\n\nimport { extend, map, debounce, uniqueId, each, isEmpty } from 'underscore';\nimport $ from 'jquery';\nimport Backbone from 'backbone';\nimport Handlebars from 'handlebars/runtime';\nimport parsePhoneNumber from 'libphonenumber-js/min';\nimport { addError } from 'js/datadog';\n\nimport intl from 'js/i18n';\n\nimport { versions } from './config';\n\nimport {\n  getScriptContext,\n  getSubmission,\n  getChangeReducers,\n  getResponse,\n} from 'js/formapp/utils';\n\nimport 'js/formapp/components';\n\nimport 'scss/formapp/comment.scss';\nimport 'scss/formapp/form.scss';\nimport 'scss/formapp/formio-overrides.scss';\nimport 'scss/formapp/print.scss';\nimport 'scss/formapp/pdf.scss';\n\nimport 'scss/modules/loader.scss';\n\nlet router;\n\nfunction scrollTop() {\n  window.scrollTo({ top: 0 });\n}\n\nfunction updateField(fieldName, value) {\n  return router.updateField({ fieldName, value });\n}\n\nfunction getField(fieldName) {\n  return router.getField({ fieldName });\n}\n\nfunction getClinicians({ teamId } = {}) {\n  return router.getClinicians({ teamId });\n}\n\nfunction getDirectory(directoryName, query) {\n  return router.getDirectory({ directoryName, query });\n}\n\nfunction getContext(contextScripts) {\n  return getScriptContext(contextScripts, { getClinicians, getDirectory, getField, updateField, Handlebars, TEMPLATES: {}, parsePhoneNumber });\n}\n\nlet prevSubmission;\n\nfunction updateSubmission() {\n  router.request('update:storedSubmission', prevSubmission);\n}\n\nconst updateSubmissionDebounce = debounce(updateSubmission, /* istanbul ignore next */ _TEST_ ? 100 : 2000);\n\nconst onChange = function(form, changeReducers) {\n  const data = getChangeReducers(form, changeReducers, structuredClone(form.submission.data), prevSubmission);\n\n  form.data = data;\n  form.setSubmission({ data }, { fromChangeReducers: true, fromSubmission: false });\n\n  prevSubmission = structuredClone(form.submission.data);\n  updateSubmissionDebounce();\n};\n\nconst onChangeDebounce = debounce(onChange, 100);\n\nasync function renderForm({ definition, isReadOnly, storedSubmission, formData, formSubmission, responseData, loaderReducers, changeReducers, submitReducers, contextScripts, beforeSubmit }) {\n  const evalContext = await getContext(contextScripts);\n\n  const submission = storedSubmission || await getSubmission(formData, formSubmission, responseData, loaderReducers, evalContext);\n  prevSubmission = structuredClone(submission);\n\n  const form = await Formio.createForm(document.getElementById('root'), definition, {\n    readOnly: isReadOnly,\n    evalContext,\n    data: submission,\n    onChange({ fromChangeReducers }, { instance }) {\n      if (fromChangeReducers && form.initialized) return;\n\n      // Prevents clearing submission on add/edit of editgrid\n      if (instance && instance.inEditGrid) return;\n\n      onChangeDebounce(form, changeReducers);\n    },\n  });\n\n  form.nosubmit = true;\n\n  router.off('form:submit');\n  router.off('form:errors');\n\n  router.on({\n    'form:errors'(errors) {\n      // NOTE: maps errors due to https://github.com/formio/formio.js/issues/3970\n      form.showErrors(map(errors, error => {\n        return { message: error };\n      }), true);\n    },\n    'form:submit'() {\n      form.submit();\n    },\n  });\n\n  form.on('prevPage', scrollTop);\n  form.on('nextPage', scrollTop);\n\n  form.on('error', () => {\n    router.request('ready:form');\n    form._isReady = true;\n  });\n\n  form.on('submit', response => {\n    // Prevents submission after a success\n    if (!form._isReady) return;\n    form._isReady = false;\n    // Always run one last change event on submit\n    onChangeDebounce.cancel();\n    onChange(form, changeReducers);\n    updateSubmissionDebounce.cancel();\n\n    form.setPristine(false);\n    if (!form.checkValidity(response.data, true, response.data)) {\n      form.emit('error');\n      return;\n    }\n\n    const data = FormioUtils.evaluate(beforeSubmit, form.evalContext({ formSubmission: response.data }));\n\n    if (!data) {\n      router.trigger('form:errors', [intl.formapp.failedSubmit]);\n      addError(new Error('beforeSubmit failure.'));\n      return;\n    }\n\n    try {\n      const submitResponse = extend(getResponse(form, submitReducers, data), response, { data });\n\n      // Remove empty data to prevent { __empty__: true }\n      each(['fields', 'flow', 'action'], key => {\n        if (isEmpty(submitResponse[key])) delete submitResponse[key];\n      });\n\n      router.request('submit:form', { response: submitResponse });\n    } catch (e) {\n      router.trigger('form:errors', [intl.formapp.failedSubmit]);\n      addError(e);\n    }\n  });\n\n  router.request('ready:form');\n  form._isReady = true;\n}\n\nasync function renderPreview({ definition, contextScripts }) {\n  const evalContext = await getContext(contextScripts);\n\n  extend(evalContext, { isPreview: true });\n\n  Formio.createForm(document.getElementById('root'), definition, { evalContext });\n}\n\nasync function renderResponse({ definition, formSubmission, contextScripts }) {\n  const evalContext = await getContext(contextScripts);\n\n  extend(evalContext, { isResponse: true });\n\n  Formio.createForm(document.getElementById('root'), definition, {\n    readOnly: true,\n    renderMode: 'form',\n    evalContext,\n    data: formSubmission,\n  }).then(form => {\n    form.on('prevPage', scrollTop);\n    form.on('nextPage', scrollTop);\n  });\n}\n\nasync function renderPdf({ definition, formData, formSubmission, responseData, loaderReducers, contextScripts }) {\n  const evalContext = await getContext(contextScripts);\n\n  const submission = await getSubmission(formData, formSubmission, responseData, loaderReducers, evalContext);\n\n  const form = await Formio.createForm(document.getElementById('root'), definition, {\n    evalContext,\n    data: submission,\n  });\n\n  form.nosubmit = true;\n}\n\nconst Router = Backbone.Router.extend({\n  initialize() {\n    window.addEventListener('message', ({ data, origin }) => {\n      /* istanbul ignore next: security check */\n      if (origin !== window.origin || !data || !data.message) return;\n\n      this.trigger(data.message, data.args);\n    }, false);\n\n    $(window).on('focus', () => {\n      this.request('focus');\n    });\n\n    this.request('version', versions.frontend);\n    this.requestResolves = {};\n    this.on({\n      'fetch:clinicians': this.onFetchClinicians,\n      'fetch:directory': this.onFetchDirectory,\n      'fetch:field': this.onFetchField,\n      'update:field': this.onUpdateField,\n    });\n  },\n  request(message, args = {}) {\n    const request = new Promise(resolve => {\n      this.once(message, resolve);\n      parent.postMessage({ message, args }, window.origin);\n    });\n\n    return request;\n  },\n  requestValue({ args, message, requestId }) {\n    const request = new Promise((resolve, reject) => {\n      this.requestResolves[requestId] = { resolve, reject };\n      parent.postMessage({\n        message,\n        args: extend({ requestId }, args),\n      }, window.origin);\n    });\n\n    return request;\n  },\n  resolveValue({ value, error, requestId }) {\n    // Prevents an edge case where a request is resolved\n    // after the form is submitted and reloaded\n    if (!this.requestResolves[requestId]) return;\n    const { resolve, reject } = this.requestResolves[requestId];\n    delete this.requestResolves[requestId];\n    error ? reject(error) : resolve(value);\n  },\n  getClinicians(args) {\n    const message = 'fetch:clinicians';\n    const requestId = uniqueId('clinicians');\n\n    return this.requestValue({ args, message, requestId });\n  },\n  onFetchClinicians(args) {\n    this.resolveValue(args);\n  },\n  getDirectory(args) {\n    const message = 'fetch:directory';\n    const requestId = uniqueId('directory');\n\n    return this.requestValue({ args, message, requestId });\n  },\n  onFetchDirectory(args) {\n    this.resolveValue(args);\n  },\n  getField(args) {\n    const message = 'fetch:field';\n    const requestId = uniqueId('field');\n\n    return this.requestValue({ args, message, requestId });\n  },\n  onFetchField(args) {\n    this.resolveValue(args);\n  },\n  updateField(args) {\n    const message = 'update:field';\n    const requestId = uniqueId('field');\n\n    return this.requestValue({ args, message, requestId });\n  },\n  onUpdateField(args) {\n    this.resolveValue(args);\n  },\n  routes: {\n    'formapp/': 'renderForm',\n    'formapp/preview': 'renderPreview',\n    'formapp/:id': 'renderResponse',\n    'formapp/pdf/action/:actionId': 'renderActionPdf',\n    'formapp/pdf/:formId/:patientId(/:responseId)': 'renderPdf',\n  },\n  renderForm() {\n    this.request('fetch:form:data').then(renderForm);\n  },\n  renderPreview() {\n    this.request('fetch:form').then(renderPreview);\n  },\n  renderResponse(responseId) {\n    this.request('fetch:form:response', { responseId }).then(renderResponse);\n  },\n  renderActionPdf(actionId) {\n    this.once('form:pdf', renderPdf);\n    $('body').append(`<iframe class=\"iframe-hidden\" src=\"/formservice/action/${ actionId }\"></iframe>`);\n  },\n  renderPdf(formId, patientId, responseId) {\n    this.once('form:pdf', renderPdf);\n    $('body').append(`<iframe class=\"iframe-hidden\" src=\"/formservice/${ formId }/${ patientId }${ responseId ? `/${ responseId }` : '' }\"></iframe>`);\n  },\n});\n\nfunction startFormApp() {\n  $('#root').append(`\n    <div class=\"loader__bar js-progress-bar\">\n      <div class=\"loader__bar-progress--loop\"></div>\n    </div>\n    <div class=\"loader__text js-loading\">${ intl.regions.preload.loading }</div>\n  `);\n  router = new Router();\n  Backbone.history.start({ pushState: true });\n}\n\nexport {\n  startFormApp,\n};\n"],"names":["webformInit","Formio","Displays","displays","webform","prototype","init","this","options","data","extend","_submission","_data","call","evaluator","Evaluator","func","params","e","addError","evaluate","getSubmission","formData","formSubmission","responseData","reducers","evalContext","createForm","document","createElement","then","form","submission","reduce","memo","reducer","FormioUtils","destroy","NestedComponent","Components","components","nested","SelectComponent","select","SurveyComponent","survey","emptyValue","DirectoryComponent","schema","label","key","type","dataSrc","searchField","customOptions","noChoicesText","defaultSchema","constructor","args","super","updateCustomItems","debounce","updateItems","searchInput","forceUpdate","visible","itemsLoadedResolve","getCustomItems","length","Promise","resolve","component","custom","values","active","loading","items","setItems","catch","err","handleLoadingError","CustomButtonComponent","button","shouldDisabled","alwaysEnable","disabled","_disabled","parentDisabled","router","prevSubmission","scrollTop","window","scrollTo","top","updateField","fieldName","value","getField","getClinicians","teamId","getDirectory","directoryName","query","getContext","contextScripts","baseContext","context","script","getScriptContext","Handlebars","TEMPLATES","parsePhoneNumber","use","snippet","noField","extendArgs","input","persistent","directory","updateSubmissionDebounce","request","onChange","changeReducers","curSubmission","hasChanged","getChangeReducers","structuredClone","setSubmission","fromChangeReducers","fromSubmission","onChangeDebounce","async","renderForm","definition","isReadOnly","storedSubmission","loaderReducers","submitReducers","beforeSubmit","getElementById","readOnly","instance","initialized","inEditGrid","nosubmit","off","on","errors","showErrors","map","error","message","submit","_isReady","response","cancel","setPristine","checkValidity","emit","trigger","intl","formapp","failedSubmit","Error","submitResponse","reducerFunction","fields","action","flow","getResponse","each","isEmpty","renderPreview","isPreview","renderResponse","isResponse","renderMode","renderPdf","Router","Backbone","initialize","addEventListener","origin","$","versions","frontend","requestResolves","onFetchClinicians","onFetchDirectory","onFetchField","onUpdateField","once","parent","postMessage","requestValue","requestId","reject","resolveValue","uniqueId","routes","responseId","renderActionPdf","actionId","append","formId","patientId","startFormApp","regions","preload","start","pushState"],"sourceRoot":""}